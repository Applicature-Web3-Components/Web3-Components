{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "@applicature/components": {
      "projectType": "library",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss",
          "changeDetection": "OnPush"
        },
        "@schematics/angular:application": {
          "strict": true
        }
      },
      "root": "projects/applicature/components",
      "sourceRoot": "projects/applicature/components/src",
      "prefix": "auc",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:ng-packagr",
          "options": {
            "project": "projects/applicature/components/ng-package.json"
          },
          "configurations": {
            "production": {
              "tsConfig": "projects/applicature/components/tsconfig.lib.prod.json"
            },
            "development": {
              "tsConfig": "projects/applicature/components/tsconfig.lib.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "projects/applicature/components/src/test.ts",
            "tsConfig": "projects/applicature/components/tsconfig.spec.json",
            "karmaConfig": "projects/applicature/components/karma.conf.js"
          }
        }
      }
    },
    "@applicature/styles": {
      "projectType": "library",
      "root": "projects/applicature/styles",
      "sourceRoot": "projects/applicature/styles/src",
      "prefix": "lib",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:ng-packagr",
          "options": {
            "project": "projects/applicature/styles/ng-package.json"
          },
          "configurations": {
            "production": {
              "tsConfig": "projects/applicature/styles/tsconfig.lib.prod.json"
            },
            "development": {
              "tsConfig": "projects/applicature/styles/tsconfig.lib.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "projects/applicature/styles/src/test.ts",
            "tsConfig": "projects/applicature/styles/tsconfig.spec.json",
            "karmaConfig": "projects/applicature/styles/karma.conf.js"
          }
        }
      }
    },
    "demo": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss"
        },
        "@schematics/angular:application": {
          "strict": true
        }
      },
      "root": "projects/demo",
      "sourceRoot": "projects/demo/src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "allowedCommonJsDependencies": [
              "@babel/runtime/helpers/slicedToArray",
              "@cvbb/eth-keyring",
              "@ensdomains/address-encoder",
              "@ensdomains/ensjs",
              "@ethereumjs/common",
              "@ethereumjs/tx",
              "@gnosis.pm/safe-apps-provider",
              "@gnosis.pm/safe-apps-sdk",
              "@ledgerhq/devices/lib/hid-framing",
              "@metamask/jazzicon",
              "@metamask/obs-store",
              "@shapeshiftoss/hdwallet-core",
              "@shapeshiftoss/hdwallet-keepkey-webusb",
              "@walletconnect/encoding",
              "@walletconnect/environment",
              "@walletconnect/qrcode-modal",
              "@walletconnect/socket-transport",
              "@walletconnect/web3-provider",
              "@walletconnect/window-metadata",
              "authereum",
              "crypto",
              "eth-lattice-keyring",
              "eth-provider",
              "eth-rpc-errors",
              "eth-sig-util",
              "ethereumjs-common",
              "ethereumjs-tx",
              "ethereumjs-util",
              "ethereumjs-util",
              "gridplus-sdk",
              "pump",
              "query-string",
              "rtcpeerconnection-shim",
              "sturdy-websocket",
              "trezor-connect",
              "tweetnacl",
              "walletlink",
              "web3",
              "web3-provider-engine",
              "web3-provider-engine/subproviders/cache",
              "web3-provider-engine/subproviders/filters",
              "web3-provider-engine/subproviders/fixture",
              "web3-provider-engine/subproviders/hooked-wallet",
              "web3-provider-engine/subproviders/nonce-tracker",
              "web3-provider-engine/subproviders/subscriptions",
              "hash.js"
            ],
            "outputPath": "dist/demo",
            "index": "projects/demo/src/index.html",
            "main": "projects/demo/src/main.ts",
            "polyfills": "projects/demo/src/polyfills.ts",
            "tsConfig": "projects/demo/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "projects/demo/src/favicon.ico",
              "projects/demo/src/assets"
            ],
            "styles": [
              "projects/demo/src/styles.scss"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": [
                "projects/applicature/styles/src/lib/scss"
              ]
            }
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "projects/demo/src/environments/environment.ts",
                  "with": "projects/demo/src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "demo:build:production"
            },
            "development": {
              "browserTarget": "demo:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "demo:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "projects/demo/src/test.ts",
            "polyfills": "projects/demo/src/polyfills.ts",
            "tsConfig": "projects/demo/tsconfig.spec.json",
            "karmaConfig": "projects/demo/karma.conf.js",
            "inlineStyleLanguage": "scss",
            "assets": [
              "projects/demo/src/favicon.ico",
              "projects/demo/src/assets"
            ],
            "styles": [
              "projects/demo/src/styles.scss"
            ],
            "scripts": []
          }
        }
      }
    },
    "ngx-components-doc": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss",
          "changeDetection": "OnPush"
        },
        "@schematics/angular:application": {
          "strict": true
        }
      },
      "root": "projects/ngx-components-doc",
      "sourceRoot": "projects/ngx-components-doc/src",
      "prefix": "doc",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/ngx-components-doc",
            "index": "projects/ngx-components-doc/src/index.html",
            "main": "projects/ngx-components-doc/src/main.ts",
            "polyfills": "projects/ngx-components-doc/src/polyfills.ts",
            "tsConfig": "projects/ngx-components-doc/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "projects/ngx-components-doc/src/favicon.ico",
              "projects/ngx-components-doc/src/assets"
            ],
            "styles": [
              "node_modules/@angular/material/prebuilt-themes/deeppurple-amber.css",
              "node_modules/code-prettify/styles/desert.css",
              "projects/ngx-components-doc/src/styles.scss"
            ],
            "stylePreprocessorOptions": {
              "includePaths": [
                "projects/applicature/styles/src/lib/scss",
                "projects/ngx-components-doc/src/scss"
              ]
            },
            "scripts": [
              "node_modules/marked/marked.min.js"
            ],
            "allowedCommonJsDependencies": [
              "@metamask/jazzicon",
              "web3",
              "tweetnacl",
              "ethereumjs-util",
              "ethereumjs-common",
              "rtcpeerconnection-shim",
              "gridplus-sdk",
              "buffer",
              "sturdy-websocket",
              "walletlink",
              "@walletconnect/web3-provider",
              "trezor-connect",
              "@ensdomains/ensjs",
              "eth-sig-util",
              "ethereumjs-tx",
              "eth-lattice-keyring",
              "@ethereumjs/tx",
              "@ethereumjs/common",
              "@shapeshiftoss/hdwallet-keepkey-webusb",
              "@shapeshiftoss/hdwallet-core",
              "@gnosis.pm/safe-apps-sdk",
              "@gnosis.pm/safe-apps-provider",
              "eth-provider",
              "@cvbb/eth-keyring",
              "authereum",
              "web3-provider-engine/subproviders/subscription",
              "web3-provider-engine/subproviders/nonce-tracker",
              "web3-provider-engine/subproviders/hooked-wallet",
              "web3-provider-engine/subproviders/fixture",
              "web3-provider-engine/subproviders/filters",
              "web3-provider-engine/subproviders/cache",
              "web3-provider-engine",
              "@walletconnect/qrcode-modal",
              "query-string",
              "@walletconnect/environment",
              "@walletconnect/socket-transport",
              "@walletconnect/window-metadata",
              "pump",
              "eth-rpc-errors",
              "@metamask/obs-store",
              "@ledgerhq/devices/lib/hid-framing",
              "@ensdomains/address-encoder",
              "@babel/runtime/helpers/slicedToArray",
              "create-hash"
            ]
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "3mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "projects/ngx-components-doc/src/environments/environment.ts",
                  "with": "projects/ngx-components-doc/src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "ngx-components-doc:build:production"
            },
            "development": {
              "browserTarget": "ngx-components-doc:build:development"
            }
          },
          "defaultConfiguration": "development",
          "options": {
            "port": 1337
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "ngx-components-doc:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "projects/ngx-components-doc/src/test.ts",
            "polyfills": "projects/ngx-components-doc/src/polyfills.ts",
            "tsConfig": "projects/ngx-components-doc/tsconfig.spec.json",
            "karmaConfig": "projects/ngx-components-doc/karma.conf.js",
            "inlineStyleLanguage": "scss",
            "assets": [
              "projects/ngx-components-doc/src/favicon.ico",
              "projects/ngx-components-doc/src/assets"
            ],
            "styles": [
              "projects/ngx-components-doc/src/styles.scss"
            ],
            "scripts": []
          }
        }
      }
    }
  },
  "defaultProject": "@applicature/components"
}
