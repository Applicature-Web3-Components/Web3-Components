{
	"id": 0,
	"name": "Applicature NGX Universal Components. - v0.0.20",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "Applicature NGX Universal Components.",
	"children": [
		{
			"id": 76,
			"name": "AUC_ALERT_POSITION",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 77,
					"name": "LEFT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/alert/enums/alert-position.enum.ts",
							"line": 2,
							"character": 2
						}
					],
					"defaultValue": "\"left\""
				},
				{
					"id": 78,
					"name": "RIGHT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/alert/enums/alert-position.enum.ts",
							"line": 3,
							"character": 2
						}
					],
					"defaultValue": "\"right\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						77,
						78
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/alert/enums/alert-position.enum.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 1,
			"name": "AUC_BALANCE_APPEARANCE",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 3,
					"name": "TRANSLUCENT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/account-balance/enums/balance-appearance.enum.ts",
							"line": 3,
							"character": 2
						}
					],
					"defaultValue": "\"translucent\""
				},
				{
					"id": 2,
					"name": "TRANSPARENT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/account-balance/enums/balance-appearance.enum.ts",
							"line": 2,
							"character": 2
						}
					],
					"defaultValue": "\"transparent\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						3,
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/account-balance/enums/balance-appearance.enum.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 109,
			"name": "AUC_BUTTON_APPEARANCE",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 110,
					"name": "FLAT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/button/enums/button-appearance.enum.ts",
							"line": 2,
							"character": 2
						}
					],
					"defaultValue": "\"flat\""
				},
				{
					"id": 111,
					"name": "ICON",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/button/enums/button-appearance.enum.ts",
							"line": 3,
							"character": 2
						}
					],
					"defaultValue": "\"icon\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						110,
						111
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/button/enums/button-appearance.enum.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 526,
			"name": "AUC_CHAIN_ID",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 527,
					"name": "ARBITRUM_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 28,
							"character": 2
						}
					],
					"defaultValue": "\"0xa4b1\""
				},
				{
					"id": 528,
					"name": "ARBITRUM_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 29,
							"character": 2
						}
					],
					"defaultValue": "\"0x66eeb\""
				},
				{
					"id": 529,
					"name": "ASTAR_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 30,
							"character": 2
						}
					],
					"defaultValue": "\"0x250\""
				},
				{
					"id": 530,
					"name": "ASTAR_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 31,
							"character": 2
						}
					],
					"defaultValue": "\"0x51\""
				},
				{
					"id": 531,
					"name": "AVALANCH_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 32,
							"character": 2
						}
					],
					"defaultValue": "\"0xa86a\""
				},
				{
					"id": 532,
					"name": "AVALANCH_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 33,
							"character": 2
						}
					],
					"defaultValue": "\"0xa869\""
				},
				{
					"id": 533,
					"name": "BSC_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 34,
							"character": 2
						}
					],
					"defaultValue": "\"0x38\""
				},
				{
					"id": 534,
					"name": "BSC_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 35,
							"character": 2
						}
					],
					"defaultValue": "\"0x61\""
				},
				{
					"id": 535,
					"name": "ETHEREUM_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 36,
							"character": 2
						}
					],
					"defaultValue": "\"0x1\""
				},
				{
					"id": 536,
					"name": "FANTOM_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 37,
							"character": 2
						}
					],
					"defaultValue": "\"0xfa\""
				},
				{
					"id": 537,
					"name": "FANTOM_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 38,
							"character": 2
						}
					],
					"defaultValue": "\"0xfa2\""
				},
				{
					"id": 538,
					"name": "GOERLI_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 39,
							"character": 2
						}
					],
					"defaultValue": "\"0x5\""
				},
				{
					"id": 539,
					"name": "KOVAN_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 40,
							"character": 2
						}
					],
					"defaultValue": "\"0x2a\""
				},
				{
					"id": 540,
					"name": "OPTIMISTIC_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 41,
							"character": 2
						}
					],
					"defaultValue": "\"0xa\""
				},
				{
					"id": 541,
					"name": "OPTIMISTIC_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 42,
							"character": 2
						}
					],
					"defaultValue": "\"0x45\""
				},
				{
					"id": 542,
					"name": "POLYGON_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 43,
							"character": 2
						}
					],
					"defaultValue": "\"0x89\""
				},
				{
					"id": 543,
					"name": "POLYGON_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 44,
							"character": 2
						}
					],
					"defaultValue": "\"0x13881\""
				},
				{
					"id": 544,
					"name": "RINKEBY_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 45,
							"character": 2
						}
					],
					"defaultValue": "\"0x4\""
				},
				{
					"id": 545,
					"name": "ROPSTEN_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 46,
							"character": 2
						}
					],
					"defaultValue": "\"0x3\""
				},
				{
					"id": 546,
					"name": "SHIDEN_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 47,
							"character": 2
						}
					],
					"defaultValue": "\"0x150\""
				},
				{
					"id": 547,
					"name": "SHIDEN_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 48,
							"character": 2
						}
					],
					"defaultValue": "\"0x51\""
				},
				{
					"id": 548,
					"name": "THETA_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 49,
							"character": 2
						}
					],
					"defaultValue": "\"0x169\""
				},
				{
					"id": 549,
					"name": "THETA_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 50,
							"character": 2
						}
					],
					"defaultValue": "\"0x16d\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						527,
						528,
						529,
						530,
						531,
						532,
						533,
						534,
						535,
						536,
						537,
						538,
						539,
						540,
						541,
						542,
						543,
						544,
						545,
						546,
						547,
						548,
						549
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/enums/chainId.enum.ts",
					"line": 27,
					"character": 12
				}
			]
		},
		{
			"id": 502,
			"name": "AUC_CHAIN_ID_NUM",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 503,
					"name": "ARBITRUM_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 2,
							"character": 2
						}
					],
					"defaultValue": "42161"
				},
				{
					"id": 504,
					"name": "ARBITRUM_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 3,
							"character": 2
						}
					],
					"defaultValue": "421611"
				},
				{
					"id": 505,
					"name": "ASTAR_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 4,
							"character": 2
						}
					],
					"defaultValue": "592"
				},
				{
					"id": 506,
					"name": "ASTAR_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 5,
							"character": 2
						}
					],
					"defaultValue": "81"
				},
				{
					"id": 507,
					"name": "AVALANCH_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 6,
							"character": 2
						}
					],
					"defaultValue": "43114"
				},
				{
					"id": 508,
					"name": "AVALANCH_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 7,
							"character": 2
						}
					],
					"defaultValue": "43113"
				},
				{
					"id": 509,
					"name": "BSC_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 8,
							"character": 2
						}
					],
					"defaultValue": "56"
				},
				{
					"id": 510,
					"name": "BSC_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 9,
							"character": 2
						}
					],
					"defaultValue": "97"
				},
				{
					"id": 511,
					"name": "ETHEREUM_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 10,
							"character": 2
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 512,
					"name": "FANTOM_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 11,
							"character": 2
						}
					],
					"defaultValue": "250"
				},
				{
					"id": 513,
					"name": "FANTOM_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 12,
							"character": 2
						}
					],
					"defaultValue": "4002"
				},
				{
					"id": 514,
					"name": "GOERLI_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 13,
							"character": 2
						}
					],
					"defaultValue": "5"
				},
				{
					"id": 515,
					"name": "KOVAN_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 14,
							"character": 2
						}
					],
					"defaultValue": "42"
				},
				{
					"id": 516,
					"name": "OPTIMISTIC_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 15,
							"character": 2
						}
					],
					"defaultValue": "10"
				},
				{
					"id": 517,
					"name": "OPTIMISTIC_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 16,
							"character": 2
						}
					],
					"defaultValue": "69"
				},
				{
					"id": 518,
					"name": "POLYGON_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 17,
							"character": 2
						}
					],
					"defaultValue": "137"
				},
				{
					"id": 519,
					"name": "POLYGON_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 18,
							"character": 2
						}
					],
					"defaultValue": "80001"
				},
				{
					"id": 520,
					"name": "RINKEBY_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 19,
							"character": 2
						}
					],
					"defaultValue": "4"
				},
				{
					"id": 521,
					"name": "ROPSTEN_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 20,
							"character": 2
						}
					],
					"defaultValue": "3"
				},
				{
					"id": 522,
					"name": "SHIDEN_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 21,
							"character": 2
						}
					],
					"defaultValue": "336"
				},
				{
					"id": 523,
					"name": "SHIDEN_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 22,
							"character": 2
						}
					],
					"defaultValue": "81"
				},
				{
					"id": 524,
					"name": "THETA_MAINNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 23,
							"character": 2
						}
					],
					"defaultValue": "361"
				},
				{
					"id": 525,
					"name": "THETA_TESTNET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/chainId.enum.ts",
							"line": 24,
							"character": 2
						}
					],
					"defaultValue": "365"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						503,
						504,
						505,
						506,
						507,
						508,
						509,
						510,
						511,
						512,
						513,
						514,
						515,
						516,
						517,
						518,
						519,
						520,
						521,
						522,
						523,
						524,
						525
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/enums/chainId.enum.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 151,
			"name": "AUC_CONNECT_WALLET_APPEARANCE",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 154,
					"name": "BUTTON",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/connect-wallet/enums/connect-wallet-appearance.enum.ts",
							"line": 4,
							"character": 2
						}
					],
					"defaultValue": "\"button\""
				},
				{
					"id": 152,
					"name": "DEFAULT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/connect-wallet/enums/connect-wallet-appearance.enum.ts",
							"line": 2,
							"character": 2
						}
					],
					"defaultValue": "\"default\""
				},
				{
					"id": 153,
					"name": "ICON",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/connect-wallet/enums/connect-wallet-appearance.enum.ts",
							"line": 3,
							"character": 2
						}
					],
					"defaultValue": "\"icon\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						154,
						152,
						153
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/connect-wallet/enums/connect-wallet-appearance.enum.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 326,
			"name": "AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 333,
					"name": "CLASSES",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/enums/customize-dialog-config-keys.enum.ts",
							"line": 8,
							"character": 2
						}
					],
					"defaultValue": "\"classes\""
				},
				{
					"id": 328,
					"name": "HEIGHT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/enums/customize-dialog-config-keys.enum.ts",
							"line": 3,
							"character": 2
						}
					],
					"defaultValue": "\"height\""
				},
				{
					"id": 332,
					"name": "MAX_HEIGHT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/enums/customize-dialog-config-keys.enum.ts",
							"line": 7,
							"character": 2
						}
					],
					"defaultValue": "\"maxHeight\""
				},
				{
					"id": 331,
					"name": "MAX_WIDTH",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/enums/customize-dialog-config-keys.enum.ts",
							"line": 6,
							"character": 2
						}
					],
					"defaultValue": "\"maxWidth\""
				},
				{
					"id": 330,
					"name": "MIN_HEIGHT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/enums/customize-dialog-config-keys.enum.ts",
							"line": 5,
							"character": 2
						}
					],
					"defaultValue": "\"minHeight\""
				},
				{
					"id": 329,
					"name": "MIN_WIDTH",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/enums/customize-dialog-config-keys.enum.ts",
							"line": 4,
							"character": 2
						}
					],
					"defaultValue": "\"minWidth\""
				},
				{
					"id": 334,
					"name": "POSITION",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/enums/customize-dialog-config-keys.enum.ts",
							"line": 9,
							"character": 2
						}
					],
					"defaultValue": "\"position\""
				},
				{
					"id": 327,
					"name": "WIDTH",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/enums/customize-dialog-config-keys.enum.ts",
							"line": 2,
							"character": 2
						}
					],
					"defaultValue": "\"width\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						333,
						328,
						332,
						331,
						330,
						329,
						334,
						327
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/dialog/enums/customize-dialog-config-keys.enum.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 335,
			"name": "AUC_DIALOG_POSITIONS",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 336,
					"name": "BOTTOM",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/enums/dialog-positions.enum.ts",
							"line": 2,
							"character": 2
						}
					],
					"defaultValue": "\"bottom\""
				},
				{
					"id": 342,
					"name": "BOTTOM_LEFT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/enums/dialog-positions.enum.ts",
							"line": 8,
							"character": 2
						}
					],
					"defaultValue": "\"bottom-left\""
				},
				{
					"id": 343,
					"name": "BOTTOM_RIGHT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/enums/dialog-positions.enum.ts",
							"line": 9,
							"character": 2
						}
					],
					"defaultValue": "\"bottom-right\""
				},
				{
					"id": 337,
					"name": "LEFT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/enums/dialog-positions.enum.ts",
							"line": 3,
							"character": 2
						}
					],
					"defaultValue": "\"left\""
				},
				{
					"id": 338,
					"name": "RIGHT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/enums/dialog-positions.enum.ts",
							"line": 4,
							"character": 2
						}
					],
					"defaultValue": "\"right\""
				},
				{
					"id": 339,
					"name": "TOP",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/enums/dialog-positions.enum.ts",
							"line": 5,
							"character": 2
						}
					],
					"defaultValue": "\"top\""
				},
				{
					"id": 340,
					"name": "TOP_LEFT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/enums/dialog-positions.enum.ts",
							"line": 6,
							"character": 2
						}
					],
					"defaultValue": "\"top-left\""
				},
				{
					"id": 341,
					"name": "TOP_RIGHT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/enums/dialog-positions.enum.ts",
							"line": 7,
							"character": 2
						}
					],
					"defaultValue": "\"top-right\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						336,
						342,
						343,
						337,
						338,
						339,
						340,
						341
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/dialog/enums/dialog-positions.enum.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 550,
			"name": "AUC_ETH_EVENTS",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 551,
					"name": "ACCOUNT_CHANGED",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/eth-events.ts",
							"line": 2,
							"character": 2
						}
					],
					"defaultValue": "\"accountsChanged\""
				},
				{
					"id": 552,
					"name": "CHAIN_CHANGED",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/eth-events.ts",
							"line": 3,
							"character": 2
						}
					],
					"defaultValue": "\"chainChanged\""
				},
				{
					"id": 553,
					"name": "CONNECT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/eth-events.ts",
							"line": 4,
							"character": 2
						}
					],
					"defaultValue": "\"connect\""
				},
				{
					"id": 554,
					"name": "DISCONNECT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/eth-events.ts",
							"line": 5,
							"character": 2
						}
					],
					"defaultValue": "\"disconnect\""
				},
				{
					"id": 555,
					"name": "MESSAGE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/eth-events.ts",
							"line": 6,
							"character": 2
						}
					],
					"defaultValue": "\"message\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						551,
						552,
						553,
						554,
						555
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/enums/eth-events.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 556,
			"name": "AUC_ETH_METHODS",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 558,
					"name": "ADD_ETHEREUM_CHAIN",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/eth-methods.ts",
							"line": 3,
							"character": 2
						}
					],
					"defaultValue": "\"wallet_addEthereumChain\""
				},
				{
					"id": 557,
					"name": "SWITCH_ETHEREUM_CHAIN",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/eth-methods.ts",
							"line": 2,
							"character": 2
						}
					],
					"defaultValue": "\"wallet_switchEthereumChain\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						558,
						557
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/enums/eth-methods.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 248,
			"name": "AUC_IDENTICON_POSITION",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 249,
					"name": "LEFT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/directives/identicon/enums/identicon-position.enum.ts",
							"line": 2,
							"character": 2
						}
					],
					"defaultValue": "\"left\""
				},
				{
					"id": 250,
					"name": "RIGHT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/directives/identicon/enums/identicon-position.enum.ts",
							"line": 3,
							"character": 2
						}
					],
					"defaultValue": "\"right\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						249,
						250
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/directives/identicon/enums/identicon-position.enum.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 559,
			"name": "AUC_METAMASK_CODES",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 560,
					"name": "CANT_SPECIFY_DEFAULT_CHAIN",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/metamask-codes.enum.ts",
							"line": 2,
							"character": 2
						}
					],
					"defaultValue": "-32602"
				},
				{
					"id": 561,
					"name": "UNRECOGNIZED_CHAIN_ID",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/metamask-codes.enum.ts",
							"line": 3,
							"character": 2
						}
					],
					"defaultValue": "4902"
				},
				{
					"id": 562,
					"name": "USER_REJECTED_REQUEST",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/metamask-codes.enum.ts",
							"line": 4,
							"character": 2
						}
					],
					"defaultValue": "4001"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						560,
						561,
						562
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/enums/metamask-codes.enum.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 497,
			"name": "AUC_POSITIONS",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 498,
					"name": "ABOVE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/applicature-positions.enum.ts",
							"line": 2,
							"character": 2
						}
					],
					"defaultValue": "\"above\""
				},
				{
					"id": 501,
					"name": "AFTER",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/applicature-positions.enum.ts",
							"line": 5,
							"character": 2
						}
					],
					"defaultValue": "\"after\""
				},
				{
					"id": 500,
					"name": "BEFORE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/applicature-positions.enum.ts",
							"line": 4,
							"character": 2
						}
					],
					"defaultValue": "\"before\""
				},
				{
					"id": 499,
					"name": "BELOW",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/applicature-positions.enum.ts",
							"line": 3,
							"character": 2
						}
					],
					"defaultValue": "\"below\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						498,
						501,
						500,
						499
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/enums/applicature-positions.enum.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 563,
			"name": "AUC_SORT_DIRECTION",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 564,
					"name": "ASC",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/sort-direction.enum.ts",
							"line": 2,
							"character": 2
						}
					],
					"defaultValue": "\"asc\""
				},
				{
					"id": 565,
					"name": "DESC",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/sort-direction.enum.ts",
							"line": 3,
							"character": 2
						}
					],
					"defaultValue": "\"desc\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						564,
						565
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/enums/sort-direction.enum.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 566,
			"name": "AUC_TRANSACTION_STATUS",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 567,
					"name": "FAIL",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/transaction-status.enum.ts",
							"line": 2,
							"character": 2
						}
					],
					"defaultValue": "\"fail\""
				},
				{
					"id": 569,
					"name": "PENDING",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/transaction-status.enum.ts",
							"line": 4,
							"character": 2
						}
					],
					"defaultValue": "\"pending\""
				},
				{
					"id": 568,
					"name": "SUCCESS",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/enums/transaction-status.enum.ts",
							"line": 3,
							"character": 2
						}
					],
					"defaultValue": "\"success\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						567,
						569,
						568
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/enums/transaction-status.enum.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 880,
			"name": "AUC_TRANSFER_STEPS",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 881,
					"name": "APPROVE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/enums/transfer-steps.enum.ts",
							"line": 2,
							"character": 2
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 882,
					"name": "CONFIRM",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/enums/transfer-steps.enum.ts",
							"line": 3,
							"character": 2
						}
					],
					"defaultValue": "2"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						881,
						882
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/modals/transfer-modal/enums/transfer-steps.enum.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 611,
			"name": "AUC_VALUE_TYPES",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 612,
					"name": "ARRAY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/helpers/check-value-type.helper.ts",
							"line": 2,
							"character": 2
						}
					],
					"defaultValue": "\"Array\""
				},
				{
					"id": 613,
					"name": "BLOB",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/helpers/check-value-type.helper.ts",
							"line": 3,
							"character": 2
						}
					],
					"defaultValue": "\"Blob\""
				},
				{
					"id": 614,
					"name": "BOOLEAN",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/helpers/check-value-type.helper.ts",
							"line": 4,
							"character": 2
						}
					],
					"defaultValue": "\"Boolean\""
				},
				{
					"id": 615,
					"name": "FILE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/helpers/check-value-type.helper.ts",
							"line": 5,
							"character": 2
						}
					],
					"defaultValue": "\"File\""
				},
				{
					"id": 616,
					"name": "FUNCTION",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/helpers/check-value-type.helper.ts",
							"line": 6,
							"character": 2
						}
					],
					"defaultValue": "\"Function\""
				},
				{
					"id": 617,
					"name": "NUMBER",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/helpers/check-value-type.helper.ts",
							"line": 7,
							"character": 2
						}
					],
					"defaultValue": "\"Number\""
				},
				{
					"id": 618,
					"name": "OBJECT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/helpers/check-value-type.helper.ts",
							"line": 8,
							"character": 2
						}
					],
					"defaultValue": "\"Object\""
				},
				{
					"id": 619,
					"name": "STRING",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/helpers/check-value-type.helper.ts",
							"line": 9,
							"character": 2
						}
					],
					"defaultValue": "\"String\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						612,
						613,
						614,
						615,
						616,
						617,
						618,
						619
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/helpers/check-value-type.helper.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 644,
			"name": "AUC_WLC_ICON",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"comment": {
				"shortText": "Supported font icons"
			},
			"children": [
				{
					"id": 645,
					"name": "ACTIVE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/icon/enums/wlc-icon.enum.ts",
							"line": 5,
							"character": 2
						}
					],
					"defaultValue": "\"wcl-icon-active\""
				},
				{
					"id": 646,
					"name": "ARROW_DOWN",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/icon/enums/wlc-icon.enum.ts",
							"line": 6,
							"character": 2
						}
					],
					"defaultValue": "\"wcl-icon-arrow-down\""
				},
				{
					"id": 647,
					"name": "ARROW_UP",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/icon/enums/wlc-icon.enum.ts",
							"line": 7,
							"character": 2
						}
					],
					"defaultValue": "\"wcl-icon-arrow-up\""
				},
				{
					"id": 648,
					"name": "CHECK",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/icon/enums/wlc-icon.enum.ts",
							"line": 8,
							"character": 2
						}
					],
					"defaultValue": "\"wcl-icon-check\""
				},
				{
					"id": 649,
					"name": "CHEVRON_DOWN",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/icon/enums/wlc-icon.enum.ts",
							"line": 9,
							"character": 2
						}
					],
					"defaultValue": "\"wcl-icon-chevron-down\""
				},
				{
					"id": 650,
					"name": "CHEVRON_UP",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/icon/enums/wlc-icon.enum.ts",
							"line": 10,
							"character": 2
						}
					],
					"defaultValue": "\"wcl-icon-chevron-up\""
				},
				{
					"id": 651,
					"name": "CLOSE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/icon/enums/wlc-icon.enum.ts",
							"line": 11,
							"character": 2
						}
					],
					"defaultValue": "\"wcl-icon-close\""
				},
				{
					"id": 652,
					"name": "COPY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/icon/enums/wlc-icon.enum.ts",
							"line": 12,
							"character": 2
						}
					],
					"defaultValue": "\"wcl-icon-copy\""
				},
				{
					"id": 653,
					"name": "EXTERNAL_LINK",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/icon/enums/wlc-icon.enum.ts",
							"line": 13,
							"character": 2
						}
					],
					"defaultValue": "\"wcl-icon-external-link\""
				},
				{
					"id": 654,
					"name": "FAIL",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/icon/enums/wlc-icon.enum.ts",
							"line": 14,
							"character": 2
						}
					],
					"defaultValue": "\"wcl-icon-fail\""
				},
				{
					"id": 655,
					"name": "MINUS",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/icon/enums/wlc-icon.enum.ts",
							"line": 15,
							"character": 2
						}
					],
					"defaultValue": "\"wcl-icon-minus\""
				},
				{
					"id": 656,
					"name": "PLUS",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/icon/enums/wlc-icon.enum.ts",
							"line": 16,
							"character": 2
						}
					],
					"defaultValue": "\"wcl-icon-plus\""
				},
				{
					"id": 657,
					"name": "RECENT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/icon/enums/wlc-icon.enum.ts",
							"line": 17,
							"character": 2
						}
					],
					"defaultValue": "\"wcl-icon-recent\""
				},
				{
					"id": 658,
					"name": "STAR",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/icon/enums/wlc-icon.enum.ts",
							"line": 18,
							"character": 2
						}
					],
					"defaultValue": "\"wcl-icon-star\""
				},
				{
					"id": 659,
					"name": "USER",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/icon/enums/wlc-icon.enum.ts",
							"line": 19,
							"character": 2
						}
					],
					"defaultValue": "\"wcl-icon-user\""
				},
				{
					"id": 660,
					"name": "WALLET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/icon/enums/wlc-icon.enum.ts",
							"line": 20,
							"character": 2
						}
					],
					"defaultValue": "\"wcl-icon-wallet\""
				},
				{
					"id": 661,
					"name": "WALLET_CONNECT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/icon/enums/wlc-icon.enum.ts",
							"line": 21,
							"character": 2
						}
					],
					"defaultValue": "\"wcl-icon-wallet-connect\""
				},
				{
					"id": 662,
					"name": "WRONG",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/icon/enums/wlc-icon.enum.ts",
							"line": 22,
							"character": 2
						}
					],
					"defaultValue": "\"wcl-icon-wrong\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						645,
						646,
						647,
						648,
						649,
						650,
						651,
						652,
						653,
						654,
						655,
						656,
						657,
						658,
						659,
						660,
						661,
						662
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/icon/enums/wlc-icon.enum.ts",
					"line": 4,
					"character": 12
				}
			]
		},
		{
			"id": 921,
			"name": "AUC_WRONG_NETWORK_APPEARANCE",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 922,
					"name": "DISCONNECT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/wrong-network-modal/enums/wrong-network-appearance.enum.ts",
							"line": 2,
							"character": 2
						}
					],
					"defaultValue": "\"disconnect\""
				},
				{
					"id": 924,
					"name": "NONE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/wrong-network-modal/enums/wrong-network-appearance.enum.ts",
							"line": 4,
							"character": 2
						}
					],
					"defaultValue": "\"none\""
				},
				{
					"id": 923,
					"name": "SWITCH",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/wrong-network-modal/enums/wrong-network-appearance.enum.ts",
							"line": 3,
							"character": 2
						}
					],
					"defaultValue": "\"switch\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						922,
						924,
						923
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/modals/wrong-network-modal/enums/wrong-network-appearance.enum.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 10,
			"name": "AucAccountBalanceComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-account-balance',\n  templateUrl: './account-balance.component.html',\n  styleUrls: [ './account-balance.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}"
					}
				}
			],
			"children": [
				{
					"id": 11,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/account-balance/account-balance.component.ts",
							"line": 108,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 12,
							"name": "new AucAccountBalanceComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 13,
									"name": "_cdr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "ChangeDetectorRef",
										"package": "@angular/core",
										"name": "ChangeDetectorRef"
									}
								},
								{
									"id": 14,
									"name": "_walletConnectService",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1027,
										"name": "AucWalletConnectService"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 10,
								"name": "AucAccountBalanceComponent"
							}
						}
					]
				},
				{
					"id": 25,
					"name": "COLOR_GROUP",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/account-balance/account-balance.component.ts",
							"line": 89,
							"character": 9
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"name": "AS_COLOR_GROUP"
						}
					},
					"defaultValue": "AS_COLOR_GROUP"
				},
				{
					"id": 23,
					"name": "activeNetwork",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/account-balance/account-balance.component.ts",
							"line": 87,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 832,
						"name": "AucNetworkOption"
					}
				},
				{
					"id": 21,
					"name": "address$",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/account-balance/account-balance.component.ts",
							"line": 85,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Observable",
						"package": "rxjs",
						"name": "Observable"
					}
				},
				{
					"id": 19,
					"name": "addressConfig",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link addressConfig} - It's an `@Input()` parameter. <br>\nConfiguration for account address button <br>\nIt's an optional parameter.<br>"
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/account-balance/account-balance.component.ts",
							"line": 75,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 4,
						"name": "AucAccountBalanceAddressConfig"
					}
				},
				{
					"id": 15,
					"name": "appearance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link appearance} - It's an `@Input()` parameter. <br>\nSets style for appearance.<br>\nYou can use one of the values from enum {@link AUC_BALANCE_APPEARANCE}.<br>\nIt's an optional parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/account-balance/account-balance.component.ts",
							"line": 41,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 9,
						"name": "AucBalanceAppearance"
					}
				},
				{
					"id": 22,
					"name": "balance$",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/account-balance/account-balance.component.ts",
							"line": 86,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Observable",
						"package": "rxjs",
						"name": "Observable"
					}
				},
				{
					"id": 16,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link color} - It's an `@Input()` parameter. <br>\nSets theme of the button. <br>\nIt's an optional parameter. The default value is white. <br>\nYou can use enum {@link AS_COLOR_GROUP}."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/account-balance/account-balance.component.ts",
							"line": 50,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "AsColorGroup"
					},
					"defaultValue": "AS_COLOR_GROUP.WHITE"
				},
				{
					"id": 26,
					"name": "identicon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link identicon} - Shows identicon if provided."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/account-balance/account-balance.component.ts",
							"line": 95,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "HTMLDivElement",
						"package": "typescript",
						"name": "HTMLDivElement"
					}
				},
				{
					"id": 17,
					"name": "isCurrency",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link isCurrency} - It's an `@Input()` parameter. <br>\nShows Currency icon from supported networks list. <br>\nYou will set supported networks when initialize library, {@link AucNetworkOption.icon}. <br>\nIt's an optional parameter. The default value is false."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/account-balance/account-balance.component.ts",
							"line": 59,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 20,
					"name": "onAddressClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link onAddressClick} - It's an `@Output()` parameter. <br>\nEmits an action when account button was clicked. <br>\nEmitted value is native click value."
					},
					"decorators": [
						{
							"name": "Output",
							"type": {
								"type": "reference",
								"qualifiedName": "OutputDecorator",
								"package": "@angular/core",
								"name": "Output"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/account-balance/account-balance.component.ts",
							"line": 83,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"qualifiedName": "EventEmitter",
						"package": "@angular/core",
						"name": "EventEmitter"
					},
					"defaultValue": "..."
				},
				{
					"id": 18,
					"name": "showAddress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link showAddress} - It's an `@Input()` parameter. <br>\nShow or hide account address. <br>\nIt's an optional parameter. The default value is false. <br>"
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/account-balance/account-balance.component.ts",
							"line": 67,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 24,
					"name": "styleProperties",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/account-balance/account-balance.component.ts",
							"line": 88,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 264,
							"name": "AucSetStyleProp"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 28,
					"name": "classNames",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/account-balance/account-balance.component.ts",
							"line": 100,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 29,
							"name": "classNames",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 30,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 31,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 32,
												"name": "el",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								}
							}
						}
					]
				},
				{
					"id": 35,
					"name": "ngOnChanges",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/account-balance/account-balance.component.ts",
							"line": 144,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 36,
							"name": "ngOnChanges",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnChanges.ngOnChanges"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnChanges.ngOnChanges"
					}
				},
				{
					"id": 33,
					"name": "ngOnInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/account-balance/account-balance.component.ts",
							"line": 129,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 34,
							"name": "ngOnInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnInit.ngOnInit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnInit.ngOnInit"
					}
				},
				{
					"id": 37,
					"name": "onAccountButtonClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/account-balance/account-balance.component.ts",
							"line": 162,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 38,
							"name": "onAccountButtonClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 39,
									"name": "evt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						11
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						25,
						23,
						21,
						19,
						15,
						22,
						16,
						26,
						17,
						20,
						18,
						24
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						28
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						35,
						33,
						37
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/account-balance/account-balance.component.ts",
					"line": 33,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "OnInit",
					"package": "@angular/core",
					"name": "OnInit"
				},
				{
					"type": "reference",
					"qualifiedName": "OnChanges",
					"package": "@angular/core",
					"name": "OnChanges"
				}
			]
		},
		{
			"id": 47,
			"name": "AucAccountButtonComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-account-button',\n  templateUrl: './account-button.component.html',\n  styleUrls: [ './account-button.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}"
					}
				}
			],
			"children": [
				{
					"id": 48,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/account-button/account-button.component.ts",
							"line": 89,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 49,
							"name": "new AucAccountButtonComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 50,
									"name": "_cdr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "ChangeDetectorRef",
										"package": "@angular/core",
										"name": "ChangeDetectorRef"
									}
								},
								{
									"id": 51,
									"name": "_walletConnectService",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1027,
										"name": "AucWalletConnectService"
									}
								},
								{
									"id": 52,
									"name": "_elementRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "HTMLElement",
												"package": "typescript",
												"name": "HTMLElement"
											}
										],
										"qualifiedName": "ElementRef",
										"package": "@angular/core",
										"name": "ElementRef"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 47,
								"name": "AucAccountButtonComponent"
							}
						}
					]
				},
				{
					"id": 53,
					"name": "account",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link account} - It's an `@Input()` parameter. <br>\nUser account related information. <br>\nRequired parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/account-button/account-button.component.ts",
							"line": 33,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 40,
						"name": "AucAccountData"
					}
				},
				{
					"id": 59,
					"name": "accountAddress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/account-button/account-button.component.ts",
							"line": 84,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 56,
					"name": "accountDropdownConfig",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "{@link accountDropdownConfig} - It's an `@Input()` parameter. <br>\nYou can customize dropdown position and overlay. <br>\nThis is an optional parameter. <br>\nThe default value is: <br>\n{\n  overlay: {\n    transparent: true\n  },\n  position: {\n    vertical: AUC_POSITIONS.BELOW,\n    horizontal: AUC_POSITIONS.BEFORE\n  }\n  }"
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/account-button/account-button.component.ts",
							"line": 66,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 465,
						"name": "AucDropdownConfig"
					},
					"defaultValue": "..."
				},
				{
					"id": 60,
					"name": "disconnectBtnColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/account-button/account-button.component.ts",
							"line": 85,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "AsColorGroup"
					},
					"defaultValue": "AS_COLOR_GROUP.RED"
				},
				{
					"id": 58,
					"name": "isOptionsOpen",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/account-button/account-button.component.ts",
							"line": 83,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 57,
					"name": "optionEmitter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link optionEmitter} - It's an `@Output()` parameter. <br>\nEmits selected option from the list."
					},
					"decorators": [
						{
							"name": "Output",
							"type": {
								"type": "reference",
								"qualifiedName": "OutputDecorator",
								"package": "@angular/core",
								"name": "Output"
							},
							"arguments": {
								"bindingPropertyName": "'optionClick'"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/account-button/account-button.component.ts",
							"line": 81,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 43,
								"name": "AucAccountOption"
							}
						],
						"qualifiedName": "EventEmitter",
						"package": "@angular/core",
						"name": "EventEmitter"
					},
					"defaultValue": "..."
				},
				{
					"id": 54,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link options} - It's an `@Input()` parameter. <br>\nList of options in popover. <br>\nIt's an optional parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/account-button/account-button.component.ts",
							"line": 41,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 43,
							"name": "AucAccountOption"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 55,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link size} - It's an `@Input()` parameter. <br>\nSets size of the avatar. <br>\nIt's an optional parameter. The default value is 40."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/account-button/account-button.component.ts",
							"line": 49,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "40"
				},
				{
					"id": 62,
					"name": "ngOnInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/account-button/account-button.component.ts",
							"line": 96,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 63,
							"name": "ngOnInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnInit.ngOnInit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnInit.ngOnInit"
					}
				},
				{
					"id": 70,
					"name": "onChangeWalletProviderClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/account-button/account-button.component.ts",
							"line": 117,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 71,
							"name": "onChangeWalletProviderClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 72,
					"name": "onDisconnectClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/account-button/account-button.component.ts",
							"line": 124,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 73,
							"name": "onDisconnectClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 67,
					"name": "onOptionClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/account-button/account-button.component.ts",
							"line": 111,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 68,
							"name": "onOptionClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 69,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 43,
										"name": "AucAccountOption"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 64,
					"name": "setOpened",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/account-button/account-button.component.ts",
							"line": 107,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 65,
							"name": "setOpened",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 66,
									"name": "opened",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						48
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						53,
						59,
						56,
						60,
						58,
						57,
						54,
						55
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						62,
						70,
						72,
						67,
						64
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/account-button/account-button.component.ts",
					"line": 26,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "OnInit",
					"package": "@angular/core",
					"name": "OnInit"
				}
			]
		},
		{
			"id": 854,
			"name": "AucAccountModalComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-account-modal',\n  templateUrl: './account-modal.component.html',\n  styleUrls: [ './account-modal.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}"
					}
				}
			],
			"children": [
				{
					"id": 855,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/account-modal/account-modal.component.ts",
							"line": 28,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 856,
							"name": "new AucAccountModalComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 857,
									"name": "_config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 411,
										"typeArguments": [
											{
												"type": "reference",
												"id": 848,
												"name": "AucAccountModalData"
											}
										],
										"name": "AucDialogConfig"
									}
								},
								{
									"id": 858,
									"name": "_dialogRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 443,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "AucDialogRef"
									}
								},
								{
									"id": 859,
									"name": "_cdr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "ChangeDetectorRef",
										"package": "@angular/core",
										"name": "ChangeDetectorRef"
									}
								},
								{
									"id": 860,
									"name": "_walletConnectService",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1027,
										"name": "AucWalletConnectService"
									}
								},
								{
									"id": 861,
									"name": "_transactionService",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1185,
										"name": "AucTransactionService"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 854,
								"name": "AucAccountModalComponent"
							}
						}
					]
				},
				{
					"id": 863,
					"name": "accountAddress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/account-modal/account-modal.component.ts",
							"line": 21,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 866,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/account-modal/account-modal.component.ts",
							"line": 24,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 848,
						"name": "AucAccountModalData"
					}
				},
				{
					"id": 864,
					"name": "etherscanAddress$",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/account-modal/account-modal.component.ts",
							"line": 22,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Observable",
						"package": "rxjs",
						"name": "Observable"
					}
				},
				{
					"id": 862,
					"name": "identicon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/account-modal/account-modal.component.ts",
							"line": 20,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "HTMLDivElement",
						"package": "typescript",
						"name": "HTMLDivElement"
					}
				},
				{
					"id": 865,
					"name": "transactions$",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/account-modal/account-modal.component.ts",
							"line": 23,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 822,
									"name": "AucEtherscanTransactionLocalStorage"
								}
							}
						],
						"qualifiedName": "Observable",
						"package": "rxjs",
						"name": "Observable"
					}
				},
				{
					"id": 870,
					"name": "ngOnDestroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/account-modal/account-modal.component.ts",
							"line": 67,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 871,
							"name": "ngOnDestroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnDestroy.ngOnDestroy"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnDestroy.ngOnDestroy"
					}
				},
				{
					"id": 868,
					"name": "ngOnInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/account-modal/account-modal.component.ts",
							"line": 52,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 869,
							"name": "ngOnInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnInit.ngOnInit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnInit.ngOnInit"
					}
				},
				{
					"id": 876,
					"name": "onChangeClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/account-modal/account-modal.component.ts",
							"line": 81,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 877,
							"name": "onChangeClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 874,
					"name": "onClearTransactionsClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/account-modal/account-modal.component.ts",
							"line": 77,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 875,
							"name": "onClearTransactionsClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 872,
					"name": "onCloseClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/account-modal/account-modal.component.ts",
							"line": 73,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 873,
							"name": "onCloseClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 878,
					"name": "onDisconnectClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/account-modal/account-modal.component.ts",
							"line": 87,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 879,
							"name": "onDisconnectClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						855
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						863,
						866,
						864,
						862,
						865
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						870,
						868,
						876,
						874,
						872,
						878
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/modals/account-modal/account-modal.component.ts",
					"line": 19,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "OnInit",
					"package": "@angular/core",
					"name": "OnInit"
				},
				{
					"type": "reference",
					"qualifiedName": "OnDestroy",
					"package": "@angular/core",
					"name": "OnDestroy"
				}
			]
		},
		{
			"id": 80,
			"name": "AucAlertComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: [ './alert.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
					}
				}
			],
			"children": [
				{
					"id": 81,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 82,
							"name": "new AucAlertComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 80,
								"name": "AucAlertComponent"
							}
						}
					]
				},
				{
					"id": 86,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link color} - It's an `@Input()` parameter.\nTheme color palette for the alert. This sets the alert background color.\nIt's an optional parameter. The default value is red."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/alert/alert.component.ts",
							"line": 50,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "AsColorGroup"
					},
					"defaultValue": "AS_COLOR_GROUP.RED"
				},
				{
					"id": 84,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link icon}  It's an `Input()` parameter.\nThis sets the alert icon otherwise it’ll be hidden.\nYou can use supported icons from enum {@link AUC_WLC_ICON} or string.\nIf you want to use custom icon you need to provide url to the image as a string value.\nIt's an optional parameter.\nThis is required parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/alert/alert.component.ts",
							"line": 33,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 85,
					"name": "iconPosition",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link iconPosition} - It's an `@Input()` parameter.\nControls icon position.\nIt's an optional parameter. The default value is right.\nYou can use enum {@link AUC_ALERT_POSITION}"
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/alert/alert.component.ts",
							"line": 42,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 79,
						"name": "AucAlertPosition"
					},
					"defaultValue": "AUC_ALERT_POSITION.LEFT"
				},
				{
					"id": 87,
					"name": "styleProperties",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/alert/alert.component.ts",
							"line": 52,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 264,
							"name": "AucSetStyleProp"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 83,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link text} - It's an `@Input()` parameter.\nThe message to show in the alert.\nThis is required parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/alert/alert.component.ts",
							"line": 22,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 88,
					"name": "classNames",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/alert/alert.component.ts",
							"line": 54,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 89,
							"name": "classNames",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 90,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 91,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 92,
												"name": "el",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								}
							}
						}
					]
				},
				{
					"id": 95,
					"name": "ngOnChanges",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/alert/alert.component.ts",
							"line": 66,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 96,
							"name": "ngOnChanges",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnChanges.ngOnChanges"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnChanges.ngOnChanges"
					}
				},
				{
					"id": 93,
					"name": "ngOnInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/alert/alert.component.ts",
							"line": 62,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 94,
							"name": "ngOnInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnInit.ngOnInit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnInit.ngOnInit"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						81
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						86,
						84,
						85,
						87,
						83
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						88
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						95,
						93
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/alert/alert.component.ts",
					"line": 15,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "OnInit",
					"package": "@angular/core",
					"name": "OnInit"
				},
				{
					"type": "reference",
					"qualifiedName": "OnChanges",
					"package": "@angular/core",
					"name": "OnChanges"
				}
			]
		},
		{
			"id": 97,
			"name": "AucAvatarComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-avatar',\n  templateUrl: './avatar.component.html',\n  styleUrls: [ './avatar.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
					}
				}
			],
			"children": [
				{
					"id": 98,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/avatar/avatar.component.ts",
							"line": 36,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 99,
							"name": "new AucAvatarComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 97,
								"name": "AucAvatarComponent"
							}
						}
					]
				},
				{
					"id": 103,
					"name": "defaultUserIcon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/avatar/avatar.component.ts",
							"line": 33,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "AUC_WLC_ICON.USER"
				},
				{
					"id": 104,
					"name": "defaultUserIconColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/avatar/avatar.component.ts",
							"line": 34,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 102,
					"name": "iconStyleProperties",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/avatar/avatar.component.ts",
							"line": 32,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 264,
							"name": "AucSetStyleProp"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 101,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link size} - It's an `@Input()` parameter.\nSets size of the avatar.\nIt's an optional parameter. The default value is 40."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/avatar/avatar.component.ts",
							"line": 30,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "40"
				},
				{
					"id": 100,
					"name": "src",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link src} - It's an `@Input()` parameter.\nSets provided image url as avatar otherwise default user icon will be shown.\nIt's an optional parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/avatar/avatar.component.ts",
							"line": 22,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 105,
					"name": "ngOnChanges",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/avatar/avatar.component.ts",
							"line": 41,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 106,
							"name": "ngOnChanges",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnChanges.ngOnChanges"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnChanges.ngOnChanges"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						98
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						103,
						104,
						102,
						101,
						100
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						105
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/avatar/avatar.component.ts",
					"line": 15,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "OnChanges",
					"package": "@angular/core",
					"name": "OnChanges"
				}
			]
		},
		{
			"id": 570,
			"name": "AucBlockScrollHelperService",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Used for lock / unlock scroll for body."
			},
			"decorators": [
				{
					"name": "Injectable",
					"type": {
						"type": "reference",
						"qualifiedName": "InjectableDecorator",
						"package": "@angular/core",
						"name": "Injectable"
					},
					"arguments": {}
				}
			],
			"children": [
				{
					"id": 571,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/helpers/block-scroll-helper/block-scroll-helper.service.ts",
							"line": 9,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 572,
							"name": "new AucBlockScrollHelperService",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 573,
									"name": "_document",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"decorators": [
										{
											"name": "Inject",
											"type": {
												"type": "reference",
												"qualifiedName": "InjectDecorator",
												"package": "@angular/core",
												"name": "Inject"
											},
											"arguments": {
												"token": "DOCUMENT"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Document",
										"package": "typescript",
										"name": "Document"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 570,
								"name": "AucBlockScrollHelperService"
							}
						}
					]
				},
				{
					"id": 574,
					"name": "lockScroll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/helpers/block-scroll-helper/block-scroll-helper.service.ts",
							"line": 16,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 575,
							"name": "lockScroll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "link",
										"text": "lockScroll add class `block-scroll` to body;\nThis class will block scroll for body;\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 576,
					"name": "unlockScroll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/helpers/block-scroll-helper/block-scroll-helper.service.ts",
							"line": 24,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 577,
							"name": "unlockScroll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "link",
										"text": "unlockScroll remove class `block-scroll` from body;\nThis class will unlock scroll for body;\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						571
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						574,
						576
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/helpers/block-scroll-helper/block-scroll-helper.service.ts",
					"line": 8,
					"character": 13
				}
			]
		},
		{
			"id": 113,
			"name": "AucButtonComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-button',\n  templateUrl: './button.component.html',\n  styleUrls: [ './button.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
					}
				}
			],
			"children": [
				{
					"id": 114,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 162,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 115,
							"name": "new AucButtonComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 116,
									"name": "_elRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "ElementRef",
										"package": "@angular/core",
										"name": "ElementRef"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 113,
								"name": "AucButtonComponent"
							}
						}
					]
				},
				{
					"id": 133,
					"name": "BUTTON_APPEARANCE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 154,
							"character": 9
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 109,
							"name": "AUC_BUTTON_APPEARANCE"
						}
					},
					"defaultValue": "AUC_BUTTON_APPEARANCE"
				},
				{
					"id": 121,
					"name": "adaptive",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link adaptive} - It's an `@Input()` parameter.\nWhether the button is full width.\nIt's an optional parameter. The default value is false."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 65,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 127,
					"name": "appearance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link appearance} - It's an `@Input()` parameter.\nIt's an optional parameter. The default value is flat.\nYou can use enum {@link AUC_BUTTON_APPEARANCE}."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 119,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 112,
						"name": "AucButtonAppearance"
					},
					"defaultValue": "AUC_BUTTON_APPEARANCE.FLAT"
				},
				{
					"id": 118,
					"name": "borderRadius",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link borderRadius} - It's an `@Input()` parameter.\nSets borderRadius of the button.\nIt's an optional parameter. The default value is 8."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 40,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "8"
				},
				{
					"id": 119,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link color} - It's an `@Input()` parameter.\nSets theme of the button.\nIt's an optional parameter. The default value is blue.\nYou can use enum {@link AS_COLOR_GROUP}."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 49,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "AsColorGroup"
					},
					"defaultValue": "AS_COLOR_GROUP.BLUE"
				},
				{
					"id": 120,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link disabled} - It's an `@Input()` parameter.\nWhether the button is disabled.\nIt's an optional parameter. The default value is false."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 57,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 122,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link height} - It's an `@Input()` parameter.\nSets height of the button.\nIt's an optional parameter. The default value is 40."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 73,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "40"
				},
				{
					"id": 123,
					"name": "identicon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link identicon} - It's an `@Input()` parameter.\nShows identicon if provided.\nIt's an optional parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 81,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "HTMLDivElement",
						"package": "typescript",
						"name": "HTMLDivElement"
					}
				},
				{
					"id": 124,
					"name": "identiconPosition",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link identiconPosition} - It's an `@Input()` parameter.\nControls identicon position.\nIt's an optional parameter. The default value is right;\nYou can use enum ${@link AUC_IDENTICON_POSITION}"
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 90,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 251,
						"name": "AucIdenticonPosition"
					},
					"defaultValue": "AUC_IDENTICON_POSITION.RIGHT"
				},
				{
					"id": 117,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link label} - It's an `@Input()` parameter.\nText for the button label."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 32,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 125,
					"name": "leftIcon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link leftIcon} - It's an `@Input()` parameter.\nShows left icon if provided.\nYou can use supported icons from enum {@link AUC_WLC_ICON} or string;\nIf you want to use custom icon you need to provide url to the image as a string value.\nIt's an optional parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 101,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 131,
					"name": "onClickEmitter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link onClickEmitter} - It's an `@Output()` parameter.\nEmits an action when button was clicked.\nEmitted value is native click value."
					},
					"decorators": [
						{
							"name": "Output",
							"type": {
								"type": "reference",
								"qualifiedName": "OutputDecorator",
								"package": "@angular/core",
								"name": "Output"
							},
							"arguments": {
								"bindingPropertyName": "'onClick'"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 151,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"qualifiedName": "EventEmitter",
						"package": "@angular/core",
						"name": "EventEmitter"
					},
					"defaultValue": "..."
				},
				{
					"id": 129,
					"name": "pending",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link pending} - It's an `@Input()` parameter.\nWhether the button shows spinner.\nIt's an optional parameter. The default value is false."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 135,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 126,
					"name": "rightIcon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link rightIcon} - It's an `@Input()` parameter.\nShows right icon if provided.\nYou can use supported icons from enum {@link AUC_WLC_ICON} or string;\nIf you want to use custom icon you need to provide url to the image as a string value.\nIt's an optional parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 111,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 132,
					"name": "styleProperties",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 153,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 264,
							"name": "AucSetStyleProp"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 128,
					"name": "transparent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link transparent} - It's an `@Input()` parameter.\nWhether the button is transparent.\nIt's an optional parameter. The default value is false."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 127,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 130,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link type} - It's an `@Input()` parameter.\nStandard HTMLButtonElement type {@link HTMLButtonElement.type}: 'button' | 'reset' | 'submit'.\nIt's an optional parameter. The default value is button."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 143,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "button"
							},
							{
								"type": "literal",
								"value": "reset"
							},
							{
								"type": "literal",
								"value": "submit"
							}
						]
					},
					"defaultValue": "'button'"
				},
				{
					"id": 136,
					"name": "classNames",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 164,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 137,
							"name": "classNames",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 138,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 139,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 140,
												"name": "el",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								}
							}
						}
					]
				},
				{
					"id": 134,
					"name": "iconColor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 156,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 135,
							"name": "iconColor",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 143,
					"name": "ngOnChanges",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 179,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 144,
							"name": "ngOnChanges",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 145,
									"name": "changes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "SimpleChanges",
										"package": "@angular/core",
										"name": "SimpleChanges"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnChanges.ngOnChanges"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnChanges.ngOnChanges"
					}
				},
				{
					"id": 141,
					"name": "ngOnInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 175,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 142,
							"name": "ngOnInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnInit.ngOnInit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnInit.ngOnInit"
					}
				},
				{
					"id": 146,
					"name": "onClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/button/button.component.ts",
							"line": 188,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 147,
							"name": "onClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 148,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						114
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						133,
						121,
						127,
						118,
						119,
						120,
						122,
						123,
						124,
						117,
						125,
						131,
						129,
						126,
						132,
						128,
						130
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						136,
						134
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						143,
						141,
						146
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/button/button.component.ts",
					"line": 26,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "OnInit",
					"package": "@angular/core",
					"name": "OnInit"
				},
				{
					"type": "reference",
					"qualifiedName": "OnChanges",
					"package": "@angular/core",
					"name": "OnChanges"
				}
			]
		},
		{
			"id": 156,
			"name": "AucConnectWalletComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-connect-wallet',\n  templateUrl: './connect-wallet.component.html',\n  styleUrls: [ './connect-wallet.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
					}
				}
			],
			"children": [
				{
					"id": 157,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 169,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 158,
							"name": "new AucConnectWalletComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 159,
									"name": "_dialogService",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 358,
										"name": "AucDialogService"
									}
								},
								{
									"id": 160,
									"name": "_cdr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "ChangeDetectorRef",
										"package": "@angular/core",
										"name": "ChangeDetectorRef"
									}
								},
								{
									"id": 161,
									"name": "_elementRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "HTMLElement",
												"package": "typescript",
												"name": "HTMLElement"
											}
										],
										"qualifiedName": "ElementRef",
										"package": "@angular/core",
										"name": "ElementRef"
									}
								},
								{
									"id": 162,
									"name": "_transactionService",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1185,
										"name": "AucTransactionService"
									}
								},
								{
									"id": 163,
									"name": "_walletConnectService",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1027,
										"name": "AucWalletConnectService"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 156,
								"name": "AucConnectWalletComponent"
							}
						}
					]
				},
				{
					"id": 182,
					"name": "BALANCE_APPEARANCE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 164,
							"character": 9
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 1,
							"name": "AUC_BALANCE_APPEARANCE"
						}
					},
					"defaultValue": "AUC_BALANCE_APPEARANCE"
				},
				{
					"id": 181,
					"name": "COLORS",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 163,
							"character": 9
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"name": "AS_COLOR_GROUP"
						}
					},
					"defaultValue": "AS_COLOR_GROUP"
				},
				{
					"id": 183,
					"name": "CONNECT_WALLET_APPEARANCE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 165,
							"character": 9
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 151,
							"name": "AUC_CONNECT_WALLET_APPEARANCE"
						}
					},
					"defaultValue": "AUC_CONNECT_WALLET_APPEARANCE"
				},
				{
					"id": 169,
					"name": "account",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link account} - It's an `@Input()` parameter. <br>\nUser account related information. Needs for {@link AucAccountButtonComponent}. <br>\nThis is required parameter when appearance equals to {@link AUC_CONNECT_WALLET_APPEARANCE.ICON}"
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 83,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 40,
						"name": "AucAccountData"
					}
				},
				{
					"id": 175,
					"name": "accountAddress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 157,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 171,
					"name": "accountDropdownConfig",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "{@link accountDropdownConfig} - It's an `@Input()` parameter. <br>\nYou can customize dropdown position and overlay. <br>\nThis is an optional parameter. <br>\nThe default value is: <br>\n{\n  overlay: {\n    transparent: true\n  },\n  position: {\n    vertical: AUC_POSITIONS.BELOW,\n    horizontal: AUC_POSITIONS.BEFORE\n  }\n}"
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 108,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 465,
						"name": "AucDropdownConfig"
					},
					"defaultValue": "..."
				},
				{
					"id": 170,
					"name": "accountOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link accountOptions} - It's an `@Input()` parameter. <br>\nList of options in popover. Needs for {@link AucAccountButtonComponent}. <br>\nThis is an optional parameter, uses only with appearance {@link AUC_CONNECT_WALLET_APPEARANCE.ICON}"
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 91,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 43,
							"name": "AucAccountOption"
						}
					}
				},
				{
					"id": 164,
					"name": "appearance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link appearance} - It's an `@Input()` parameter. <br>\nAllows to control appearance components. Default is the button.\nIt's an optional parameter. The default value is {@link AUC_CONNECT_WALLET_APPEARANCE.BUTTON}. <br>\nYou can use enum {@link AUC_CONNECT_WALLET_APPEARANCE}."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 43,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 155,
						"name": "ConnectWalletAppearance"
					},
					"defaultValue": "AUC_CONNECT_WALLET_APPEARANCE.BUTTON"
				},
				{
					"id": 165,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link disabled} - It's an `@Input()` parameter. <br>\nWhether the button is disabled. <br>\nIt's an optional parameter. The default value is false."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 51,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 178,
					"name": "hasFailedTx",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 160,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 179,
					"name": "hasPendingTx",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 161,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 176,
					"name": "identicon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 158,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "HTMLDivElement",
						"package": "typescript",
						"name": "HTMLDivElement"
					}
				},
				{
					"id": 177,
					"name": "isConnected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 159,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 172,
					"name": "networkDropdownConfig",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link networkDropdownConfig} - It's an `@Input()` parameter. <br>\nYou can customize dropdown position and overlay. <br>\nThis is an optional parameter. <br>\nThe default value is: <br>\n{\n  overlay: {\n    transparent: true\n  },\n  position: {\n    vertical: AUC_POSITIONS.BELOW,\n    horizontal: AUC_POSITIONS.AFTER\n  }\n}"
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 133,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 465,
						"name": "AucDropdownConfig"
					},
					"defaultValue": "..."
				},
				{
					"id": 173,
					"name": "onConnect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link onConnect} - It's an `@Output()` parameter. <br>\nEmits an action when wallet was connected."
					},
					"decorators": [
						{
							"name": "Output",
							"type": {
								"type": "reference",
								"qualifiedName": "OutputDecorator",
								"package": "@angular/core",
								"name": "Output"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 148,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1024,
								"name": "AucConnectionState"
							}
						],
						"qualifiedName": "EventEmitter",
						"package": "@angular/core",
						"name": "EventEmitter"
					},
					"defaultValue": "..."
				},
				{
					"id": 174,
					"name": "onDisconnect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link onDisconnect} - It's an `@Output()` parameter. <br>\nEmits an action when wallet was disconnected."
					},
					"decorators": [
						{
							"name": "Output",
							"type": {
								"type": "reference",
								"qualifiedName": "OutputDecorator",
								"package": "@angular/core",
								"name": "Output"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 155,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"qualifiedName": "EventEmitter",
						"package": "@angular/core",
						"name": "EventEmitter"
					},
					"defaultValue": "..."
				},
				{
					"id": 166,
					"name": "showBalance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link showBalance} - It's an `@Input()` parameter. <br>\nShow/hide account balance. <br>\nIt's an optional parameter. The default value is false."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 59,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 168,
					"name": "showNetworkOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link showNetworkOptions} - It's an `@Input()` parameter. <br>\nShow/hide network options <br>\nIt's an optional parameter. The default value is false."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 75,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 167,
					"name": "showTransactions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link showTransactions} - It's an `@Input()` parameter. <br>\nShow/hide Recent transactions button <br>\nIt's an optional parameter. The default value is false."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 67,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 180,
					"name": "txCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 162,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 187,
					"name": "ngOnDestroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 214,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 188,
							"name": "ngOnDestroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnDestroy.ngOnDestroy"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnDestroy.ngOnDestroy"
					}
				},
				{
					"id": 185,
					"name": "ngOnInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 191,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 186,
							"name": "ngOnInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnInit.ngOnInit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnInit.ngOnInit"
					}
				},
				{
					"id": 189,
					"name": "onAccountButtonClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 220,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 190,
							"name": "onAccountButtonClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 191,
					"name": "onConnectWalletClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 250,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 192,
							"name": "onConnectWalletClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 193,
									"name": "isDisconnect",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 194,
					"name": "onDisconnectWalletClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/connect-wallet/connect-wallet.component.ts",
							"line": 261,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 195,
							"name": "onDisconnectWalletClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						157
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						182,
						181,
						183,
						169,
						175,
						171,
						170,
						164,
						165,
						178,
						179,
						176,
						177,
						172,
						173,
						174,
						166,
						168,
						167,
						180
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						187,
						185,
						189,
						191,
						194
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/connect-wallet/connect-wallet.component.ts",
					"line": 35,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "OnInit",
					"package": "@angular/core",
					"name": "OnInit"
				},
				{
					"type": "reference",
					"qualifiedName": "OnDestroy",
					"package": "@angular/core",
					"name": "OnDestroy"
				}
			]
		},
		{
			"id": 220,
			"name": "AucContentBodyDirective",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Directive",
					"type": {
						"type": "reference",
						"qualifiedName": "DirectiveDecorator",
						"package": "@angular/core",
						"name": "Directive"
					},
					"arguments": {
						"obj": "{\n  selector: '[aucContentBody]',\n  exportAs: 'aucContentBody',\n  providers: [ AucBlockScrollHelperService ]\n}"
					}
				}
			],
			"children": [
				{
					"id": 221,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/directives/content-body/content-body.directive.ts",
							"line": 23,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 222,
							"name": "new AucContentBodyDirective",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 223,
									"name": "_templateRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "TemplateRef",
										"package": "@angular/core",
										"name": "TemplateRef"
									}
								},
								{
									"id": 224,
									"name": "_viewContainerRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "ViewContainerRef",
										"package": "@angular/core",
										"name": "ViewContainerRef"
									}
								},
								{
									"id": 225,
									"name": "_document",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"decorators": [
										{
											"name": "Inject",
											"type": {
												"type": "reference",
												"qualifiedName": "InjectDecorator",
												"package": "@angular/core",
												"name": "Inject"
											},
											"arguments": {
												"token": "DOCUMENT"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Document",
										"package": "typescript",
										"name": "Document"
									}
								},
								{
									"id": 226,
									"name": "_blockScrollHelperService",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 570,
										"name": "AucBlockScrollHelperService"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 220,
								"name": "AucContentBodyDirective"
							}
						}
					]
				},
				{
					"id": 230,
					"name": "destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/directives/content-body/content-body.directive.ts",
							"line": 38,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 231,
							"name": "destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 228,
					"name": "ngAfterViewInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/directives/content-body/content-body.directive.ts",
							"line": 29,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 229,
							"name": "ngAfterViewInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "AfterViewInit.ngAfterViewInit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "AfterViewInit.ngAfterViewInit"
					}
				},
				{
					"id": 232,
					"name": "ngOnDestroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/directives/content-body/content-body.directive.ts",
							"line": 43,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 233,
							"name": "ngOnDestroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnDestroy.ngOnDestroy"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnDestroy.ngOnDestroy"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						221
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						230,
						228,
						232
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/directives/content-body/content-body.directive.ts",
					"line": 20,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "AfterViewInit",
					"package": "@angular/core",
					"name": "AfterViewInit"
				},
				{
					"type": "reference",
					"qualifiedName": "OnDestroy",
					"package": "@angular/core",
					"name": "OnDestroy"
				}
			]
		},
		{
			"id": 216,
			"name": "AucCopyToClipboardComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-copy-to-clipboard',\n  templateUrl: './copy-to-clipboard.component.html',\n  styleUrls: ['./copy-to-clipboard.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}"
					}
				}
			],
			"children": [
				{
					"id": 217,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 218,
							"name": "new AucCopyToClipboardComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 216,
								"name": "AucCopyToClipboardComponent"
							}
						}
					]
				},
				{
					"id": 219,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "{@link value} - It's an `@Input()` parameter.\nThe value which will be copied after click on copy btn.\nThis is required parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/copy-to-clipboard/copy-to-clipboard.component.ts",
							"line": 16,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						217
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						219
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/copy-to-clipboard/copy-to-clipboard.component.ts",
					"line": 10,
					"character": 13
				}
			]
		},
		{
			"id": 234,
			"name": "AucCustomClassDirective",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Directive",
					"type": {
						"type": "reference",
						"qualifiedName": "DirectiveDecorator",
						"package": "@angular/core",
						"name": "Directive"
					},
					"arguments": {
						"obj": "{\n  selector: '[aucCustomClass]',\n  exportAs: 'aucCustomClass'\n}"
					}
				}
			],
			"children": [
				{
					"id": 235,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/directives/custom-class/custom-class.directive.ts",
							"line": 16,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 236,
							"name": "new AucCustomClassDirective",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 237,
									"name": "_renderer2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Renderer2",
										"package": "@angular/core",
										"name": "Renderer2"
									}
								},
								{
									"id": 238,
									"name": "_elementRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "ElementRef",
										"package": "@angular/core",
										"name": "ElementRef"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 234,
								"name": "AucCustomClassDirective"
							}
						}
					]
				},
				{
					"id": 239,
					"name": "aucCustomClass",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link aucCustomClass} - It's an `@Input()` parameter.\nSets class / list of classes to the elements."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/directives/custom-class/custom-class.directive.ts",
							"line": 14,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 240,
					"name": "ngOnInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/directives/custom-class/custom-class.directive.ts",
							"line": 19,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 241,
							"name": "ngOnInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 245,
					"name": "removeClasses",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/directives/custom-class/custom-class.directive.ts",
							"line": 33,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 246,
							"name": "removeClasses",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 247,
									"name": "classes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 242,
					"name": "setClasses",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/directives/custom-class/custom-class.directive.ts",
							"line": 23,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 243,
							"name": "setClasses",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 244,
									"name": "classes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						235
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						239
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						240,
						245,
						242
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/directives/custom-class/custom-class.directive.ts",
					"line": 8,
					"character": 13
				}
			]
		},
		{
			"id": 300,
			"name": "AucCustomizeDialogDirective",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Uses for customization dialog window by config."
			},
			"decorators": [
				{
					"name": "Directive",
					"type": {
						"type": "reference",
						"qualifiedName": "DirectiveDecorator",
						"package": "@angular/core",
						"name": "Directive"
					},
					"arguments": {
						"obj": "{\n  selector: '[aucCustomizeDialog]',\n  exportAs: 'aucCustomizeDialog'\n}"
					}
				}
			],
			"children": [
				{
					"id": 301,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/directives/customize-dialog/customize-dialog.directive.ts",
							"line": 25,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 302,
							"name": "new AucCustomizeDialogDirective",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 303,
									"name": "_renderer2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Renderer2",
										"package": "@angular/core",
										"name": "Renderer2"
									}
								},
								{
									"id": 304,
									"name": "_elementRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "ElementRef",
										"package": "@angular/core",
										"name": "ElementRef"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 300,
								"name": "AucCustomizeDialogDirective"
							}
						}
					]
				},
				{
					"id": 305,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link config} - configuration data for customization dialog."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/dialog/directives/customize-dialog/customize-dialog.directive.ts",
							"line": 19,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 344,
						"name": "AucCustomizeDialogConfig"
					}
				},
				{
					"id": 317,
					"name": "mapConfig",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/directives/customize-dialog/customize-dialog.directive.ts",
							"line": 50,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 318,
							"name": "mapConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 308,
					"name": "ngOnInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/directives/customize-dialog/customize-dialog.directive.ts",
							"line": 28,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 309,
							"name": "ngOnInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnInit.ngOnInit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnInit.ngOnInit"
					}
				},
				{
					"id": 310,
					"name": "setClasses",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/directives/customize-dialog/customize-dialog.directive.ts",
							"line": 32,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 311,
							"name": "setClasses",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 312,
									"name": "classes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 313,
					"name": "setStyle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/directives/customize-dialog/customize-dialog.directive.ts",
							"line": 42,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 314,
							"name": "setStyle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 315,
									"name": "style",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 316,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						301
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						305
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						317,
						308,
						310,
						313
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/dialog/directives/customize-dialog/customize-dialog.directive.ts",
					"line": 14,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "OnInit",
					"package": "@angular/core",
					"name": "OnInit"
				}
			]
		},
		{
			"id": 381,
			"name": "AucDialogComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: [ './dialog.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}"
					}
				}
			],
			"children": [
				{
					"id": 382,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/dialog.component.ts",
							"line": 44,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 383,
							"name": "new AucDialogComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 384,
									"name": "_componentFactoryResolver",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "ComponentFactoryResolver",
										"package": "@angular/core",
										"name": "ComponentFactoryResolver"
									}
								},
								{
									"id": 385,
									"name": "_cdr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "ChangeDetectorRef",
										"package": "@angular/core",
										"name": "ChangeDetectorRef"
									}
								},
								{
									"id": 386,
									"name": "_config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 411,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "AucDialogConfig"
									}
								},
								{
									"id": 387,
									"name": "_dialogRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 443,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "AucDialogRef"
									}
								},
								{
									"id": 388,
									"name": "_blockScroll",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 570,
										"name": "AucBlockScrollHelperService"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 381,
								"name": "AucDialogComponent"
							}
						}
					]
				},
				{
					"id": 391,
					"name": "childComponentType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog.component.ts",
							"line": 32,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"qualifiedName": "Type",
						"package": "@angular/core",
						"name": "Type"
					}
				},
				{
					"id": 390,
					"name": "componentRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog.component.ts",
							"line": 31,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"qualifiedName": "ComponentRef",
						"package": "@angular/core",
						"name": "ComponentRef"
					}
				},
				{
					"id": 395,
					"name": "dialogConfig",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog.component.ts",
							"line": 36,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 344,
						"name": "AucCustomizeDialogConfig"
					},
					"defaultValue": "{}"
				},
				{
					"id": 396,
					"name": "insertionPoint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "ViewChild",
							"type": {
								"type": "reference",
								"qualifiedName": "ViewChildDecorator",
								"package": "@angular/core",
								"name": "ViewChild"
							},
							"arguments": {
								"selector": "AucInsertionDirective"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/dialog/dialog.component.ts",
							"line": 38,
							"character": 36
						}
					],
					"type": {
						"type": "reference",
						"id": 319,
						"name": "AucInsertionDirective"
					}
				},
				{
					"id": 392,
					"name": "onClose",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog.component.ts",
							"line": 33,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"qualifiedName": "Observable",
						"package": "rxjs",
						"name": "Observable"
					},
					"defaultValue": "..."
				},
				{
					"id": 394,
					"name": "overlayConfig",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog.component.ts",
							"line": 35,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 981,
						"name": "AucOverlayCustomizationConfig"
					}
				},
				{
					"id": 393,
					"name": "panelConfig",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog.component.ts",
							"line": 34,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 344,
						"name": "AucCustomizeDialogConfig"
					}
				},
				{
					"id": 397,
					"name": "hasOverlay",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog.component.ts",
							"line": 40,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 398,
							"name": "hasOverlay",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 408,
					"name": "loadChildComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog.component.ts",
							"line": 132,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 409,
							"name": "loadChildComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 410,
									"name": "componentType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Type",
										"package": "@angular/core",
										"name": "Type"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 399,
					"name": "ngAfterViewInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/dialog.component.ts",
							"line": 53,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 400,
							"name": "ngAfterViewInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "AfterViewInit.ngAfterViewInit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "AfterViewInit.ngAfterViewInit"
					}
				},
				{
					"id": 401,
					"name": "ngOnDestroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/dialog.component.ts",
							"line": 59,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 402,
							"name": "ngOnDestroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnDestroy.ngOnDestroy"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnDestroy.ngOnDestroy"
					}
				},
				{
					"id": 406,
					"name": "onOverlayClicked",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog.component.ts",
							"line": 126,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 407,
							"name": "onOverlayClicked",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						382
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						391,
						390,
						395,
						396,
						392,
						394,
						393
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						397
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						408,
						399,
						401,
						406
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/dialog/dialog.component.ts",
					"line": 28,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "AfterViewInit",
					"package": "@angular/core",
					"name": "AfterViewInit"
				},
				{
					"type": "reference",
					"qualifiedName": "OnDestroy",
					"package": "@angular/core",
					"name": "OnDestroy"
				}
			]
		},
		{
			"id": 411,
			"name": "AucDialogConfig",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 412,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 413,
							"name": "new AucDialogConfig",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 414,
									"name": "D",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 411,
								"typeArguments": [
									{
										"type": "reference",
										"id": 414,
										"name": "D"
									}
								],
								"name": "AucDialogConfig"
							}
						}
					]
				},
				{
					"id": 415,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog-config.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 414,
						"name": "D"
					}
				},
				{
					"id": 423,
					"name": "dialogClass",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog-config.ts",
							"line": 13,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 417,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog-config.ts",
							"line": 7,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 421,
					"name": "maxHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog-config.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 420,
					"name": "maxWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog-config.ts",
							"line": 10,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 419,
					"name": "minHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog-config.ts",
							"line": 9,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 418,
					"name": "minWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog-config.ts",
							"line": 8,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 427,
					"name": "overlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog-config.ts",
							"line": 17,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 353,
						"name": "AucCustomizeDialogOverlayConfigInterface"
					}
				},
				{
					"id": 424,
					"name": "panel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog-config.ts",
							"line": 14,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 425,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 426,
									"name": "panelClass",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/dialog/dialog-config.ts",
											"line": 15,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										426
									]
								}
							]
						}
					}
				},
				{
					"id": 422,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog-config.ts",
							"line": 12,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 380,
						"name": "AucDialogPosition"
					}
				},
				{
					"id": 416,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog-config.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						412
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						415,
						423,
						417,
						421,
						420,
						419,
						418,
						427,
						424,
						422,
						416
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/dialog/dialog-config.ts",
					"line": 4,
					"character": 13
				}
			],
			"typeParameter": [
				{
					"id": 428,
					"name": "D",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 429,
			"name": "AucDialogInjector",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 430,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/dialog-injector.ts",
							"line": 4,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 431,
							"name": "new AucDialogInjector",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 432,
									"name": "_parentInjector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Injector",
										"package": "@angular/core",
										"name": "Injector"
									}
								},
								{
									"id": 433,
									"name": "_additionalTokens",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "WeakMap",
										"package": "typescript",
										"name": "WeakMap"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 429,
								"name": "AucDialogInjector"
							}
						}
					]
				},
				{
					"id": 434,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/dialog-injector.ts",
							"line": 10,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 435,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 436,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 437,
									"name": "token",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 436,
														"name": "T"
													}
												],
												"qualifiedName": "Type",
												"package": "@angular/core",
												"name": "Type"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 436,
														"name": "T"
													}
												],
												"qualifiedName": "InjectionToken",
												"package": "@angular/core",
												"name": "InjectionToken"
											}
										]
									}
								},
								{
									"id": 438,
									"name": "notFoundValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 436,
										"name": "T"
									}
								},
								{
									"id": 439,
									"name": "flags",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "InjectFlags",
										"package": "@angular/core",
										"name": "InjectFlags"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 436,
								"name": "T"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Injector.get"
							}
						},
						{
							"id": 440,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 441,
									"name": "token",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 442,
									"name": "notFoundValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Injector.get"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Injector.get"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						430
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						434
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/dialog/dialog-injector.ts",
					"line": 3,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Injector",
					"package": "@angular/core",
					"name": "Injector"
				}
			]
		},
		{
			"id": 443,
			"name": "AucDialogRef",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 444,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 445,
							"name": "new AucDialogRef",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 446,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 443,
								"typeArguments": [
									{
										"type": "reference",
										"id": 446,
										"name": "R"
									}
								],
								"name": "AucDialogRef"
							}
						}
					]
				},
				{
					"id": 449,
					"name": "afterClosed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link afterClosed} - emits after dialog was closed.\nYou can add subscription for it if needed. this.dialogRed.afterClosed.subscribe();"
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog-ref.ts",
							"line": 11,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"qualifiedName": "Observable",
						"package": "rxjs",
						"name": "Observable"
					},
					"defaultValue": "..."
				},
				{
					"id": 450,
					"name": "afterOpened",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link afterOpened} - emits after dialog was opened.\nYou can add subscription for it if needed. this.dialogRed._afterOpened.subscribe();"
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog-ref.ts",
							"line": 17,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "literal",
								"value": null
							}
						],
						"qualifiedName": "Observable",
						"package": "rxjs",
						"name": "Observable"
					},
					"defaultValue": "..."
				},
				{
					"id": 451,
					"name": "close",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog-ref.ts",
							"line": 23,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 452,
							"name": "close",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "{@link close} - emits close dialog action the dialog window."
							},
							"parameters": [
								{
									"id": 453,
									"name": "result",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "the value which will be emitted for afterClosed action.\n"
									},
									"type": {
										"type": "reference",
										"id": 446,
										"name": "R"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 454,
					"name": "open",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/dialog-ref.ts",
							"line": 31,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 455,
							"name": "open",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "{@link open} - emits open dialog action the dialog window.\nYou mustn't use it. It's already used inside injection strategy."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						444
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						449,
						450
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						451,
						454
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/dialog/dialog-ref.ts",
					"line": 3,
					"character": 13
				}
			],
			"typeParameter": [
				{
					"id": 456,
					"name": "R",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 358,
			"name": "AucDialogService",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Injectable",
					"type": {
						"type": "reference",
						"qualifiedName": "InjectableDecorator",
						"package": "@angular/core",
						"name": "Injectable"
					},
					"arguments": {}
				}
			],
			"children": [
				{
					"id": 359,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/services/dialog/dialog.service.ts",
							"line": 24,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 360,
							"name": "new AucDialogService",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 361,
									"name": "_componentFactoryResolver",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "ComponentFactoryResolver",
										"package": "@angular/core",
										"name": "ComponentFactoryResolver"
									}
								},
								{
									"id": 362,
									"name": "_appRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "ApplicationRef",
										"package": "@angular/core",
										"name": "ApplicationRef"
									}
								},
								{
									"id": 363,
									"name": "_injector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Injector",
										"package": "@angular/core",
										"name": "Injector"
									}
								},
								{
									"id": 364,
									"name": "document",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"decorators": [
										{
											"name": "Inject",
											"type": {
												"type": "reference",
												"qualifiedName": "InjectDecorator",
												"package": "@angular/core",
												"name": "Inject"
											},
											"arguments": {
												"token": "DOCUMENT"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Document",
										"package": "typescript",
										"name": "Document"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 358,
								"name": "AucDialogService"
							}
						}
					]
				},
				{
					"id": 373,
					"name": "open",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/services/dialog/dialog.service.ts",
							"line": 75,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 374,
							"name": "open",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This method open dialog window."
							},
							"typeParameter": [
								{
									"id": 375,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 376,
									"name": "D",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 377,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 378,
									"name": "componentType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "component which will be shown inside the dialog."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 375,
												"name": "T"
											}
										],
										"qualifiedName": "Type",
										"package": "@angular/core",
										"name": "Type"
									}
								},
								{
									"id": 379,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "configuration for the dialog window. More details {@link AucDialogConfig}.\n"
									},
									"type": {
										"type": "reference",
										"id": 411,
										"typeArguments": [
											{
												"type": "reference",
												"id": 376,
												"name": "D"
											}
										],
										"name": "AucDialogConfig"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 443,
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 377,
												"name": "R"
											}
										],
										"qualifiedName": "Type",
										"package": "@angular/core",
										"name": "Type"
									}
								],
								"name": "AucDialogRef"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						359
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						373
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/dialog/services/dialog/dialog.service.ts",
					"line": 21,
					"character": 13
				}
			]
		},
		{
			"id": 476,
			"name": "AucDropdownMenuComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-dropdown-menu',\n  templateUrl: './dropdown-menu.component.html',\n  styleUrls: [ './dropdown-menu.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}"
					}
				}
			],
			"children": [
				{
					"id": 477,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dropdown-menu/dropdown-menu.component.ts",
							"line": 37,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 478,
							"name": "new AucDropdownMenuComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 479,
									"name": "_cdr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "ChangeDetectorRef",
										"package": "@angular/core",
										"name": "ChangeDetectorRef"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 476,
								"name": "AucDropdownMenuComponent"
							}
						}
					]
				},
				{
					"id": 480,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/dropdown-menu/dropdown-menu.component.ts",
							"line": 28,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 465,
						"name": "AucDropdownConfig"
					}
				},
				{
					"id": 482,
					"name": "contentBody",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "ViewChild",
							"type": {
								"type": "reference",
								"qualifiedName": "ViewChildDecorator",
								"package": "@angular/core",
								"name": "ViewChild"
							},
							"arguments": {
								"selector": "AucContentBodyDirective"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/dropdown-menu/dropdown-menu.component.ts",
							"line": 30,
							"character": 38
						}
					],
					"type": {
						"type": "reference",
						"id": 220,
						"name": "AucContentBodyDirective"
					}
				},
				{
					"id": 483,
					"name": "dropdownRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "ViewChild",
							"type": {
								"type": "reference",
								"qualifiedName": "ViewChildDecorator",
								"package": "@angular/core",
								"name": "ViewChild"
							},
							"arguments": {
								"selector": "'dropdown'",
								"opts": "{ read: ElementRef }"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/dropdown-menu/dropdown-menu.component.ts",
							"line": 31,
							"character": 47
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"qualifiedName": "ElementRef",
						"package": "@angular/core",
						"name": "ElementRef"
					}
				},
				{
					"id": 486,
					"name": "isAfter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dropdown-menu/dropdown-menu.component.ts",
							"line": 35,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 485,
					"name": "isBelow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dropdown-menu/dropdown-menu.component.ts",
							"line": 34,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 484,
					"name": "positionStyles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dropdown-menu/dropdown-menu.component.ts",
							"line": 33,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 471,
						"name": "AucDropdownPositionStyles"
					},
					"defaultValue": "null"
				},
				{
					"id": 481,
					"name": "trigger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/dropdown-menu/dropdown-menu.component.ts",
							"line": 29,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 277,
						"name": "AucTriggerDirective"
					}
				},
				{
					"id": 495,
					"name": "close",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dropdown-menu/dropdown-menu.component.ts",
							"line": 134,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 496,
							"name": "close",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 493,
					"name": "getPositions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dropdown-menu/dropdown-menu.component.ts",
							"line": 54,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 494,
							"name": "getPositions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 489,
					"name": "ngAfterViewInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dropdown-menu/dropdown-menu.component.ts",
							"line": 44,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 490,
							"name": "ngAfterViewInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "AfterViewInit.ngAfterViewInit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "AfterViewInit.ngAfterViewInit"
					}
				},
				{
					"id": 491,
					"name": "ngOnDestroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dropdown-menu/dropdown-menu.component.ts",
							"line": 50,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 492,
							"name": "ngOnDestroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnDestroy.ngOnDestroy"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnDestroy.ngOnDestroy"
					}
				},
				{
					"id": 487,
					"name": "onResize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"decorators": [
						{
							"name": "HostListener",
							"type": {
								"type": "reference",
								"qualifiedName": "HostListenerDecorator",
								"package": "@angular/core",
								"name": "HostListener"
							},
							"arguments": {
								"eventName": "'window:resize'"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/dropdown-menu/dropdown-menu.component.ts",
							"line": 40,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 488,
							"name": "onResize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						477
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						480,
						482,
						483,
						486,
						485,
						484,
						481
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						495,
						493,
						489,
						491,
						487
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/dropdown-menu/dropdown-menu.component.ts",
					"line": 27,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "AfterViewInit",
					"package": "@angular/core",
					"name": "AfterViewInit"
				},
				{
					"type": "reference",
					"qualifiedName": "OnDestroy",
					"package": "@angular/core",
					"name": "OnDestroy"
				}
			]
		},
		{
			"id": 457,
			"name": "AucDropdownMenuDirective",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Directive",
					"type": {
						"type": "reference",
						"qualifiedName": "DirectiveDecorator",
						"package": "@angular/core",
						"name": "Directive"
					},
					"arguments": {
						"obj": "{\n  selector: '[aucDropdownMenu]',\n  exportAs: 'aucDropdownMenu'\n}"
					}
				}
			],
			"children": [
				{
					"id": 458,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dropdown-menu/directives/dropdown-menu/dropdown-menu.directive.ts",
							"line": 11,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 459,
							"name": "new AucDropdownMenuDirective",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 460,
									"name": "_templateRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "TemplateRef",
										"package": "@angular/core",
										"name": "TemplateRef"
									}
								},
								{
									"id": 461,
									"name": "_viewContainerRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "ViewContainerRef",
										"package": "@angular/core",
										"name": "ViewContainerRef"
									}
								},
								{
									"id": 462,
									"name": "document",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"decorators": [
										{
											"name": "Inject",
											"type": {
												"type": "reference",
												"qualifiedName": "InjectDecorator",
												"package": "@angular/core",
												"name": "Inject"
											},
											"arguments": {
												"token": "DOCUMENT"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Document",
										"package": "typescript",
										"name": "Document"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 457,
								"name": "AucDropdownMenuDirective"
							}
						}
					]
				},
				{
					"id": 463,
					"name": "ngAfterViewInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/dropdown-menu/directives/dropdown-menu/dropdown-menu.directive.ts",
							"line": 17,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 464,
							"name": "ngAfterViewInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "AfterViewInit.ngAfterViewInit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "AfterViewInit.ngAfterViewInit"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						458
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						463
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/dropdown-menu/directives/dropdown-menu/dropdown-menu.directive.ts",
					"line": 9,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "AfterViewInit",
					"package": "@angular/core",
					"name": "AfterViewInit"
				}
			]
		},
		{
			"id": 664,
			"name": "AucIconComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: [ './icon.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}"
					}
				}
			],
			"children": [
				{
					"id": 665,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 666,
							"name": "new AucIconComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 664,
								"name": "AucIconComponent"
							}
						}
					]
				},
				{
					"id": 667,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link color} - It's an `@Input()` parameter.\nSets css style color;\nThis is an optional parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/icon/icon.component.ts",
							"line": 19,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 673,
					"name": "isImage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/icon/icon.component.ts",
							"line": 39,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 668,
					"name": "icon",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/icon/icon.component.ts",
							"line": 27,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 669,
							"name": "icon",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "{@link icon} - It's an `@Input()` parameter."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"setSignature": [
						{
							"id": 670,
							"name": "icon",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"comment": {
								"shortText": "{@link icon} - It's an `@Input()` parameter."
							},
							"parameters": [
								{
									"id": 671,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "type uses enum {@link AUC_WLC_ICON} or string;\nIf you want to use custom icon you need to provide url to the image as a string value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						665
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						667,
						673
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						668
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/icon/icon.component.ts",
					"line": 12,
					"character": 13
				}
			]
		},
		{
			"id": 252,
			"name": "AucIdenticonDirective",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Directive",
					"type": {
						"type": "reference",
						"qualifiedName": "DirectiveDecorator",
						"package": "@angular/core",
						"name": "Directive"
					},
					"arguments": {
						"obj": "{\n  selector: '[aucIdenticon]',\n  exportAs: 'aucIdenticon'\n}"
					}
				}
			],
			"children": [
				{
					"id": 253,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/directives/identicon/identicon.directive.ts",
							"line": 31,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 254,
							"name": "new AucIdenticonDirective",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 255,
									"name": "_renderer2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Renderer2",
										"package": "@angular/core",
										"name": "Renderer2"
									}
								},
								{
									"id": 256,
									"name": "_elementRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "ElementRef",
										"package": "@angular/core",
										"name": "ElementRef"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 252,
								"name": "AucIdenticonDirective"
							}
						}
					]
				},
				{
					"id": 257,
					"name": "aucIdenticon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link aucIdenticon} - It's an `@Input()` parameter.\nShows identicon if provided.\nIt's an optional parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/directives/identicon/identicon.directive.ts",
							"line": 18,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "HTMLDivElement",
						"package": "typescript",
						"name": "HTMLDivElement"
					}
				},
				{
					"id": 258,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link position} - It's an `@Input()` parameter.\nControls identicon position.\nIt's an optional parameter. The default value is right;\nYou can use enum {@link AUC_IDENTICON_POSITION}"
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/directives/identicon/identicon.directive.ts",
							"line": 27,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 251,
						"name": "AucIdenticonPosition"
					},
					"defaultValue": "AUC_IDENTICON_POSITION.RIGHT"
				},
				{
					"id": 260,
					"name": "ngOnChanges",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/directives/identicon/identicon.directive.ts",
							"line": 34,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 261,
							"name": "ngOnChanges",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnChanges.ngOnChanges"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnChanges.ngOnChanges"
					}
				},
				{
					"id": 262,
					"name": "setIdenticon",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/directives/identicon/identicon.directive.ts",
							"line": 38,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 263,
							"name": "setIdenticon",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						253
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						257,
						258
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						260,
						262
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/directives/identicon/identicon.directive.ts",
					"line": 11,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "OnChanges",
					"package": "@angular/core",
					"name": "OnChanges"
				}
			]
		},
		{
			"id": 679,
			"name": "AucInputComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [INPUT_FIELD_VALUE_ACCESSOR],\n}"
					}
				}
			],
			"children": [
				{
					"id": 680,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 139,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 681,
							"name": "new AucInputComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 682,
									"name": "_cdr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "ChangeDetectorRef",
										"package": "@angular/core",
										"name": "ChangeDetectorRef"
									}
								},
								{
									"id": 683,
									"name": "_elementRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "HTMLElement",
												"package": "typescript",
												"name": "HTMLElement"
											}
										],
										"qualifiedName": "ElementRef",
										"package": "@angular/core",
										"name": "ElementRef"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 679,
								"name": "AucInputComponent"
							}
						}
					]
				},
				{
					"id": 688,
					"name": "adaptive",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link adaptive} - It's an `@Input()` parameter.\nWhether the form field is full width.\nIt's an optional parameter. The default value is false."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 71,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 691,
					"name": "decimal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link decimal} - It's an `@Input()` parameter.\nAllows to input number with decimal point\n{@link decimal} = true - ignore non decimal symbols.\nThis is an optional parameter. The default value is true."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 96,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 686,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link disabled} - It's an `@Input()` parameter.\nWhether the control is disabled.\nIt's an optional parameter. The default value is false."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 55,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 694,
					"name": "errors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link errors} - It's an `@Input()` parameter.\nList of provided errors.\nIt's an optional parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 120,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 697,
					"name": "focus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 126,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 687,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link height} - It's an `@Input()` parameter.\nSets height of form field.\nIt's an optional parameter. The default value is 48."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 63,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "48"
				},
				{
					"id": 693,
					"name": "hint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link hint} - It's an `@Input()` parameter.\nSets hint for form field.\nIt's an optional parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 112,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 695,
					"name": "inputElement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"decorators": [
						{
							"name": "ViewChild",
							"type": {
								"type": "reference",
								"qualifiedName": "ViewChildDecorator",
								"package": "@angular/core",
								"name": "ViewChild"
							},
							"arguments": {
								"selector": "'inputElement'",
								"opts": "{ static: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 123,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript",
								"name": "HTMLInputElement"
							}
						],
						"qualifiedName": "ElementRef",
						"package": "@angular/core",
						"name": "ElementRef"
					}
				},
				{
					"id": 684,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link label} - It's an `@Input()` parameter.\nText for the form field label.\nIt's required parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 39,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 692,
					"name": "max",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link max} - It's an `@Input()` parameter.\nSets max boundaries.\nIt's an optional parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 104,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 685,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link placeholder} - It's an `@Input()` parameter.\nText for the form field placeholder.\nIt's an optional parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 47,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "''"
				},
				{
					"id": 689,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link prefix} - It's an `@Input()` parameter.\nText for the form field prefix.\nIt's an optional parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 79,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 690,
					"name": "suffix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link suffix} - It's an `@Input()` parameter.\nText for the form field suffix.\nIt's an optional parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 87,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 696,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 125,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 698,
					"name": "classNames",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 128,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 699,
							"name": "classNames",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 700,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 701,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 702,
												"name": "el",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								}
							}
						}
					]
				},
				{
					"id": 705,
					"name": "ngOnChanges",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 149,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 706,
							"name": "ngOnChanges",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 707,
									"name": "changes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "SimpleChanges",
										"package": "@angular/core",
										"name": "SimpleChanges"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnChanges.ngOnChanges"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnChanges.ngOnChanges"
					}
				},
				{
					"id": 703,
					"name": "ngOnInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 145,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 704,
							"name": "ngOnInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnInit.ngOnInit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnInit.ngOnInit"
					}
				},
				{
					"id": 710,
					"name": "onChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 163,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 711,
							"name": "onChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 712,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 708,
					"name": "onMaxClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 155,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 709,
							"name": "onMaxClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 713,
					"name": "registerOnChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 174,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 714,
							"name": "registerOnChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 715,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ControlValueAccessor.registerOnChange"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ControlValueAccessor.registerOnChange"
					}
				},
				{
					"id": 716,
					"name": "registerOnTouched",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 178,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 717,
							"name": "registerOnTouched",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 718,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ControlValueAccessor.registerOnTouched"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ControlValueAccessor.registerOnTouched"
					}
				},
				{
					"id": 719,
					"name": "setDisabledState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 182,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 720,
							"name": "setDisabledState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 721,
									"name": "isDisabled",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ControlValueAccessor.setDisabledState"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ControlValueAccessor.setDisabledState"
					}
				},
				{
					"id": 722,
					"name": "writeValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/input/input.component.ts",
							"line": 186,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 723,
							"name": "writeValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 724,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ControlValueAccessor.writeValue"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ControlValueAccessor.writeValue"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						680
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						688,
						691,
						686,
						694,
						697,
						687,
						693,
						695,
						684,
						692,
						685,
						689,
						690,
						696
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						698
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						705,
						703,
						710,
						708,
						713,
						716,
						719,
						722
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/input/input.component.ts",
					"line": 32,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "ControlValueAccessor",
					"package": "@angular/forms",
					"name": "ControlValueAccessor"
				},
				{
					"type": "reference",
					"qualifiedName": "OnChanges",
					"package": "@angular/core",
					"name": "OnChanges"
				},
				{
					"type": "reference",
					"qualifiedName": "OnInit",
					"package": "@angular/core",
					"name": "OnInit"
				}
			]
		},
		{
			"id": 319,
			"name": "AucInsertionDirective",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Directive",
					"type": {
						"type": "reference",
						"qualifiedName": "DirectiveDecorator",
						"package": "@angular/core",
						"name": "Directive"
					},
					"arguments": {
						"obj": "{\n  selector: '[aucInsertion]',\n  exportAs: 'aucInsertion'\n}"
					}
				}
			],
			"children": [
				{
					"id": 320,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/directives/insertion/insertion.directive.ts",
							"line": 13,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 321,
							"name": "new AucInsertionDirective",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 322,
									"name": "_viewContainerRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "ViewContainerRef",
										"package": "@angular/core",
										"name": "ViewContainerRef"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 319,
								"name": "AucInsertionDirective"
							}
						}
					]
				},
				{
					"id": 325,
					"name": "_viewContainerRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"type": {
						"type": "reference",
						"qualifiedName": "ViewContainerRef",
						"package": "@angular/core",
						"name": "ViewContainerRef"
					}
				},
				{
					"id": 323,
					"name": "viewContainerRef",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dialog/directives/insertion/insertion.directive.ts",
							"line": 9,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 324,
							"name": "viewContainerRef",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reference",
								"qualifiedName": "ViewContainerRef",
								"package": "@angular/core",
								"name": "ViewContainerRef"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						320
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						325
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						323
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/dialog/directives/insertion/insertion.directive.ts",
					"line": 8,
					"character": 13
				}
			]
		},
		{
			"id": 958,
			"name": "AucNetworkDropdownComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-network-dropdown',\n  templateUrl: './network-dropdown.component.html',\n  styleUrls: [ './network-dropdown.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
					}
				}
			],
			"children": [
				{
					"id": 959,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/network-dropdown/network-dropdown.component.ts",
							"line": 61,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 960,
							"name": "new AucNetworkDropdownComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 961,
									"name": "_cdr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "ChangeDetectorRef",
										"package": "@angular/core",
										"name": "ChangeDetectorRef"
									}
								},
								{
									"id": 962,
									"name": "_walletConnectService",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1027,
										"name": "AucWalletConnectService"
									}
								},
								{
									"id": 963,
									"name": "_elementRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "HTMLElement",
												"package": "typescript",
												"name": "HTMLElement"
											}
										],
										"qualifiedName": "ElementRef",
										"package": "@angular/core",
										"name": "ElementRef"
									}
								},
								{
									"id": 964,
									"name": "_dialogService",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 358,
										"name": "AucDialogService"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 958,
								"name": "AucNetworkDropdownComponent"
							}
						}
					]
				},
				{
					"id": 971,
					"name": "COLORS",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/network-dropdown/network-dropdown.component.ts",
							"line": 57,
							"character": 9
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"name": "AS_COLOR_GROUP"
						}
					},
					"defaultValue": "AS_COLOR_GROUP"
				},
				{
					"id": 970,
					"name": "currentNetwork",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/network-dropdown/network-dropdown.component.ts",
							"line": 56,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 832,
						"name": "AucNetworkOption"
					}
				},
				{
					"id": 969,
					"name": "isOptionsOpen",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/network-dropdown/network-dropdown.component.ts",
							"line": 55,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 968,
					"name": "isWrongNetwork",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/network-dropdown/network-dropdown.component.ts",
							"line": 54,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 965,
					"name": "networkDropdownConfig",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link networkDropdownConfig} - It's an `@Input()` parameter.\nYou can customize dropdown position and overlay.\nThis is an optional parameter.\nThe default value is\n{\n  overlay: {\n    transparent: true\n  },\n  position: {\n    vertical: AUC_POSITIONS.BELOW,\n    horizontal: AUC_POSITIONS.AFTER\n  }\n}"
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/network-dropdown/network-dropdown.component.ts",
							"line": 37,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 465,
						"name": "AucDropdownConfig"
					},
					"defaultValue": "..."
				},
				{
					"id": 966,
					"name": "networkOptions",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/network-dropdown/network-dropdown.component.ts",
							"line": 50,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 967,
							"name": "networkOptions",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "List of the supported networks. Gets from this._walletConnectService.supportedNetworks"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 832,
									"name": "AucNetworkOption"
								}
							}
						}
					]
				},
				{
					"id": 973,
					"name": "ngOnInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/network-dropdown/network-dropdown.component.ts",
							"line": 68,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 974,
							"name": "ngOnInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnInit.ngOnInit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnInit.ngOnInit"
					}
				},
				{
					"id": 978,
					"name": "onNetworkOptionClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/network-dropdown/network-dropdown.component.ts",
							"line": 110,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 979,
							"name": "onNetworkOptionClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 980,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 832,
										"name": "AucNetworkOption"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 975,
					"name": "setOpened",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/network-dropdown/network-dropdown.component.ts",
							"line": 106,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 976,
							"name": "setOpened",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 977,
									"name": "opened",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						959
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						971,
						970,
						969,
						968,
						965
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						966
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						973,
						978,
						975
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/network-dropdown/network-dropdown.component.ts",
					"line": 20,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "OnInit",
					"package": "@angular/core",
					"name": "OnInit"
				}
			]
		},
		{
			"id": 950,
			"name": "AucNoNetworkConfigComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-no-network-config',\n  templateUrl: './no-network-config.component.html',\n  styleUrls: [ './no-network-config.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}"
					}
				}
			],
			"children": [
				{
					"id": 951,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/network-dropdown/no-network-config/no-network-config.component.ts",
							"line": 15,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 952,
							"name": "new AucNoNetworkConfigComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 953,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 411,
										"typeArguments": [
											{
												"type": "reference",
												"id": 947,
												"name": "AucNoNetworkConfigDialogDataI"
											}
										],
										"name": "AucDialogConfig"
									}
								},
								{
									"id": 954,
									"name": "_dialogRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 443,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "AucDialogRef"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 950,
								"name": "AucNoNetworkConfigComponent"
							}
						}
					]
				},
				{
					"id": 955,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"type": {
						"type": "reference",
						"id": 411,
						"typeArguments": [
							{
								"type": "reference",
								"id": 947,
								"name": "AucNoNetworkConfigDialogDataI"
							}
						],
						"name": "AucDialogConfig"
					}
				},
				{
					"id": 956,
					"name": "onClose",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/network-dropdown/no-network-config/no-network-config.component.ts",
							"line": 19,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 957,
							"name": "onClose",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						951
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						955
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						956
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/network-dropdown/no-network-config/no-network-config.component.ts",
					"line": 13,
					"character": 13
				}
			]
		},
		{
			"id": 984,
			"name": "AucOverlayComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-overlay',\n  templateUrl: './overlay.component.html',\n  styleUrls: [ './overlay.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}"
					}
				}
			],
			"children": [
				{
					"id": 985,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 986,
							"name": "new AucOverlayComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 984,
								"name": "AucOverlayComponent"
							}
						}
					]
				},
				{
					"id": 987,
					"name": "customize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link customize} - It's an `@Input()` parameter.\nYou can customize overlay.\nThis is an optional parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/overlay/overlay.component.ts",
							"line": 18,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 981,
						"name": "AucOverlayCustomizationConfig"
					}
				},
				{
					"id": 988,
					"name": "overlayClicked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "{@link overlayClicked} - It's an `@Output()` parameter.\nEmits when overlay was clicked."
					},
					"decorators": [
						{
							"name": "Output",
							"type": {
								"type": "reference",
								"qualifiedName": "OutputDecorator",
								"package": "@angular/core",
								"name": "Output"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/overlay/overlay.component.ts",
							"line": 24,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"qualifiedName": "EventEmitter",
						"package": "@angular/core",
						"name": "EventEmitter"
					},
					"defaultValue": "..."
				},
				{
					"id": 989,
					"name": "onOverlayClicked",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/overlay/overlay.component.ts",
							"line": 26,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 990,
							"name": "onOverlayClicked",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						985
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						987,
						988
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						989
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/overlay/overlay.component.ts",
					"line": 12,
					"character": 13
				}
			]
		},
		{
			"id": 997,
			"name": "AucProgressBarComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: [ './progress-bar.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}"
					}
				}
			],
			"children": [
				{
					"id": 998,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 999,
							"name": "new AucProgressBarComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 997,
								"name": "AucProgressBarComponent"
							}
						}
					]
				},
				{
					"id": 1000,
					"name": "progress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "{@link progress} - It's an `@Input()` parameter.\nSets progress value.\nThis is required parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/progress-bar/progress-bar.component.ts",
							"line": 16,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1001,
					"name": "total",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "{@link total} - It's an `@Input()` parameter.\nSets total value for the progress.\nYou might never use it.\nThis is an optional parameter. The default value is 100."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/progress-bar/progress-bar.component.ts",
							"line": 24,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "100"
				},
				{
					"id": 1002,
					"name": "ngOnInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/progress-bar/progress-bar.component.ts",
							"line": 26,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1003,
							"name": "ngOnInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnInit.ngOnInit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnInit.ngOnInit"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						998
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1000,
						1001
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1002
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/progress-bar/progress-bar.component.ts",
					"line": 10,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "OnInit",
					"package": "@angular/core",
					"name": "OnInit"
				}
			]
		},
		{
			"id": 1006,
			"name": "AucRippleDirective",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Directive",
					"type": {
						"type": "reference",
						"qualifiedName": "DirectiveDecorator",
						"package": "@angular/core",
						"name": "Directive"
					},
					"arguments": {
						"obj": "{\n  selector: '[aucRipple]',\n  exportAs: 'aucRipple'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1007,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/ripple/directives/ripple/ripple.directive.ts",
							"line": 24,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1008,
							"name": "new AucRippleDirective",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1009,
									"name": "_renderer2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Renderer2",
										"package": "@angular/core",
										"name": "Renderer2"
									}
								},
								{
									"id": 1010,
									"name": "_elementRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "ElementRef",
										"package": "@angular/core",
										"name": "ElementRef"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1006,
								"name": "AucRippleDirective"
							}
						}
					]
				},
				{
					"id": 1011,
					"name": "customClass",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link customClass} - It's an `@Input()` parameter.\nSets custom class to the ripple element.\nThis is an optional parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/ripple/directives/ripple/ripple.directive.ts",
							"line": 14,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1013,
					"name": "onMousedown",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"decorators": [
						{
							"name": "HostListener",
							"type": {
								"type": "reference",
								"qualifiedName": "HostListenerDecorator",
								"package": "@angular/core",
								"name": "HostListener"
							},
							"arguments": {
								"eventName": "'mousedown'",
								"args": "[ '$event' ]"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/ripple/directives/ripple/ripple.directive.ts",
							"line": 18,
							"character": 43
						}
					],
					"signatures": [
						{
							"id": 1014,
							"name": "onMousedown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1015,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1016,
					"name": "setStyle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/ripple/directives/ripple/ripple.directive.ts",
							"line": 29,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1017,
							"name": "setStyle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1018,
									"name": "el",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "HTMLElement",
										"package": "typescript",
										"name": "HTMLElement"
									}
								},
								{
									"id": 1019,
									"name": "style",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1020,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1007
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1011
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1013,
						1016
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/ripple/directives/ripple/ripple.directive.ts",
					"line": 8,
					"character": 13
				}
			]
		},
		{
			"id": 267,
			"name": "AucSetStylePropsDirective",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Directive",
					"type": {
						"type": "reference",
						"qualifiedName": "DirectiveDecorator",
						"package": "@angular/core",
						"name": "Directive"
					},
					"arguments": {
						"obj": "{\n  selector: '[aucSetStyleProps]',\n  exportAs: 'aucSetStyleProps'\n}"
					}
				}
			],
			"children": [
				{
					"id": 268,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/directives/set-style-props/set-style-props.directive.ts",
							"line": 21,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 269,
							"name": "new AucSetStylePropsDirective",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 270,
									"name": "_elementRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "ElementRef",
										"package": "@angular/core",
										"name": "ElementRef"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 267,
								"name": "AucSetStylePropsDirective"
							}
						}
					]
				},
				{
					"id": 271,
					"name": "aucSetStyleProps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link aucSetStyleProps} - It's an `@Input()` parameter.\nUsed for setting style properties to the element.\nYou can use set properties in your scss.\nEx: aucSetStyleProps = {name: '--text-color: 'red'}.\nIn your scss file you can use it: color: var(--text-color);"
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/directives/set-style-props/set-style-props.directive.ts",
							"line": 19,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 264,
								"name": "AucSetStyleProp"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 264,
									"name": "AucSetStyleProp"
								}
							}
						]
					}
				},
				{
					"id": 272,
					"name": "ngOnChanges",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/directives/set-style-props/set-style-props.directive.ts",
							"line": 24,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 273,
							"name": "ngOnChanges",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnChanges.ngOnChanges"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnChanges.ngOnChanges"
					}
				},
				{
					"id": 274,
					"name": "setProperty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/directives/set-style-props/set-style-props.directive.ts",
							"line": 28,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 275,
							"name": "setProperty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 276,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 264,
											"name": "AucSetStyleProp"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						268
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						271
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						272,
						274
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/directives/set-style-props/set-style-props.directive.ts",
					"line": 10,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "OnChanges",
					"package": "@angular/core",
					"name": "OnChanges"
				}
			]
		},
		{
			"id": 991,
			"name": "AucShortAddressPipe",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Pipe",
					"type": {
						"type": "reference",
						"qualifiedName": "PipeDecorator",
						"package": "@angular/core",
						"name": "Pipe"
					},
					"arguments": {
						"obj": "{\n  name: 'aucShortAddress'\n}"
					}
				}
			],
			"children": [
				{
					"id": 992,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 993,
							"name": "new AucShortAddressPipe",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 991,
								"name": "AucShortAddressPipe"
							}
						}
					]
				},
				{
					"id": 994,
					"name": "transform",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/pipes/short-address.pipe.ts",
							"line": 9,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 995,
							"name": "transform",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 996,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "PipeTransform.transform"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "PipeTransform.transform"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						992
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						994
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/pipes/short-address.pipe.ts",
					"line": 8,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "PipeTransform",
					"package": "@angular/core",
					"name": "PipeTransform"
				}
			]
		},
		{
			"id": 1108,
			"name": "AucSpinnerComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: [ './spinner.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}"
					}
				}
			],
			"children": [
				{
					"id": 1109,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1110,
							"name": "new AucSpinnerComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1108,
								"name": "AucSpinnerComponent"
							}
						}
					]
				},
				{
					"id": 1113,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link color} - It's an `@Input()` parameter.\nSets theme of the spinner.\nIt's an optional parameter. The default value is #4678F0 - blue.\nYou can use constant {@link AsColors} or use other colors by yourself."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/spinner/spinner.component.ts",
							"line": 33,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 1111,
					"name": "diameter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link diameter} - It's an `@Input()` parameter.\nSets diameter for the spinner.\nThis is an optional parameter. The default value is 40."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/spinner/spinner.component.ts",
							"line": 18,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "40"
				},
				{
					"id": 1114,
					"name": "parts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/spinner/spinner.component.ts",
							"line": 35,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 1112,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link width} - It's an `@Input()` parameter.\nВets the thickness of the spinnerю\nThis is an optional parameter. The default value is 4."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/spinner/spinner.component.ts",
							"line": 25,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "4"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1109
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1113,
						1111,
						1114,
						1112
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/spinner/spinner.component.ts",
					"line": 12,
					"character": 13
				}
			]
		},
		{
			"id": 1130,
			"name": "AucTableComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-table',\n  templateUrl: './table.component.html',\n  styleUrls: [ './table.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}"
					}
				}
			],
			"children": [
				{
					"id": 1131,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1132,
							"name": "new AucTableComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1130,
								"name": "AucTableComponent"
							}
						}
					]
				},
				{
					"id": 1142,
					"name": "SORT_DIRECTION",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/table/table.component.ts",
							"line": 59,
							"character": 9
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 563,
							"name": "AUC_SORT_DIRECTION"
						}
					},
					"defaultValue": "AUC_SORT_DIRECTION"
				},
				{
					"id": 1138,
					"name": "customClass",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link customize} - It's an `@Input()` parameter.\nSets custom class to the table container.\nThis is an optional parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/table/table.component.ts",
							"line": 44,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1136,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "{@link data} - It's an `@Input()` parameter.\nSets table data.\nThis is required parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/table/table.component.ts",
							"line": 30,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 1127,
							"name": "AucTableRow"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 1141,
					"name": "headers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/table/table.component.ts",
							"line": 58,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 1115,
							"name": "AucTableHeaderItem"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 1137,
					"name": "isLoadMore",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "{@link isLoadMore} - It's an `@Input()` parameter.\nIf true the Load more button will be visible.\nThis is an optional parameter. The default value is false"
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/table/table.component.ts",
							"line": 37,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1139,
					"name": "loadMore",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "{@link loadMore} - It's an `@Output()` parameter.\nEmits when load more button was clicked."
					},
					"decorators": [
						{
							"name": "Output",
							"type": {
								"type": "reference",
								"qualifiedName": "OutputDecorator",
								"package": "@angular/core",
								"name": "Output"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/table/table.component.ts",
							"line": 50,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"qualifiedName": "EventEmitter",
						"package": "@angular/core",
						"name": "EventEmitter"
					},
					"defaultValue": "..."
				},
				{
					"id": 1140,
					"name": "sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "{@link sort} - It's an `@Output()` parameter.\nEmits when sort was clicked."
					},
					"decorators": [
						{
							"name": "Output",
							"type": {
								"type": "reference",
								"qualifiedName": "OutputDecorator",
								"package": "@angular/core",
								"name": "Output"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/table/table.component.ts",
							"line": 56,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 845,
								"name": "AucSort"
							}
						],
						"qualifiedName": "EventEmitter",
						"package": "@angular/core",
						"name": "EventEmitter"
					},
					"defaultValue": "..."
				},
				{
					"id": 1133,
					"name": "tableHeaders",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/table/table.component.ts",
							"line": 20,
							"character": 15
						}
					],
					"setSignature": [
						{
							"id": 1134,
							"name": "tableHeaders",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"comment": {
								"shortText": "{@link tableHeaders} - It's an `@Input()` parameter.\nSets table headers.\nThis is required parameter."
							},
							"parameters": [
								{
									"id": 1135,
									"name": "headers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1115,
											"name": "AucTableHeaderItem"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1143,
					"name": "onLoadMore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/table/table.component.ts",
							"line": 61,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1144,
							"name": "onLoadMore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1145,
					"name": "sortBy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/table/table.component.ts",
							"line": 65,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1146,
							"name": "sortBy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1147,
									"name": "sort",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 845,
										"name": "AucSort"
									}
								},
								{
									"id": 1148,
									"name": "columnIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1131
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1142,
						1138,
						1136,
						1141,
						1137,
						1139,
						1140
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1133
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1143,
						1145
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/table/table.component.ts",
					"line": 14,
					"character": 13
				}
			]
		},
		{
			"id": 1185,
			"name": "AucTransactionService",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Injectable",
					"type": {
						"type": "reference",
						"qualifiedName": "InjectableDecorator",
						"package": "@angular/core",
						"name": "Injectable"
					},
					"arguments": {}
				}
			],
			"children": [
				{
					"id": 1189,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/transactions/services/transaction/transaction.service.ts",
							"line": 33,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1190,
							"name": "new AucTransactionService",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1191,
									"name": "_http",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "HttpClient",
										"package": "@angular/common",
										"name": "HttpClient"
									}
								},
								{
									"id": 1192,
									"name": "_walletConnectService",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1027,
										"name": "AucWalletConnectService"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1185,
								"name": "AucTransactionService"
							}
						}
					]
				},
				{
					"id": 1196,
					"name": "transactionsChanged$",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/transactions/services/transaction/transaction.service.ts",
							"line": 29,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 1197,
							"name": "transactionsChanged$",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 822,
											"name": "AucEtherscanTransactionLocalStorage"
										}
									}
								],
								"qualifiedName": "Observable",
								"package": "rxjs",
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1210,
					"name": "clearTransactions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/transactions/services/transaction/transaction.service.ts",
							"line": 113,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1211,
							"name": "clearTransactions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1200,
					"name": "dispose",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/transactions/services/transaction/transaction.service.ts",
							"line": 68,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1201,
							"name": "dispose",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1212,
					"name": "getRemoteTransactions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/transactions/services/transaction/transaction.service.ts",
							"line": 126,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1213,
							"name": "getRemoteTransactions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Method gor getting remote transactions from blockchain."
							},
							"parameters": [
								{
									"id": 1214,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "wallet address."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1215,
									"name": "chainId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "0x-prefixed hexadecimal string."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1216,
									"name": "page",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "number of the page. Uses for pagination."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								},
								{
									"id": 1217,
									"name": "offset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Uses for pagination.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								},
								{
									"id": 1218,
									"name": "sortDirection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1230,
										"name": "AucSortDirection"
									},
									"defaultValue": "AUC_SORT_DIRECTION.ASC"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 798,
										"name": "AucEtherscanTransactionResponse"
									}
								],
								"qualifiedName": "Observable",
								"package": "rxjs",
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1208,
					"name": "markAsViewed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/transactions/services/transaction/transaction.service.ts",
							"line": 106,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1209,
							"name": "markAsViewed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1198,
					"name": "refreshTransactions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/transactions/services/transaction/transaction.service.ts",
							"line": 57,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1199,
							"name": "refreshTransactions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1202,
					"name": "saveTransaction",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/transactions/services/transaction/transaction.service.ts",
							"line": 74,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1203,
							"name": "saveTransaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1204,
									"name": "chainId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1205,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1206,
									"name": "hash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1207,
									"name": "status",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 566,
										"name": "AUC_TRANSACTION_STATUS"
									},
									"defaultValue": "AUC_TRANSACTION_STATUS.PENDING"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1186,
					"name": "getTransactionApiUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "lib/transactions/services/transaction/transaction.service.ts",
							"line": 47,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1187,
							"name": "getTransactionApiUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "API url buy chainId. <br>\nSupported networks {@link BlockExplorerApiUrl}`. <br>\nYou can add your custom API url when init library {@link AucNetworkOption.blockExplorerApiUrl}.\n"
							},
							"parameters": [
								{
									"id": 1188,
									"name": "chainId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "0x-prefixed hexadecimal string."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1189
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1196
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1210,
						1200,
						1212,
						1208,
						1198,
						1202,
						1186
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/transactions/services/transaction/transaction.service.ts",
					"line": 24,
					"character": 13
				}
			]
		},
		{
			"id": 1149,
			"name": "AucTransactionsHistoryComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-transactions-history',\n  templateUrl: './transactions-history.component.html',\n  styleUrls: [ './transactions-history.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}"
					}
				}
			],
			"children": [
				{
					"id": 1150,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/transactions/components/transactions-history/transactions-history.component.ts",
							"line": 37,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1151,
							"name": "new AucTransactionsHistoryComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1152,
									"name": "_dialogService",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 358,
										"name": "AucDialogService"
									}
								},
								{
									"id": 1153,
									"name": "_cdr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "ChangeDetectorRef",
										"package": "@angular/core",
										"name": "ChangeDetectorRef"
									}
								},
								{
									"id": 1154,
									"name": "_transactionService",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1185,
										"name": "AucTransactionService"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1149,
								"name": "AucTransactionsHistoryComponent"
							}
						}
					]
				},
				{
					"id": 1160,
					"name": "BTN_APPEARANCE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/transactions/components/transactions-history/transactions-history.component.ts",
							"line": 33,
							"character": 9
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 109,
							"name": "AUC_BUTTON_APPEARANCE"
						}
					},
					"defaultValue": "AUC_BUTTON_APPEARANCE"
				},
				{
					"id": 1159,
					"name": "COLORS",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/transactions/components/transactions-history/transactions-history.component.ts",
							"line": 32,
							"character": 9
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"name": "AS_COLOR_GROUP"
						}
					},
					"defaultValue": "AS_COLOR_GROUP"
				},
				{
					"id": 1155,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link disabled} - It's an `@Input()` parameter.\nWhether the button is disabled.\nThis is an optional parameter. The default value is false."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/transactions/components/transactions-history/transactions-history.component.ts",
							"line": 27,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1156,
					"name": "hasFailedTx",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/transactions/components/transactions-history/transactions-history.component.ts",
							"line": 29,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1157,
					"name": "hasPendingTx",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/transactions/components/transactions-history/transactions-history.component.ts",
							"line": 30,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1158,
					"name": "txCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/transactions/components/transactions-history/transactions-history.component.ts",
							"line": 31,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 1162,
					"name": "ngOnInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/transactions/components/transactions-history/transactions-history.component.ts",
							"line": 44,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1163,
							"name": "ngOnInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnInit.ngOnInit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnInit.ngOnInit"
					}
				},
				{
					"id": 1164,
					"name": "onTransactionsClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/transactions/components/transactions-history/transactions-history.component.ts",
							"line": 67,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1165,
							"name": "onTransactionsClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1150
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1160,
						1159,
						1155,
						1156,
						1157,
						1158
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1162,
						1164
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/transactions/components/transactions-history/transactions-history.component.ts",
					"line": 20,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "OnInit",
					"package": "@angular/core",
					"name": "OnInit"
				}
			]
		},
		{
			"id": 1168,
			"name": "AucTransactionsHistoryModalComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-transactions-history-modal',\n  templateUrl: './transactions-history-modal.component.html',\n  styleUrls: [ './transactions-history-modal.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}"
					}
				}
			],
			"children": [
				{
					"id": 1169,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/transactions/components/transactions-history-modal/transactions-history-modal.component.ts",
							"line": 20,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1170,
							"name": "new AucTransactionsHistoryModalComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1171,
									"name": "_config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 411,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1166,
												"name": "AucRecentTransactionsModalData"
											}
										],
										"name": "AucDialogConfig"
									}
								},
								{
									"id": 1172,
									"name": "_dialogRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 443,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "AucDialogRef"
									}
								},
								{
									"id": 1173,
									"name": "_transactionService",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1185,
										"name": "AucTransactionService"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1168,
								"name": "AucTransactionsHistoryModalComponent"
							}
						}
					]
				},
				{
					"id": 1175,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/transactions/components/transactions-history-modal/transactions-history-modal.component.ts",
							"line": 18,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 1166,
						"name": "AucRecentTransactionsModalData"
					}
				},
				{
					"id": 1174,
					"name": "transactions$",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/transactions/components/transactions-history-modal/transactions-history-modal.component.ts",
							"line": 17,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 822,
									"name": "AucEtherscanTransactionLocalStorage"
								}
							}
						],
						"qualifiedName": "Observable",
						"package": "rxjs",
						"name": "Observable"
					}
				},
				{
					"id": 1178,
					"name": "ngOnDestroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/transactions/components/transactions-history-modal/transactions-history-modal.component.ts",
							"line": 33,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1179,
							"name": "ngOnDestroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnDestroy.ngOnDestroy"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnDestroy.ngOnDestroy"
					}
				},
				{
					"id": 1176,
					"name": "onCloseClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/transactions/components/transactions-history-modal/transactions-history-modal.component.ts",
							"line": 29,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1177,
							"name": "onCloseClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1169
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1175,
						1174
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1178,
						1176
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/transactions/components/transactions-history-modal/transactions-history-modal.component.ts",
					"line": 16,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "OnDestroy",
					"package": "@angular/core",
					"name": "OnDestroy"
				}
			]
		},
		{
			"id": 1180,
			"name": "AucTransactionsListComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-transactions-list',\n  templateUrl: './transactions-list.component.html',\n  styleUrls: [ './transactions-list.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}"
					}
				}
			],
			"children": [
				{
					"id": 1181,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1182,
							"name": "new AucTransactionsListComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1180,
								"name": "AucTransactionsListComponent"
							}
						}
					]
				},
				{
					"id": 1184,
					"name": "emptyText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link emptyText} - It's an `@Input()` parameter. <br>\nSets text if no transactions. <br>\nThis is an optional parameter. The default value is \"Your transactions will appear here...\""
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/transactions/components/transactions-list/transactions-list.component.ts",
							"line": 27,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'Your transactions will appear here...'"
				},
				{
					"id": 1183,
					"name": "transactions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link transactions} - It's an `@Input()` parameter. <br>\nSets transactions list. <br>\nThis is required parameter."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/transactions/components/transactions-list/transactions-list.component.ts",
							"line": 19,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 822,
							"name": "AucEtherscanTransactionLocalStorage"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1181
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1184,
						1183
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/transactions/components/transactions-list/transactions-list.component.ts",
					"line": 12,
					"character": 13
				}
			]
		},
		{
			"id": 896,
			"name": "AucTransferModalComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-transfer-modal',\n  templateUrl: './transfer-modal.component.html',\n  styleUrls: [ './transfer-modal.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
					}
				}
			],
			"children": [
				{
					"id": 897,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/transfer-modal.component.ts",
							"line": 33,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 898,
							"name": "new AucTransferModalComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 899,
									"name": "_config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 411,
										"typeArguments": [
											{
												"type": "reference",
												"id": 883,
												"name": "AucTransferModalData"
											}
										],
										"name": "AucDialogConfig"
									}
								},
								{
									"id": 900,
									"name": "_dialogRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 443,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "AucDialogRef"
									}
								},
								{
									"id": 901,
									"name": "_cdr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "ChangeDetectorRef",
										"package": "@angular/core",
										"name": "ChangeDetectorRef"
									}
								},
								{
									"id": 902,
									"name": "_walletConnectService",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1027,
										"name": "AucWalletConnectService"
									}
								},
								{
									"id": 903,
									"name": "_transactionService",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1185,
										"name": "AucTransactionService"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 896,
								"name": "AucTransferModalComponent"
							}
						}
					]
				},
				{
					"id": 904,
					"name": "amountControl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/transfer-modal.component.ts",
							"line": 21,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "FormControl",
						"package": "@angular/forms",
						"name": "FormControl"
					},
					"defaultValue": "..."
				},
				{
					"id": 905,
					"name": "currentAllowance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/transfer-modal.component.ts",
							"line": 22,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'0'"
				},
				{
					"id": 906,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/transfer-modal.component.ts",
							"line": 23,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 883,
						"name": "AucTransferModalData"
					}
				},
				{
					"id": 907,
					"name": "currentStep",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/transfer-modal.component.ts",
							"line": 25,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 908,
							"name": "currentStep",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 895,
								"name": "AucTransactionStep"
							}
						}
					]
				},
				{
					"id": 913,
					"name": "ngOnDestroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/transfer-modal.component.ts",
							"line": 59,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 914,
							"name": "ngOnDestroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnDestroy.ngOnDestroy"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnDestroy.ngOnDestroy"
					}
				},
				{
					"id": 911,
					"name": "ngOnInit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/transfer-modal.component.ts",
							"line": 43,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 912,
							"name": "ngOnInit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "OnInit.ngOnInit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "OnInit.ngOnInit"
					}
				},
				{
					"id": 917,
					"name": "onApproveClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/transfer-modal.component.ts",
							"line": 67,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 918,
							"name": "onApproveClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 915,
					"name": "onCloseClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/transfer-modal.component.ts",
							"line": 63,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 916,
							"name": "onCloseClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 919,
					"name": "onConfirmClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/transfer-modal.component.ts",
							"line": 77,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 920,
							"name": "onConfirmClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						897
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						904,
						905,
						906
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						907
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						913,
						911,
						917,
						915,
						919
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/modals/transfer-modal/transfer-modal.component.ts",
					"line": 20,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "OnInit",
					"package": "@angular/core",
					"name": "OnInit"
				},
				{
					"type": "reference",
					"qualifiedName": "OnDestroy",
					"package": "@angular/core",
					"name": "OnDestroy"
				}
			]
		},
		{
			"id": 277,
			"name": "AucTriggerDirective",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Directive",
					"type": {
						"type": "reference",
						"qualifiedName": "DirectiveDecorator",
						"package": "@angular/core",
						"name": "Directive"
					},
					"arguments": {
						"obj": "{\n  selector: '[aucTrigger]',\n  exportAs: 'aucTrigger'\n}"
					}
				}
			],
			"children": [
				{
					"id": 278,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/directives/trigger/trigger.directive.ts",
							"line": 55,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 279,
							"name": "new AucTriggerDirective",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 280,
									"name": "_renderer2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Renderer2",
										"package": "@angular/core",
										"name": "Renderer2"
									}
								},
								{
									"id": 281,
									"name": "_elementRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "ElementRef",
										"package": "@angular/core",
										"name": "ElementRef"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 277,
								"name": "AucTriggerDirective"
							}
						}
					]
				},
				{
					"id": 283,
					"name": "onShowHide",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "{@link onShowHide} - It's an `@Output()` parameter.\nEmits show/hide state.\nIf opened - true.\nIf closed - false."
					},
					"decorators": [
						{
							"name": "Output",
							"type": {
								"type": "reference",
								"qualifiedName": "OutputDecorator",
								"package": "@angular/core",
								"name": "Output"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/directives/trigger/trigger.directive.ts",
							"line": 27,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"qualifiedName": "EventEmitter",
						"package": "@angular/core",
						"name": "EventEmitter"
					},
					"defaultValue": "..."
				},
				{
					"id": 286,
					"name": "opened$",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/directives/trigger/trigger.directive.ts",
							"line": 32,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"qualifiedName": "BehaviorSubject",
						"package": "rxjs",
						"name": "BehaviorSubject"
					},
					"defaultValue": "..."
				},
				{
					"id": 282,
					"name": "triggerClass",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link triggerClass} - It's an `@Input()` parameter.\nYou can customize element when opened status.\nThis is an optional parameter. By default, used auc-trigger-opened."
					},
					"decorators": [
						{
							"name": "Input",
							"type": {
								"type": "reference",
								"qualifiedName": "InputDecorator",
								"package": "@angular/core",
								"name": "Input"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "lib/directives/trigger/trigger.directive.ts",
							"line": 18,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'auc-trigger-opened'"
				},
				{
					"id": 295,
					"name": "nativeElement",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/directives/trigger/trigger.directive.ts",
							"line": 51,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 296,
							"name": "nativeElement",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 287,
					"name": "opened",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/directives/trigger/trigger.directive.ts",
							"line": 34,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 288,
							"name": "opened",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 292,
					"name": "onClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"decorators": [
						{
							"name": "HostListener",
							"type": {
								"type": "reference",
								"qualifiedName": "HostListenerDecorator",
								"package": "@angular/core",
								"name": "HostListener"
							},
							"arguments": {
								"eventName": "'click'",
								"args": "[ '$event' ]"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/directives/trigger/trigger.directive.ts",
							"line": 44,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 293,
							"name": "onClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 294,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "MouseEvent",
										"package": "typescript",
										"name": "MouseEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 297,
					"name": "showHide",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/directives/trigger/trigger.directive.ts",
							"line": 59,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 298,
							"name": "showHide",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 299,
									"name": "isOpen",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						278
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						283,
						286,
						282
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						295,
						287
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						292,
						297
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/directives/trigger/trigger.directive.ts",
					"line": 11,
					"character": 13
				}
			]
		},
		{
			"id": 1027,
			"name": "AucWalletConnectService",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Injectable",
					"type": {
						"type": "reference",
						"qualifiedName": "InjectableDecorator",
						"package": "@angular/core",
						"name": "Injectable"
					},
					"arguments": {}
				}
			],
			"children": [
				{
					"id": 1028,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
							"line": 235,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1029,
							"name": "new AucWalletConnectService",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1027,
								"name": "AucWalletConnectService"
							}
						}
					]
				},
				{
					"id": 1036,
					"name": "accountsChanged$",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
							"line": 65,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 1037,
							"name": "accountsChanged$",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "{@link accountsChanged$} It's getter. <br>\nEmits when account was changed. <br>\nYou can subscribe on it."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"qualifiedName": "Observable",
								"package": "rxjs",
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1048,
					"name": "balanceChanged$",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
							"line": 119,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 1049,
							"name": "balanceChanged$",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "{@link balanceChanged$} It's getter. <br>\nEmits when balance was changed. <br>\nYou can subscribe on it."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Observable",
								"package": "rxjs",
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1056,
					"name": "cantFindAddingNetwork$",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
							"line": 180,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 1057,
							"name": "cantFindAddingNetwork$",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "{@link cantFindAddingNetwork$} It's getter. <br>\nEmits when adding new network and config doesn't exist. <br>\nYou can subscribe on it and show some message to user."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Observable",
								"package": "rxjs",
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1038,
					"name": "chainChanged$",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
							"line": 74,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 1039,
							"name": "chainChanged$",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "{@link chainChanged$} It's getter. <br>\nEmits when chain was changed. <br>\nYou can subscribe on it."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Observable",
								"package": "rxjs",
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1040,
					"name": "connectChanged$",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
							"line": 83,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 1041,
							"name": "connectChanged$",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "{@link connectChanged$} It's getter. <br>\nEmits when connect event. Emits from Metamask {@link AUC_ETH_EVENTS.CONNECT} event. <br>\nYou can subscribe on it."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 743,
										"name": "AucConnectInfo"
									}
								],
								"qualifiedName": "Observable",
								"package": "rxjs",
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1034,
					"name": "connectionState",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
							"line": 47,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 1035,
							"name": "connectionState",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "{@link connectionState} It's getter.",
								"returns": "current connection state.\n"
							},
							"type": {
								"type": "reference",
								"id": 1024,
								"name": "AucConnectionState"
							}
						}
					]
				},
				{
					"id": 1042,
					"name": "disconnectChanged$",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
							"line": 92,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 1043,
							"name": "disconnectChanged$",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "{@link disconnectChanged$} It's getter. <br>\nEmits when disconnect event. Emits from Metamask {@link AUC_ETH_EVENTS.DISCONNECT} event. <br>\nYou can subscribe on it."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 748,
										"name": "AucProviderRpcError"
									}
								],
								"qualifiedName": "Observable",
								"package": "rxjs",
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1044,
					"name": "messageChanged$",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
							"line": 101,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 1045,
							"name": "messageChanged$",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "{@link messageChanged$} It's getter. <br>\nEmits when message events. Emits from Metamask {@link AUC_ETH_EVENTS.MESSAGE} event. <br>\nYou can subscribe on it."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 745,
										"name": "AucProviderMessage"
									}
								],
								"qualifiedName": "Observable",
								"package": "rxjs",
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1046,
					"name": "networkChanged$",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
							"line": 110,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 1047,
							"name": "networkChanged$",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "{@link networkChanged$} It's getter. <br>\nEmits when network was changed. <br>\nYou can subscribe on it."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"qualifiedName": "Observable",
								"package": "rxjs",
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1032,
					"name": "onboard",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
							"line": 39,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 1033,
							"name": "onboard",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "{@link onboard} It's getter. <br>\nThis library uses {@link Onboard} for connecting wallet.",
								"returns": "current {@link Onboard} instance.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "API",
								"package": "bnc-onboard",
								"name": "API"
							}
						}
					]
				},
				{
					"id": 1050,
					"name": "selectedNetwork$",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
							"line": 128,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 1051,
							"name": "selectedNetwork$",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "{@link selectedNetwork$} It's getter. <br>\nEmits when selected network. <br>\nYou can subscribe on it."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 832,
										"name": "AucNetworkOption"
									}
								],
								"qualifiedName": "Observable",
								"package": "rxjs",
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1052,
					"name": "supportedNetworks",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
							"line": 136,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 1053,
							"name": "supportedNetworks",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "{@link supportedNetworks} It's getter. <br>",
								"returns": "Supported networks list.\n"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 832,
									"name": "AucNetworkOption"
								}
							}
						}
					],
					"setSignature": [
						{
							"id": 1054,
							"name": "supportedNetworks",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"comment": {
								"shortText": "{@link supportedNetworks} It's setter. <br>\nSets supported networks list. <br>\nYou can set it in initialize method or set it later;",
								"returns": "Supported networks list.\n"
							},
							"parameters": [
								{
									"id": 1055,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 832,
											"name": "AucNetworkOption"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1030,
					"name": "web3",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
							"line": 30,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 1031,
							"name": "web3",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "{@link web3} It's getter.",
								"returns": "current {@link Web3} instance.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Web3",
								"package": "web3",
								"name": "default"
							}
						}
					]
				},
				{
					"id": 1089,
					"name": "addEthereumChain",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
							"line": 360,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1090,
							"name": "addEthereumChain",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This method is used for adding new network to Metamask by {@link chainParams}."
							},
							"parameters": [
								{
									"id": 1091,
									"name": "chainParams",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Uses for adding new network to Metamask.\nThis Library already have {@link chainParams} for the next chainIds {@link AUC_CHAIN_ID}.\nYou can get it uses methood {@link aucGetChainParams}\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 732,
												"name": "AucEthChainParams"
											}
										],
										"qualifiedName": "Partial",
										"package": "typescript",
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"qualifiedName": "Observable",
								"package": "rxjs",
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1080,
					"name": "connectWallet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
							"line": 288,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1081,
							"name": "connectWallet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1082,
									"name": "isDisconnect",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1024,
										"name": "AucConnectionState"
									}
								],
								"qualifiedName": "Observable",
								"package": "rxjs",
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1083,
					"name": "disconnectWallet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
							"line": 313,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1084,
							"name": "disconnectWallet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Observable",
								"package": "rxjs",
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1076,
					"name": "initialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
							"line": 244,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1077,
							"name": "initialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This library uses {@link Onboard} for initialization wallet connection.\nMore information about config {@link https://www.npmjs.com/package/bnc-onboard}."
							},
							"parameters": [
								{
									"id": 1078,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Initialization Config for wallet connection."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Initialization",
												"package": "bnc-onboard",
												"name": "Initialization"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "subscriptions"
													},
													{
														"type": "literal",
														"value": "darkMode"
													},
													{
														"type": "literal",
														"value": "hideBranding"
													}
												]
											}
										],
										"qualifiedName": "Omit",
										"package": "typescript",
										"name": "Omit"
									}
								},
								{
									"id": 1079,
									"name": "supportedNetworks",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "List of the supported networks.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 832,
											"name": "AucNetworkOption"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Observable",
								"package": "rxjs",
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1085,
					"name": "switchEthereumChain",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
							"line": 334,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1086,
							"name": "switchEthereumChain",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This method is used for switching Metamask network by {@link chainId}. <br>\nIf Metamask doesn't have this {@link chainId} it can be added by parameter {@link chainParams}. <br>"
							},
							"parameters": [
								{
									"id": 1087,
									"name": "chainId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "0x-prefixed hexadecimal string. <br>\nIf you don't have chainId, you can use helper {@link aucConvertChainIdToHex} to generate it.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1088,
									"name": "chainParams",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "An optional parameter. <br>\nUses for adding new network to Metamask if it doesn't include network by {@link chainId}. <br>\nThis Library already have {@link chainParams} for the next chainIds {@link AUC_CHAIN_ID}. <br>\nYou can use your own specific params.\n"
									},
									"type": {
										"type": "reference",
										"id": 732,
										"name": "AucEthChainParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"qualifiedName": "Observable",
								"package": "rxjs",
								"name": "Observable"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1028
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1036,
						1048,
						1056,
						1038,
						1040,
						1034,
						1042,
						1044,
						1046,
						1032,
						1050,
						1052,
						1030
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1089,
						1080,
						1083,
						1076,
						1085
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/services/wallet-connect/wallet-connect.service.ts",
					"line": 25,
					"character": 13
				}
			]
		},
		{
			"id": 932,
			"name": "AucWrongNetworkModalComponent",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"qualifiedName": "ComponentDecorator",
						"package": "@angular/core",
						"name": "Component"
					},
					"arguments": {
						"obj": "{\n  selector: 'auc-wrong-network-modal',\n  templateUrl: './wrong-network-modal.component.html',\n  styleUrls: [ './wrong-network-modal.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}"
					}
				}
			],
			"children": [
				{
					"id": 933,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/wrong-network-modal/wrong-network-modal.component.ts",
							"line": 20,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 934,
							"name": "new AucWrongNetworkModalComponent",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 935,
									"name": "_config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 411,
										"typeArguments": [
											{
												"type": "reference",
												"id": 925,
												"name": "AucWrongNetworkModalData"
											}
										],
										"name": "AucDialogConfig"
									}
								},
								{
									"id": 936,
									"name": "_dialogRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 443,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "AucDialogRef"
									}
								},
								{
									"id": 937,
									"name": "_walletConnectService",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1027,
										"name": "AucWalletConnectService"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 932,
								"name": "AucWrongNetworkModalComponent"
							}
						}
					]
				},
				{
					"id": 938,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/wrong-network-modal/wrong-network-modal.component.ts",
							"line": 17,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 925,
						"name": "AucWrongNetworkModalData"
					}
				},
				{
					"id": 939,
					"name": "disconnectBtnColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/wrong-network-modal/wrong-network-modal.component.ts",
							"line": 18,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "AsColorGroup"
					},
					"defaultValue": "AS_COLOR_GROUP.RED"
				},
				{
					"id": 940,
					"name": "onCloseClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/wrong-network-modal/wrong-network-modal.component.ts",
							"line": 28,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 941,
							"name": "onCloseClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 942,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 945,
					"name": "onDisconnectClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/wrong-network-modal/wrong-network-modal.component.ts",
							"line": 36,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 946,
							"name": "onDisconnectClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 943,
					"name": "onSwitchNetworkClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/modals/wrong-network-modal/wrong-network-modal.component.ts",
							"line": 32,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 944,
							"name": "onSwitchNetworkClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						933
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						938,
						939
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						940,
						945,
						943
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/modals/wrong-network-modal/wrong-network-modal.component.ts",
					"line": 16,
					"character": 13
				}
			]
		},
		{
			"id": 4,
			"name": "AucAccountBalanceAddressConfig",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 8,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link color} - Sets theme of the address button. <br>\nIt's an optional parameter. The default value is blue. <br>\nYou can use enum {@link AS_COLOR_GROUP}."
					},
					"sources": [
						{
							"fileName": "lib/account-balance/interfaces/account-balance-address-config.interface.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "AsColorGroup"
					}
				},
				{
					"id": 5,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link disabled} - Whether the address button is disabled. <br>\nIt's an optional parameter. The default value is false. <br>"
					},
					"sources": [
						{
							"fileName": "lib/account-balance/interfaces/account-balance-address-config.interface.ts",
							"line": 10,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 7,
					"name": "identiconPosition",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link identiconPosition} Controls identicon position. <br>\nIt's an optional parameter.  <br>\nYou can use enum ${@link AUC_IDENTICON_POSITION}"
					},
					"sources": [
						{
							"fileName": "lib/account-balance/interfaces/account-balance-address-config.interface.ts",
							"line": 24,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 251,
						"name": "AucIdenticonPosition"
					}
				},
				{
					"id": 6,
					"name": "showIdenticon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link showIdenticon} - It's an `@Input()` parameter. <br>\nShow or hide account address identicon. <br>\nIt's an optional parameter. The default value is false. <br>"
					},
					"sources": [
						{
							"fileName": "lib/account-balance/interfaces/account-balance-address-config.interface.ts",
							"line": 17,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						8,
						5,
						7,
						6
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/account-balance/interfaces/account-balance-address-config.interface.ts",
					"line": 5,
					"character": 17
				}
			]
		},
		{
			"id": 40,
			"name": "AucAccountData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 41,
					"name": "image",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/account-button/interfaces/account-data.interface.ts",
							"line": 2,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/account-button/interfaces/account-data.interface.ts",
							"line": 3,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						41,
						42
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/account-button/interfaces/account-data.interface.ts",
					"line": 1,
					"character": 17
				}
			]
		},
		{
			"id": 848,
			"name": "AucAccountModalData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 849,
					"name": "header",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/account-modal/interfaces/account-modal.interface.ts",
							"line": 2,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 850,
					"name": "change",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/account-modal/interfaces/account-modal.interface.ts",
							"line": 3,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 851,
							"name": "change",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 852,
					"name": "disconnect",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/account-modal/interfaces/account-modal.interface.ts",
							"line": 4,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 853,
							"name": "disconnect",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						849
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						850,
						852
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/modals/account-modal/interfaces/account-modal.interface.ts",
					"line": 1,
					"character": 17
				}
			]
		},
		{
			"id": 43,
			"name": "AucAccountOption",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 46,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/account-button/interfaces/account-option.interface.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 45,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/account-button/interfaces/account-option.interface.ts",
							"line": 3,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 44,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/account-button/interfaces/account-option.interface.ts",
							"line": 2,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						46,
						45,
						44
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/account-button/interfaces/account-option.interface.ts",
					"line": 1,
					"character": 17
				}
			]
		},
		{
			"id": 743,
			"name": "AucConnectInfo",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 744,
					"name": "chainId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/ethereum.ts",
							"line": 17,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						744
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/ethereum.ts",
					"line": 16,
					"character": 17
				}
			]
		},
		{
			"id": 1024,
			"name": "AucConnectionState",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1025,
					"name": "connected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/interfaces/connection-state.interface.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1026,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/services/wallet-connect/interfaces/connection-state.interface.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "UserState",
						"package": "bnc-onboard",
						"name": "UserState"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1025,
						1026
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/services/wallet-connect/interfaces/connection-state.interface.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 344,
			"name": "AucCustomizeDialogConfig",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 351,
					"name": "classes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/interfaces/customize-dialog-config.interface.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 346,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/interfaces/customize-dialog-config.interface.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 350,
					"name": "maxHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/interfaces/customize-dialog-config.interface.ts",
							"line": 10,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 349,
					"name": "maxWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/interfaces/customize-dialog-config.interface.ts",
							"line": 9,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 348,
					"name": "minHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/interfaces/customize-dialog-config.interface.ts",
							"line": 8,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 347,
					"name": "minWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/interfaces/customize-dialog-config.interface.ts",
							"line": 7,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 352,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/interfaces/customize-dialog-config.interface.ts",
							"line": 12,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 380,
						"name": "AucDialogPosition"
					}
				},
				{
					"id": 345,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/interfaces/customize-dialog-config.interface.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						351,
						346,
						350,
						349,
						348,
						347,
						352,
						345
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/dialog/interfaces/customize-dialog-config.interface.ts",
					"line": 4,
					"character": 17
				}
			]
		},
		{
			"id": 353,
			"name": "AucCustomizeDialogOverlayConfigInterface",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 355,
					"name": "closeByClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/interfaces/customize-dialog-overlay-config.interface.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 354,
					"name": "hasOverlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/interfaces/customize-dialog-overlay-config.interface.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 356,
					"name": "overlayClass",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/interfaces/customize-dialog-overlay-config.interface.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"id": 983,
						"name": "AucOverlayCustomizationConfig.overlayClass"
					}
				},
				{
					"id": 357,
					"name": "transparent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dialog/interfaces/customize-dialog-overlay-config.interface.ts",
							"line": 7,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"overwrites": {
						"type": "reference",
						"id": 982,
						"name": "AucOverlayCustomizationConfig.transparent"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						355,
						354,
						356,
						357
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/dialog/interfaces/customize-dialog-overlay-config.interface.ts",
					"line": 3,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 981,
					"name": "AucOverlayCustomizationConfig"
				}
			]
		},
		{
			"id": 465,
			"name": "AucDropdownConfig",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 468,
					"name": "class",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dropdown-menu/interfaces/dropdown-config.interface.ts",
							"line": 7,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 470,
					"name": "minHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dropdown-menu/interfaces/dropdown-config.interface.ts",
							"line": 9,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 469,
					"name": "minWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dropdown-menu/interfaces/dropdown-config.interface.ts",
							"line": 8,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 466,
					"name": "overlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dropdown-menu/interfaces/dropdown-config.interface.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 981,
						"name": "AucOverlayCustomizationConfig"
					}
				},
				{
					"id": 467,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dropdown-menu/interfaces/dropdown-config.interface.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 842,
						"name": "AucPosition"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						468,
						470,
						469,
						466,
						467
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/dropdown-menu/interfaces/dropdown-config.interface.ts",
					"line": 4,
					"character": 17
				}
			]
		},
		{
			"id": 471,
			"name": "AucDropdownPositionStyles",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 473,
					"name": "left",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dropdown-menu/interfaces/dropdown-position-styles.interace.ts",
							"line": 3,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 475,
					"name": "maxHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dropdown-menu/interfaces/dropdown-position-styles.interace.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 474,
					"name": "maxWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/dropdown-menu/interfaces/dropdown-position-styles.interace.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 472,
					"name": "top",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/dropdown-menu/interfaces/dropdown-position-styles.interace.ts",
							"line": 2,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						473,
						475,
						474,
						472
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/dropdown-menu/interfaces/dropdown-position-styles.interace.ts",
					"line": 1,
					"character": 17
				}
			]
		},
		{
			"id": 732,
			"name": "AucEthChainParams",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 741,
					"name": "blockExplorerUrls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/ethereum.ts",
							"line": 12,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 733,
					"name": "chainId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/ethereum.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 734,
					"name": "chainName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/ethereum.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 742,
					"name": "iconUrls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/ethereum.ts",
							"line": 13,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 735,
					"name": "nativeCurrency",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/ethereum.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 736,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 739,
									"name": "decimals",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/interfaces/ethereum.ts",
											"line": 9,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 737,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/interfaces/ethereum.ts",
											"line": 7,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 738,
									"name": "symbol",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/interfaces/ethereum.ts",
											"line": 8,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										739,
										737,
										738
									]
								}
							]
						}
					}
				},
				{
					"id": 740,
					"name": "rpcUrls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/ethereum.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						741,
						733,
						734,
						742,
						735,
						740
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/ethereum.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 755,
			"name": "AucEthereum",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 758,
					"name": "chainId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/ethereum.ts",
							"line": 41,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 756,
					"name": "isMetaMask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/ethereum.ts",
							"line": 37,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 757,
					"name": "selectedAddress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/ethereum.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 759,
					"name": "enable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 760,
							"name": "enable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 761,
					"name": "isConnected",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 762,
							"name": "isConnected",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 763,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 764,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 765,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 551,
										"name": "ACCOUNT_CHANGED"
									}
								},
								{
									"id": 766,
									"name": "handler",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 767,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 768,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 769,
															"name": "accounts",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 770,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 771,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 552,
										"name": "CHAIN_CHANGED"
									}
								},
								{
									"id": 772,
									"name": "handler",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 773,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 774,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 775,
															"name": "chainId",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 776,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 777,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 553,
										"name": "CONNECT"
									}
								},
								{
									"id": 778,
									"name": "handler",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 779,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 780,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 781,
															"name": "connectInfo",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 743,
																"name": "AucConnectInfo"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 782,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 783,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 554,
										"name": "DISCONNECT"
									}
								},
								{
									"id": 784,
									"name": "handler",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 785,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 786,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 787,
															"name": "error",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 748,
																"name": "AucProviderRpcError"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 788,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 789,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 555,
										"name": "MESSAGE"
									}
								},
								{
									"id": 790,
									"name": "handler",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 791,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 792,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 793,
															"name": "message",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 745,
																"name": "AucProviderMessage"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 794,
					"name": "request",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 795,
							"name": "request",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 796,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 797,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 752,
										"name": "AucRequestArguments"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 796,
										"name": "T"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						758,
						756,
						757
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						759,
						761,
						763,
						794
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/ethereum.ts",
					"line": 36,
					"character": 17
				}
			]
		},
		{
			"id": 802,
			"name": "AucEtherscanTransaction",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 807,
					"name": "blockHash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 14,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 803,
					"name": "blockNumber",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 10,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 820,
					"name": "confirmations",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 27,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 817,
					"name": "contractAddress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 24,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 818,
					"name": "cumulativeGasUsed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 25,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 821,
					"name": "explorerUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 28,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 809,
					"name": "from",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 16,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 812,
					"name": "gas",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 19,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 813,
					"name": "gasPrice",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 819,
					"name": "gasUsed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 26,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 805,
					"name": "hash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 12,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 816,
					"name": "input",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 23,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 814,
					"name": "isError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 21,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "0"
							},
							{
								"type": "literal",
								"value": "1"
							}
						]
					}
				},
				{
					"id": 806,
					"name": "nonce",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 13,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 804,
					"name": "timeStamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 810,
					"name": "to",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 17,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 808,
					"name": "transactionIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 815,
					"name": "txreceipt_status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 22,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 811,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 18,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						807,
						803,
						820,
						817,
						818,
						821,
						809,
						812,
						813,
						819,
						805,
						816,
						814,
						806,
						804,
						810,
						808,
						815,
						811
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/etherscan-transaction.ts",
					"line": 9,
					"character": 17
				}
			]
		},
		{
			"id": 822,
			"name": "AucEtherscanTransactionLocalStorage",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 826,
					"name": "explorerUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 824,
					"name": "hash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 33,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 823,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 32,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 825,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 34,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 566,
						"name": "AUC_TRANSACTION_STATUS"
					}
				},
				{
					"id": 827,
					"name": "viewed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 36,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						826,
						824,
						823,
						825,
						827
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/etherscan-transaction.ts",
					"line": 31,
					"character": 17
				}
			]
		},
		{
			"id": 798,
			"name": "AucEtherscanTransactionResponse",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 800,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 801,
					"name": "result",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 802,
							"name": "AucEtherscanTransaction"
						}
					}
				},
				{
					"id": 799,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/etherscan-transaction.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "0"
							},
							{
								"type": "literal",
								"value": "1"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						800,
						801,
						799
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/etherscan-transaction.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 828,
			"name": "AucNativeCurrency",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 831,
					"name": "decimals",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/native-currency.interface.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 829,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/native-currency.interface.ts",
							"line": 2,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 830,
					"name": "symbol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/native-currency.interface.ts",
							"line": 3,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						831,
						829,
						830
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/native-currency.interface.ts",
					"line": 1,
					"character": 17
				}
			]
		},
		{
			"id": 832,
			"name": "AucNetworkOption",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 838,
					"name": "blockExplorerApiUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link blockExplorerApiUrl} - Ex: https://api.etherscan.io/api. <br>\nUsed for getting transactions information.\nYou can use {@link AucBlockExplorerUrls[chainId]} or set other url."
					},
					"sources": [
						{
							"fileName": "lib/interfaces/network-option.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 837,
					"name": "blockExplorerUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "{@link blockExplorerUrl} - Ex: https://etherscan.io. <br>\nYou can use {@link AucBlockExplorerUrls[chainId][0]} or set other url."
					},
					"sources": [
						{
							"fileName": "lib/interfaces/network-option.ts",
							"line": 14,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 835,
					"name": "chainId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/network-option.ts",
							"line": 7,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 841,
					"name": "chainParams",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link chainParams} - this params used for adding new network to the Metamask."
					},
					"sources": [
						{
							"fileName": "lib/interfaces/network-option.ts",
							"line": 27,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 732,
						"name": "AucEthChainParams"
					}
				},
				{
					"id": 840,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/network-option.ts",
							"line": 24,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 833,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "{@link icon} - currency icon url"
					},
					"sources": [
						{
							"fileName": "lib/interfaces/network-option.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 839,
					"name": "isActive",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "{@link isActive} - sets option as active"
					},
					"sources": [
						{
							"fileName": "lib/interfaces/network-option.ts",
							"line": 23,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 834,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/network-option.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 836,
					"name": "symbol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "{@link symbol} -  currency symbol. You can use AucNativeCurrencies[chainID].name or other string."
					},
					"sources": [
						{
							"fileName": "lib/interfaces/network-option.ts",
							"line": 9,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						838,
						837,
						835,
						841,
						840,
						833,
						839,
						834,
						836
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/network-option.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 947,
			"name": "AucNoNetworkConfigDialogDataI",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 948,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/network-dropdown/no-network-config/interfaces/no-network-config-dialog-data.interface.ts",
							"line": 2,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 949,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/network-dropdown/no-network-config/interfaces/no-network-config-dialog-data.interface.ts",
							"line": 3,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						948,
						949
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/network-dropdown/no-network-config/interfaces/no-network-config-dialog-data.interface.ts",
					"line": 1,
					"character": 17
				}
			]
		},
		{
			"id": 981,
			"name": "AucOverlayCustomizationConfig",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 983,
					"name": "overlayClass",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/overlay/interfaces/overlay-customization-config.interface.ts",
							"line": 3,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 982,
					"name": "transparent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/overlay/interfaces/overlay-customization-config.interface.ts",
							"line": 2,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						983,
						982
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/overlay/interfaces/overlay-customization-config.interface.ts",
					"line": 1,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 353,
					"name": "AucCustomizeDialogOverlayConfigInterface"
				}
			]
		},
		{
			"id": 842,
			"name": "AucPosition",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 844,
					"name": "horizontal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/position.interface.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1229,
						"name": "AucHorizontalPosition"
					}
				},
				{
					"id": 843,
					"name": "vertical",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/position.interface.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1228,
						"name": "AucVerticalPosition"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						844,
						843
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/position.interface.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 745,
			"name": "AucProviderMessage",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 746,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/ethereum.ts",
							"line": 21,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 747,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/ethereum.ts",
							"line": 22,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						746,
						747
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/ethereum.ts",
					"line": 20,
					"character": 17
				}
			]
		},
		{
			"id": 748,
			"name": "AucProviderRpcError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 749,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/ethereum.ts",
							"line": 26,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 750,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/ethereum.ts",
							"line": 27,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 751,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/ethereum.ts",
							"line": 28,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "Error.message"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						749,
						750,
						751
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/ethereum.ts",
					"line": 25,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Error",
					"package": "typescript",
					"name": "Error"
				}
			]
		},
		{
			"id": 1166,
			"name": "AucRecentTransactionsModalData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1167,
					"name": "header",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/transactions/components/transactions-history-modal/interfaces/recent-transaction-modal-data.interface.ts",
							"line": 2,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1167
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/transactions/components/transactions-history-modal/interfaces/recent-transaction-modal-data.interface.ts",
					"line": 1,
					"character": 17
				}
			]
		},
		{
			"id": 752,
			"name": "AucRequestArguments",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 753,
					"name": "method",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/ethereum.ts",
							"line": 32,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 754,
					"name": "params",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/ethereum.ts",
							"line": 33,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						753,
						754
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/ethereum.ts",
					"line": 31,
					"character": 17
				}
			]
		},
		{
			"id": 264,
			"name": "AucSetStyleProp",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 265,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/directives/set-style-props/interfaces/set-style-prop.interface.ts",
							"line": 2,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 266,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/directives/set-style-props/interfaces/set-style-prop.interface.ts",
							"line": 3,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						265,
						266
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/directives/set-style-props/interfaces/set-style-prop.interface.ts",
					"line": 1,
					"character": 17
				}
			]
		},
		{
			"id": 845,
			"name": "AucSort",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 846,
					"name": "sortBy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/sort.interface.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 847,
					"name": "sortDirection",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/interfaces/sort.interface.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1230,
						"name": "AucSortDirection"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						846,
						847
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/sort.interface.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 1115,
			"name": "AucTableHeaderItem",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1119,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/table/interfaces/table.interface.ts",
							"line": 7,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1116,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/table/interfaces/table.interface.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1117,
					"name": "rowKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/table/interfaces/table.interface.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1120,
					"name": "sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/table/interfaces/table.interface.ts",
							"line": 8,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 845,
						"name": "AucSort"
					}
				},
				{
					"id": 1121,
					"name": "sortBy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/table/interfaces/table.interface.ts",
							"line": 9,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1118,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/table/interfaces/table.interface.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1119,
						1116,
						1117,
						1120,
						1121,
						1118
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/table/interfaces/table.interface.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 1127,
			"name": "AucTableRow",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/table/interfaces/table.interface.ts",
					"line": 19,
					"character": 17
				}
			],
			"indexSignature": {
				"id": 1128,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 1129,
						"name": "key",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 1122,
							"name": "AucTableRowItem"
						},
						{
							"type": "array",
							"elementType": {
								"type": "reference",
								"id": 1122,
								"name": "AucTableRowItem"
							}
						}
					]
				}
			}
		},
		{
			"id": 1122,
			"name": "AucTableRowItem",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1125,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/table/interfaces/table.interface.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1124,
					"name": "link",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/table/interfaces/table.interface.ts",
							"line": 14,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1123,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/table/interfaces/table.interface.ts",
							"line": 13,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1126,
					"name": "withBg",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/table/interfaces/table.interface.ts",
							"line": 16,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1125,
						1124,
						1123,
						1126
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/table/interfaces/table.interface.ts",
					"line": 12,
					"character": 17
				}
			]
		},
		{
			"id": 883,
			"name": "AucTransferModalData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 886,
					"name": "allowance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/interfaces/transfer-modal-data.interface.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "BigNumber.Value",
						"package": "bignumber.js",
						"name": "Value"
					}
				},
				{
					"id": 892,
					"name": "approveButton",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/interfaces/transfer-modal-data.interface.ts",
							"line": 10,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 893,
					"name": "approvingButton",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/interfaces/transfer-modal-data.interface.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 894,
					"name": "confirmButton",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/interfaces/transfer-modal-data.interface.ts",
							"line": 12,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 884,
					"name": "header",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/interfaces/transfer-modal-data.interface.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 887,
					"name": "max",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/interfaces/transfer-modal-data.interface.ts",
							"line": 7,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 885,
					"name": "symbol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/interfaces/transfer-modal-data.interface.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 888,
					"name": "approve",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/interfaces/transfer-modal-data.interface.ts",
							"line": 8,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 889,
							"name": "approve",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 890,
					"name": "confirm",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/transfer-modal/interfaces/transfer-modal-data.interface.ts",
							"line": 9,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 891,
							"name": "confirm",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						886,
						892,
						893,
						894,
						884,
						887,
						885
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						888,
						890
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/modals/transfer-modal/interfaces/transfer-modal-data.interface.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 925,
			"name": "AucWrongNetworkModalData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 930,
					"name": "appearance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/wrong-network-modal/interfaces/wrong-network-modal-data.interface.ts",
							"line": 8,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 931,
						"name": "AucWrongNetworkAppearance"
					}
				},
				{
					"id": 928,
					"name": "chainId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/wrong-network-modal/interfaces/wrong-network-modal-data.interface.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 926,
					"name": "header",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/wrong-network-modal/interfaces/wrong-network-modal-data.interface.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 927,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/wrong-network-modal/interfaces/wrong-network-modal-data.interface.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 929,
					"name": "switchLabel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/modals/wrong-network-modal/interfaces/wrong-network-modal-data.interface.ts",
							"line": 7,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						930,
						928,
						926,
						927,
						929
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/modals/wrong-network-modal/interfaces/wrong-network-modal-data.interface.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 79,
			"name": "AucAlertPosition",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/alert/types/alert-position.type.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 77,
						"name": "AUC_ALERT_POSITION.LEFT"
					},
					{
						"type": "reference",
						"id": 78,
						"name": "AUC_ALERT_POSITION.RIGHT"
					}
				]
			}
		},
		{
			"id": 9,
			"name": "AucBalanceAppearance",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/account-balance/types/balance-appearance.type.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 2,
						"name": "AUC_BALANCE_APPEARANCE.TRANSPARENT"
					},
					{
						"type": "reference",
						"id": 3,
						"name": "AUC_BALANCE_APPEARANCE.TRANSLUCENT"
					}
				]
			}
		},
		{
			"id": 112,
			"name": "AucButtonAppearance",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/button/types/button-appearance.type.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 110,
						"name": "AUC_BUTTON_APPEARANCE.FLAT"
					},
					{
						"type": "reference",
						"id": 111,
						"name": "AUC_BUTTON_APPEARANCE.ICON"
					}
				]
			}
		},
		{
			"id": 380,
			"name": "AucDialogPosition",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/dialog/types/dialog-position.type.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 336,
						"name": "AUC_DIALOG_POSITIONS.BOTTOM"
					},
					{
						"type": "reference",
						"id": 337,
						"name": "AUC_DIALOG_POSITIONS.LEFT"
					},
					{
						"type": "reference",
						"id": 338,
						"name": "AUC_DIALOG_POSITIONS.RIGHT"
					},
					{
						"type": "reference",
						"id": 339,
						"name": "AUC_DIALOG_POSITIONS.TOP"
					},
					{
						"type": "reference",
						"id": 340,
						"name": "AUC_DIALOG_POSITIONS.TOP_LEFT"
					},
					{
						"type": "reference",
						"id": 341,
						"name": "AUC_DIALOG_POSITIONS.TOP_RIGHT"
					},
					{
						"type": "reference",
						"id": 342,
						"name": "AUC_DIALOG_POSITIONS.BOTTOM_LEFT"
					},
					{
						"type": "reference",
						"id": 343,
						"name": "AUC_DIALOG_POSITIONS.BOTTOM_RIGHT"
					}
				]
			}
		},
		{
			"id": 1229,
			"name": "AucHorizontalPosition",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/types/applicature-positions.type.ts",
					"line": 5,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 500,
						"name": "AUC_POSITIONS.BEFORE"
					},
					{
						"type": "reference",
						"id": 501,
						"name": "AUC_POSITIONS.AFTER"
					}
				]
			}
		},
		{
			"id": 251,
			"name": "AucIdenticonPosition",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/directives/identicon/types/identicon-position.type.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 249,
						"name": "AUC_IDENTICON_POSITION.LEFT"
					},
					{
						"type": "reference",
						"id": 250,
						"name": "AUC_IDENTICON_POSITION.RIGHT"
					}
				]
			}
		},
		{
			"id": 1230,
			"name": "AucSortDirection",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/types/sort-direction.type.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 564,
						"name": "AUC_SORT_DIRECTION.ASC"
					},
					{
						"type": "reference",
						"id": 565,
						"name": "AUC_SORT_DIRECTION.DESC"
					}
				]
			}
		},
		{
			"id": 895,
			"name": "AucTransactionStep",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/modals/transfer-modal/types/transaction-step.type.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 881,
						"name": "AUC_TRANSFER_STEPS.APPROVE"
					},
					{
						"type": "reference",
						"id": 882,
						"name": "AUC_TRANSFER_STEPS.CONFIRM"
					}
				]
			}
		},
		{
			"id": 620,
			"name": "AucValueType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/helpers/check-value-type.helper.ts",
					"line": 12,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 612,
						"name": "AUC_VALUE_TYPES.ARRAY"
					},
					{
						"type": "reference",
						"id": 613,
						"name": "AUC_VALUE_TYPES.BLOB"
					},
					{
						"type": "reference",
						"id": 614,
						"name": "AUC_VALUE_TYPES.BOOLEAN"
					},
					{
						"type": "reference",
						"id": 615,
						"name": "AUC_VALUE_TYPES.FILE"
					},
					{
						"type": "reference",
						"id": 616,
						"name": "AUC_VALUE_TYPES.FUNCTION"
					},
					{
						"type": "reference",
						"id": 617,
						"name": "AUC_VALUE_TYPES.NUMBER"
					},
					{
						"type": "reference",
						"id": 618,
						"name": "AUC_VALUE_TYPES.OBJECT"
					},
					{
						"type": "reference",
						"id": 619,
						"name": "AUC_VALUE_TYPES.STRING"
					}
				]
			}
		},
		{
			"id": 1228,
			"name": "AucVerticalPosition",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/types/applicature-positions.type.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 498,
						"name": "AUC_POSITIONS.ABOVE"
					},
					{
						"type": "reference",
						"id": 499,
						"name": "AUC_POSITIONS.BELOW"
					}
				]
			}
		},
		{
			"id": 663,
			"name": "AucWlcIcon",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "You can use supported icons from enum {@link AUC_WLC_ICON} or string;\nIf you want to use custom icon you need to provide url to the image as a string value."
			},
			"sources": [
				{
					"fileName": "lib/icon/types/wlc-icon.type.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 645,
						"name": "AUC_WLC_ICON.ACTIVE"
					},
					{
						"type": "reference",
						"id": 646,
						"name": "AUC_WLC_ICON.ARROW_DOWN"
					},
					{
						"type": "reference",
						"id": 647,
						"name": "AUC_WLC_ICON.ARROW_UP"
					},
					{
						"type": "reference",
						"id": 648,
						"name": "AUC_WLC_ICON.CHECK"
					},
					{
						"type": "reference",
						"id": 649,
						"name": "AUC_WLC_ICON.CHEVRON_DOWN"
					},
					{
						"type": "reference",
						"id": 650,
						"name": "AUC_WLC_ICON.CHEVRON_UP"
					},
					{
						"type": "reference",
						"id": 651,
						"name": "AUC_WLC_ICON.CLOSE"
					},
					{
						"type": "reference",
						"id": 652,
						"name": "AUC_WLC_ICON.COPY"
					},
					{
						"type": "reference",
						"id": 653,
						"name": "AUC_WLC_ICON.EXTERNAL_LINK"
					},
					{
						"type": "reference",
						"id": 654,
						"name": "AUC_WLC_ICON.FAIL"
					},
					{
						"type": "reference",
						"id": 655,
						"name": "AUC_WLC_ICON.MINUS"
					},
					{
						"type": "reference",
						"id": 656,
						"name": "AUC_WLC_ICON.PLUS"
					},
					{
						"type": "reference",
						"id": 657,
						"name": "AUC_WLC_ICON.RECENT"
					},
					{
						"type": "reference",
						"id": 658,
						"name": "AUC_WLC_ICON.STAR"
					},
					{
						"type": "reference",
						"id": 659,
						"name": "AUC_WLC_ICON.USER"
					},
					{
						"type": "reference",
						"id": 660,
						"name": "AUC_WLC_ICON.WALLET"
					},
					{
						"type": "reference",
						"id": 661,
						"name": "AUC_WLC_ICON.WALLET_CONNECT"
					},
					{
						"type": "reference",
						"id": 662,
						"name": "AUC_WLC_ICON.WRONG"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				]
			}
		},
		{
			"id": 931,
			"name": "AucWrongNetworkAppearance",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/modals/wrong-network-modal/types/wrong-network-appearance.type.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 922,
						"name": "AUC_WRONG_NETWORK_APPEARANCE.DISCONNECT"
					},
					{
						"type": "reference",
						"id": 924,
						"name": "AUC_WRONG_NETWORK_APPEARANCE.NONE"
					},
					{
						"type": "reference",
						"id": 923,
						"name": "AUC_WRONG_NETWORK_APPEARANCE.SWITCH"
					}
				]
			}
		},
		{
			"id": 155,
			"name": "ConnectWalletAppearance",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/connect-wallet/types/connect-wallet-appearance.type.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 152,
						"name": "AUC_CONNECT_WALLET_APPEARANCE.DEFAULT"
					},
					{
						"type": "reference",
						"id": 153,
						"name": "AUC_CONNECT_WALLET_APPEARANCE.ICON"
					},
					{
						"type": "reference",
						"id": 154,
						"name": "AUC_CONNECT_WALLET_APPEARANCE.BUTTON"
					}
				]
			}
		},
		{
			"id": 200,
			"name": "AucBlockExplorerApiUrl",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "lib/constants/block-explorer-api-url.constant.ts",
					"line": 3,
					"character": 13
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 201,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/constants/block-explorer-api-url.constant.ts",
							"line": 3,
							"character": 37
						}
					],
					"indexSignature": {
						"id": 202,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 203,
								"name": "key",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 196,
			"name": "AucBlockExplorerUrls",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "lib/constants/block-eplorer-urls.constant.ts",
					"line": 3,
					"character": 13
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 197,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/constants/block-eplorer-urls.constant.ts",
							"line": 3,
							"character": 35
						}
					],
					"indexSignature": {
						"id": 198,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 199,
								"name": "key",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 204,
			"name": "AucChainName",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "lib/constants/chain-name.constant.ts",
					"line": 3,
					"character": 13
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 205,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/constants/chain-name.constant.ts",
							"line": 3,
							"character": 27
						}
					],
					"indexSignature": {
						"id": 206,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 207,
								"name": "key",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 208,
			"name": "AucNativeCurrencies",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "lib/constants/native-currencies.constant.ts",
					"line": 4,
					"character": 13
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 209,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/constants/native-currencies.constant.ts",
							"line": 4,
							"character": 34
						}
					],
					"indexSignature": {
						"id": 210,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 211,
								"name": "key",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "reference",
							"id": 828,
							"name": "AucNativeCurrency"
						}
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 212,
			"name": "AucRpcUrls",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "lib/constants/rpc-urls.constant.ts",
					"line": 3,
					"character": 13
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 213,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/constants/rpc-urls.constant.ts",
							"line": 3,
							"character": 25
						}
					],
					"indexSignature": {
						"id": 214,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 215,
								"name": "key",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 674,
			"name": "INPUT_FIELD_VALUE_ACCESSOR",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "lib/input/input.component.ts",
					"line": 18,
					"character": 13
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 675,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 678,
							"name": "multi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 676,
							"name": "provide",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"qualifiedName": "ControlValueAccessor",
												"package": "@angular/forms",
												"name": "ControlValueAccessor"
											}
										}
									}
								],
								"qualifiedName": "InjectionToken",
								"package": "@angular/core",
								"name": "InjectionToken"
							},
							"defaultValue": "NG_VALUE_ACCESSOR"
						},
						{
							"id": 677,
							"name": "useExisting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"qualifiedName": "Type",
								"package": "@angular/core",
								"name": "Type"
							},
							"defaultValue": "..."
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								678,
								676,
								677
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 606,
			"name": "aucCheckValueType",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/helpers/check-value-type.helper.ts",
					"line": 26,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 607,
					"name": "aucCheckValueType",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "It's better alternative for typeof."
					},
					"typeParameter": [
						{
							"id": 608,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"parameters": [
						{
							"id": 609,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "value to check type."
							},
							"type": {
								"type": "reference",
								"id": 608,
								"name": "T"
							}
						},
						{
							"id": 610,
							"name": "type",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "expected type of Value;\n"
							},
							"type": {
								"type": "reference",
								"id": 620,
								"name": "AucValueType"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 621,
			"name": "aucConvertChainIdToHex",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/helpers/convert-chainId-to-hex.helper.ts",
					"line": 11,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 622,
					"name": "aucConvertChainIdToHex",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "This method uses for converting chainId as a number to 0x-prefixed hexadecimal string",
						"text": "{@see AUC_CHAIN_ID} - Already converted Chains;\n"
					},
					"parameters": [
						{
							"id": 623,
							"name": "chainId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "this is chainId as number.\nYou can use {@link AUC_CHAIN_ID_NUM} or your specific value.\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 578,
			"name": "aucFromWei",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/helpers/bignumber.ts",
					"line": 5,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 579,
					"name": "aucFromWei",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 580,
							"name": "val",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 581,
							"name": "decimals",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 640,
			"name": "aucGenerateJazzicon",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/helpers/helpers.ts",
					"line": 30,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 641,
					"name": "aucGenerateJazzicon",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 642,
							"name": "address",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 643,
							"name": "diameter",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "20"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"qualifiedName": "HTMLDivElement",
								"package": "typescript",
								"name": "HTMLDivElement"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				}
			]
		},
		{
			"id": 624,
			"name": "aucGetChainParams",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/helpers/get-chain-params.helper.ts",
					"line": 10,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 625,
					"name": "aucGetChainParams",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "This method is uses for generating network config which is uses for adding new network to the Metamask."
					},
					"parameters": [
						{
							"id": 626,
							"name": "chainId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "0x-prefixed hexadecimal string;\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "''"
						}
					],
					"type": {
						"type": "reference",
						"id": 732,
						"name": "AucEthChainParams"
					}
				}
			]
		},
		{
			"id": 633,
			"name": "aucIsAddress",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/helpers/helpers.ts",
					"line": 12,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 634,
					"name": "aucIsAddress",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 635,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "literal",
								"value": false
							}
						]
					}
				}
			]
		},
		{
			"id": 627,
			"name": "aucIsTxHash",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/helpers/helpers.ts",
					"line": 4,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 628,
					"name": "aucIsTxHash",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 629,
							"name": "address",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 593,
			"name": "aucNormalize",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/helpers/bignumber.ts",
					"line": 36,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 594,
					"name": "aucNormalize",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 595,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"qualifiedName": "BigNumber.Value",
								"package": "bignumber.js",
								"name": "Value"
							}
						},
						{
							"id": 596,
							"name": "decimals",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "2"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 597,
			"name": "aucNormalizeBN",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/helpers/bignumber.ts",
					"line": 40,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 598,
					"name": "aucNormalizeBN",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 599,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"qualifiedName": "BigNumber.Value",
								"package": "bignumber.js",
								"name": "Value"
							}
						},
						{
							"id": 600,
							"name": "decimals",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "2"
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "BigNumber",
						"package": "bignumber.js",
						"name": "BigNumber"
					}
				}
			]
		},
		{
			"id": 601,
			"name": "aucNormalizeBalance",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/helpers/bignumber.ts",
					"line": 50,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 602,
					"name": "aucNormalizeBalance",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {},
					"parameters": [
						{
							"id": 603,
							"name": "networkId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "connected network id."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 604,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "converted value."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "BigNumber.Value",
								"package": "bignumber.js",
								"name": "Value"
							}
						},
						{
							"id": 605,
							"name": "digits",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "significant digits.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "3"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 590,
			"name": "aucPow10",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/helpers/bignumber.ts",
					"line": 28,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 591,
					"name": "aucPow10",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 592,
							"name": "decimals",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "BigNumber",
						"package": "bignumber.js",
						"name": "BigNumber"
					}
				}
			]
		},
		{
			"id": 636,
			"name": "aucShortAddress",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/helpers/helpers.ts",
					"line": 20,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 637,
					"name": "aucShortAddress",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 638,
							"name": "address",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 639,
							"name": "chars",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "4"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				}
			]
		},
		{
			"id": 630,
			"name": "aucShortTxHash",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/helpers/helpers.ts",
					"line": 8,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 631,
					"name": "aucShortTxHash",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 632,
							"name": "address",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 587,
			"name": "aucToBN",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/helpers/bignumber.ts",
					"line": 22,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 588,
					"name": "aucToBN",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 589,
							"name": "val",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"qualifiedName": "BigNumber.Value",
								"package": "bignumber.js",
								"name": "Value"
							}
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "BigNumber",
						"package": "bignumber.js",
						"name": "BigNumber"
					}
				}
			]
		},
		{
			"id": 582,
			"name": "aucToWei",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "lib/helpers/bignumber.ts",
					"line": 11,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 583,
					"name": "aucToWei",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 584,
							"name": "val",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"qualifiedName": "BigNumber.Value",
								"package": "bignumber.js",
								"name": "Value"
							}
						},
						{
							"id": 585,
							"name": "decimals",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "18"
						},
						{
							"id": 586,
							"name": "toFixed",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"kind": 8,
			"children": [
				76,
				1,
				109,
				526,
				502,
				151,
				326,
				335,
				550,
				556,
				248,
				559,
				497,
				563,
				566,
				880,
				611,
				644,
				921
			]
		},
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				10,
				47,
				854,
				80,
				97,
				570,
				113,
				156,
				220,
				216,
				234,
				300,
				381,
				411,
				429,
				443,
				358,
				476,
				457,
				664,
				252,
				679,
				319,
				958,
				950,
				984,
				997,
				1006,
				267,
				991,
				1108,
				1130,
				1185,
				1149,
				1168,
				1180,
				896,
				277,
				1027,
				932
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				4,
				40,
				848,
				43,
				743,
				1024,
				344,
				353,
				465,
				471,
				732,
				755,
				802,
				822,
				798,
				828,
				832,
				947,
				981,
				842,
				745,
				748,
				1166,
				752,
				264,
				845,
				1115,
				1127,
				1122,
				883,
				925
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				79,
				9,
				112,
				380,
				1229,
				251,
				1230,
				895,
				620,
				1228,
				663,
				931,
				155
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				200,
				196,
				204,
				208,
				212,
				674
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				606,
				621,
				578,
				640,
				624,
				633,
				627,
				593,
				597,
				601,
				590,
				636,
				630,
				587,
				582
			]
		}
	],
	"sources": [
		{
			"fileName": "public-api.ts",
			"line": 1,
			"character": 0
		}
	]
}