name: Build and publish

on:   
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: steps.cache-npm.outputs.cache-hit != 'true'
        name: Install dependencies        
        run: npm install --no-audit --progress=false

      - name: Build project
        run: npm run build
      
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  publish:
    runs-on: ubuntu-latest  
    needs: [build]
    strategy:
      matrix:
        package_name: [components,styles]
    steps:
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - uses: actions/download-artifact@v3
        with:
          name: dist
          
      - name: Publish project
        run: |
          echo {{ matrix.package_name }}
          echo "{{ matrix.package_name }}"
          cd dist/applicature/{{ matrix.package_name }}
          npm pack .
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}



#  slackNotification:
#    name: Slack Notification
#    runs-on: ubuntu-latest
#    steps: 
#      - name: Slack Notification
#        uses: rtCamp/action-slack-notify@v2
#        env:
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
#          SLACK_MESSAGE: 'Deploy FE to DEV server :rocket:'
#          SLACK_TITLE: CI/CD