{
    "pipes": [
        {
            "name": "AucShortAddressPipe",
            "id": "pipe-AucShortAddressPipe-febdb65fb75c2705e06cc7bac8c94ac406d7e924881c354162f280009565c93a6dca7bed8654181b45ea98d5cccdcbce57264bbb73678cd6acd9b7f84361715e",
            "file": "projects/applicature/components/src/lib/pipes/short-address.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "address",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "address",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "aucShortAddress",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\nimport { aucShortAddress, aucIsTxHash, aucShortTxHash } from '../helpers';\n\n@Pipe({\n  name: 'aucShortAddress'\n})\nexport class AucShortAddressPipe implements PipeTransform {\n  public transform(address: string): string {\n    return aucIsTxHash(address) ? aucShortTxHash(address) : aucShortAddress(address);\n  }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "AsColorProperties",
            "id": "interface-AsColorProperties-417500330794930b3361f5c33d829979b1008a46998178022290869398c8b9de9a6a17838c1c564702acbe774aa9b965efabc31d0e85496b610a863adbc6ff06",
            "file": "projects/applicature/styles/src/lib/colors.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export enum AS_COLOR_GROUP {\n  BLUE = 'blue',\n  GREEN = 'green',\n  GREY = 'grey',\n  ORANGE = 'orange',\n  RED = 'red',\n  WHITE = 'white'\n}\n\nexport type AsColorGroup = AS_COLOR_GROUP.BLUE\n  | AS_COLOR_GROUP.GREEN\n  | AS_COLOR_GROUP.GREY\n  | AS_COLOR_GROUP.ORANGE\n  | AS_COLOR_GROUP.RED\n  | AS_COLOR_GROUP.WHITE;\n\nexport interface AsColorProperties {\n  base: string;\n  hover: string;\n  light: string;\n  dark: string;\n  text: string;\n  border: string;\n  borderHover: string;\n  borderFocus: string;\n}\n\nexport const AsColors: { [key: string]: AsColorProperties } = {\n  [AS_COLOR_GROUP.BLUE]: {\n    base: '#4678F0',\n    hover: '#608BF2',\n    light: '#8CABF6',\n    dark: '#3F67C7',\n    text: '#FFFFFF',\n    border: '#4678F0',\n    borderHover: '#608BF2',\n    borderFocus: '#3F67C7',\n  },\n  [AS_COLOR_GROUP.RED]: {\n    base: '#E84142',\n    hover: '#EA5C5E',\n    light: '#F0898B',\n    dark: '#C03B3C',\n    text: '#FFFFFF',\n    border: '#E84142',\n    borderHover: '#EA5C5E',\n    borderFocus: '#C03B3C',\n  },\n  [AS_COLOR_GROUP.GREEN]: {\n    base: '#37CA34',\n    hover: '#6BD66B',\n    light: '#94E194',\n    dark: '#33A830',\n    text: '#FFFFFF',\n    border: '#37CA34',\n    borderHover: '#6BD66B',\n    borderFocus: '#33A830',\n  },\n  [AS_COLOR_GROUP.ORANGE]: {\n    base: '#F09643',\n    hover: '#F2A45B',\n    light: '#F6BE8A',\n    dark: '#C77F3C',\n    text: '#FFFFFF',\n    border: '#F09643',\n    borderHover: '#F2A45B',\n    borderFocus: '#C77F3C',\n  },\n  [AS_COLOR_GROUP.GREY]: {\n    base: '#6D87AC',\n    hover: '#BBC7D9',\n    light: '#DDE3EC',\n    dark: '#5F7492',\n    text: '#FFFFFF',\n    border: '#6D87AC',\n    borderHover: '#BBC7D9',\n    borderFocus: '#5F7492',\n  },\n  [AS_COLOR_GROUP.WHITE]: {\n    base: '#FFFFFF',\n    hover: '#FFFFFF',\n    light: '#FFFFFF',\n    dark: '#FFFFFF',\n    text: '#222222',\n    border: '#FFFFFF',\n    borderHover: '#DDE3EC',\n    borderFocus: '#608BF2',\n  },\n}\n",
            "properties": [
                {
                    "name": "base",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "border",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "borderFocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "borderHover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "dark",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "hover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "light",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucAccountBalanceAddressConfig",
            "id": "interface-AucAccountBalanceAddressConfig-ebea200b492ef26d150648167a2dc1f289664d9d6ab4e1a028a5bfa7c945a14ef654adeb51832fbd1aeedcd7bec2012f0ffcdb1a230fd76c9f25192bfe8ae000",
            "file": "projects/applicature/components/src/lib/account-balance/interfaces/account-balance-address-config.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AsColorGroup } from '@applicature/styles';\n\nimport { AucIdenticonPosition } from '../../directives';\n\nexport interface AucAccountBalanceAddressConfig {\n  /**\n   * {@link disabled} - Whether the address button is disabled. <br>\n   * It's an optional parameter. The default value is false. <br>\n   */\n  disabled?: boolean;\n\n  /**\n   * {@link showIdenticon} - It's an `@Input()` parameter. <br>\n   * Show or hide account address identicon. <br>\n   * It's an optional parameter. The default value is false. <br>\n   */\n  showIdenticon?: boolean;\n\n  /**\n   * {@link identiconPosition} Controls identicon position. <br>\n   * It's an optional parameter.  <br>\n   * You can use enum ${@link AUC_IDENTICON_POSITION}\n   */\n  identiconPosition?: AucIdenticonPosition;\n\n  /**\n   * {@link color} - Sets theme of the address button. <br>\n   * It's an optional parameter. The default value is blue. <br>\n   * You can use enum {@link AS_COLOR_GROUP}.\n   */\n  color?: AsColorGroup; // Default value is COLOR_GROUP\n}\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AsColorGroup",
                    "optional": true,
                    "description": "<p>{@link color} - Sets theme of the address button. <br>\nIt&#39;s an optional parameter. The default value is blue. <br>\nYou can use enum {@link AS_COLOR_GROUP}.</p>\n",
                    "line": 31,
                    "rawdescription": "\n\n{@link color} - Sets theme of the address button. <br>\nIt's an optional parameter. The default value is blue. <br>\nYou can use enum {@link AS_COLOR_GROUP}.\n"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>{@link disabled} - Whether the address button is disabled. <br>\nIt&#39;s an optional parameter. The default value is false. <br></p>\n",
                    "line": 10,
                    "rawdescription": "\n\n{@link disabled} - Whether the address button is disabled. <br>\nIt's an optional parameter. The default value is false. <br>\n"
                },
                {
                    "name": "identiconPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucIdenticonPosition",
                    "optional": true,
                    "description": "<p>{@link identiconPosition} Controls identicon position. <br>\nIt&#39;s an optional parameter.  <br>\nYou can use enum ${@link AUC_IDENTICON_POSITION}</p>\n",
                    "line": 24,
                    "rawdescription": "\n\n{@link identiconPosition} Controls identicon position. <br>\nIt's an optional parameter.  <br>\nYou can use enum ${@link AUC_IDENTICON_POSITION}\n"
                },
                {
                    "name": "showIdenticon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>{@link showIdenticon} - It&#39;s an <code>@Input()</code> parameter. <br>\nShow or hide account address identicon. <br>\nIt&#39;s an optional parameter. The default value is false. <br></p>\n",
                    "line": 17,
                    "rawdescription": "\n\n{@link showIdenticon} - It's an `@Input()` parameter. <br>\nShow or hide account address identicon. <br>\nIt's an optional parameter. The default value is false. <br>\n"
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucAccountData",
            "id": "interface-AucAccountData-c265d6af0adeba6c0d3ee97c0c28a0e786bdb2d3b666f5f2da217d040a17e6cc4fc86709270e37ac008b7fe7b8230c3fe2cc49f295761017be4ceb687dc0d0c7",
            "file": "projects/applicature/components/src/lib/account-button/interfaces/account-data.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AucAccountData {\n  image?: string;\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucAccountModalData",
            "id": "interface-AucAccountModalData-cbc8157e511a8891918716750693a424ae00da8e59a17cf4c09fb5e7ee91c819970a812094bd527d189b59f7530b763da163f8d362730079fd539b4fe20f234f",
            "file": "projects/applicature/components/src/lib/modals/account-modal/interfaces/account-modal.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AucAccountModalData {\n  header: string;\n  change: () => void;\n  disconnect: () => void;\n}\n",
            "properties": [
                {
                    "name": "change",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "disconnect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucAccountOption",
            "id": "interface-AucAccountOption-9d7fc201685961ef3d421458fc51190c4a3f06d2396f6f2fb94de7c8050d8ece346e0864948d928dc55f2cdf1c42311268cdc422c5ea1e95a07f612d08a77cd7",
            "file": "projects/applicature/components/src/lib/account-button/interfaces/account-option.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AucAccountOption {\n  name: string;\n  id: number;\n  disabled?: boolean;\n}\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucConnectInfo",
            "id": "interface-AucConnectInfo-8355ccc95853c384abface8f06995a55a7899f9e2080d17ac0052892d963a2dd30091cf5633caf8314a7a3656c33e7c00c76c899143e3cf080b505e7775b1ef5",
            "file": "projects/applicature/components/src/lib/interfaces/ethereum.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AUC_ETH_EVENTS, AUC_ETH_METHODS } from '../enums';\n\nexport interface AucEthChainParams {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: number; // 18\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n  iconUrls?: string[]; // Currently ignored.\n}\n\nexport interface AucConnectInfo {\n  chainId: string;\n}\n\nexport interface AucProviderMessage {\n  data: unknown;\n  type: string;\n}\n\nexport interface AucProviderRpcError extends Error {\n  code: number;\n  data?: unknown;\n  message: string;\n}\n\nexport interface AucRequestArguments {\n  method: AUC_ETH_METHODS | string;\n  params?: unknown[] | Record<string, unknown>;\n}\n\nexport interface AucEthereum {\n  isMetaMask: boolean;\n\n  selectedAddress: string;\n\n  chainId: string;\n\n  enable(): Promise<unknown>;\n\n  isConnected(): boolean;\n\n  on(eventName: AUC_ETH_EVENTS.ACCOUNT_CHANGED, handler: (accounts: string[]) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.CHAIN_CHANGED, handler: (chainId: string) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.CONNECT, handler: (connectInfo: AucConnectInfo) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.DISCONNECT, handler: (error: AucProviderRpcError) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.MESSAGE, handler: (message: AucProviderMessage) => void): void;\n\n  request<T = any>(args: AucRequestArguments): Promise<T>;\n}\n",
            "properties": [
                {
                    "name": "chainId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucConnectionState",
            "id": "interface-AucConnectionState-4c44f813b3c7168eca56d596bdbcd6606d661cc4f8526ab32e379293d3ed194dbbf66fdb0feef67b712c86363d6b07705f93efa4e9c3b2282fad8d34a1993949",
            "file": "projects/applicature/components/src/lib/services/wallet-connect/interfaces/connection-state.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UserState } from 'bnc-onboard/dist/src/interfaces';\n\nexport interface AucConnectionState {\n  connected: boolean;\n  state?: UserState\n}\n",
            "properties": [
                {
                    "name": "connected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserState",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucCustomizeDialogConfig",
            "id": "interface-AucCustomizeDialogConfig-8bdef7217985bc29b69b812bb251cfbbbcf5fe8293a0ff08e2e16a77d55980c070b7431c26125c02be63bfcf4812a5f031ec41307775d1c1e529ab56d7e89499",
            "file": "projects/applicature/components/src/lib/dialog/interfaces/customize-dialog-config.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS } from '../enums';\nimport { AucDialogPosition } from '../types';\n\nexport interface AucCustomizeDialogConfig {\n  [AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS.WIDTH]?: string;\n  [AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS.HEIGHT]?: string;\n  [AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS.MIN_WIDTH]?: string;\n  [AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS.MIN_HEIGHT]?: string;\n  [AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS.MAX_WIDTH]?: string;\n  [AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS.MAX_HEIGHT]?: string;\n  [AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS.CLASSES]?: string | string[];\n  [AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS.POSITION]?: AucDialogPosition;\n}\n",
            "properties": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | string[]",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucDialogPosition",
                    "optional": true,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucCustomizeDialogOverlayConfigInterface",
            "id": "interface-AucCustomizeDialogOverlayConfigInterface-f669bf883a23ae06b91e664d70d268d9e3c7a0939114f653f10146458b346666cf26b86de80b9b091d7fd26d3c6d9805aa1a7fe579e7ef31f0386efe10059b0e",
            "file": "projects/applicature/components/src/lib/dialog/interfaces/customize-dialog-overlay-config.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AucOverlayCustomizationConfig } from '../../overlay';\n\nexport interface AucCustomizeDialogOverlayConfigInterface extends AucOverlayCustomizationConfig {\n  hasOverlay?: boolean;\n  closeByClick?: boolean;\n  overlayClass?: string | string[];\n  transparent?: boolean,\n}\n",
            "properties": [
                {
                    "name": "closeByClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "hasOverlay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "overlayClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | string[]",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "transparent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "AucOverlayCustomizationConfig"
        },
        {
            "name": "AucDropdownConfig",
            "id": "interface-AucDropdownConfig-f1f284f4e7e484e642da5cedeea5c5af0085fa037b609c2f2931232594e0a16c0818a23b2d01dc4cfa6983be6635dfd942430eb34bc0e3eaef28c5c625accb89",
            "file": "projects/applicature/components/src/lib/dropdown-menu/interfaces/dropdown-config.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AucOverlayCustomizationConfig } from '../../overlay';\nimport { AucPosition } from '../../interfaces';\n\nexport interface AucDropdownConfig {\n  overlay?: AucOverlayCustomizationConfig;\n  position?: AucPosition;\n  class?: string | string[];\n  minWidth?: number;\n  minHeight?: number;\n}\n",
            "properties": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | string[]",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "minHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "minWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "overlay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucOverlayCustomizationConfig",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucPosition",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucDropdownPositionStyles",
            "id": "interface-AucDropdownPositionStyles-7dc81520bb8d3ca33fedbfec841ac8bf6c378c0e7d62127f75394e4c9fbb8d0f3356fc21dd3d852364e2dd328d59461885ae06fa6795ed59eae3287504cb1ab1",
            "file": "projects/applicature/components/src/lib/dropdown-menu/interfaces/dropdown-position-styles.interace.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AucDropdownPositionStyles {\n  top: string;\n  left: string;\n  maxWidth?: string;\n  maxHeight?: string\n}\n",
            "properties": [
                {
                    "name": "left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "maxHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "maxWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "top",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucEthChainParams",
            "id": "interface-AucEthChainParams-8355ccc95853c384abface8f06995a55a7899f9e2080d17ac0052892d963a2dd30091cf5633caf8314a7a3656c33e7c00c76c899143e3cf080b505e7775b1ef5",
            "file": "projects/applicature/components/src/lib/interfaces/ethereum.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AUC_ETH_EVENTS, AUC_ETH_METHODS } from '../enums';\n\nexport interface AucEthChainParams {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: number; // 18\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n  iconUrls?: string[]; // Currently ignored.\n}\n\nexport interface AucConnectInfo {\n  chainId: string;\n}\n\nexport interface AucProviderMessage {\n  data: unknown;\n  type: string;\n}\n\nexport interface AucProviderRpcError extends Error {\n  code: number;\n  data?: unknown;\n  message: string;\n}\n\nexport interface AucRequestArguments {\n  method: AUC_ETH_METHODS | string;\n  params?: unknown[] | Record<string, unknown>;\n}\n\nexport interface AucEthereum {\n  isMetaMask: boolean;\n\n  selectedAddress: string;\n\n  chainId: string;\n\n  enable(): Promise<unknown>;\n\n  isConnected(): boolean;\n\n  on(eventName: AUC_ETH_EVENTS.ACCOUNT_CHANGED, handler: (accounts: string[]) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.CHAIN_CHANGED, handler: (chainId: string) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.CONNECT, handler: (connectInfo: AucConnectInfo) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.DISCONNECT, handler: (error: AucProviderRpcError) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.MESSAGE, handler: (message: AucProviderMessage) => void): void;\n\n  request<T = any>(args: AucRequestArguments): Promise<T>;\n}\n",
            "properties": [
                {
                    "name": "blockExplorerUrls",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "chainId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "chainName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "iconUrls",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "nativeCurrency",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "rpcUrls",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucEthereum",
            "id": "interface-AucEthereum-8355ccc95853c384abface8f06995a55a7899f9e2080d17ac0052892d963a2dd30091cf5633caf8314a7a3656c33e7c00c76c899143e3cf080b505e7775b1ef5",
            "file": "projects/applicature/components/src/lib/interfaces/ethereum.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AUC_ETH_EVENTS, AUC_ETH_METHODS } from '../enums';\n\nexport interface AucEthChainParams {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: number; // 18\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n  iconUrls?: string[]; // Currently ignored.\n}\n\nexport interface AucConnectInfo {\n  chainId: string;\n}\n\nexport interface AucProviderMessage {\n  data: unknown;\n  type: string;\n}\n\nexport interface AucProviderRpcError extends Error {\n  code: number;\n  data?: unknown;\n  message: string;\n}\n\nexport interface AucRequestArguments {\n  method: AUC_ETH_METHODS | string;\n  params?: unknown[] | Record<string, unknown>;\n}\n\nexport interface AucEthereum {\n  isMetaMask: boolean;\n\n  selectedAddress: string;\n\n  chainId: string;\n\n  enable(): Promise<unknown>;\n\n  isConnected(): boolean;\n\n  on(eventName: AUC_ETH_EVENTS.ACCOUNT_CHANGED, handler: (accounts: string[]) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.CHAIN_CHANGED, handler: (chainId: string) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.CONNECT, handler: (connectInfo: AucConnectInfo) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.DISCONNECT, handler: (error: AucProviderRpcError) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.MESSAGE, handler: (message: AucProviderMessage) => void): void;\n\n  request<T = any>(args: AucRequestArguments): Promise<T>;\n}\n",
            "properties": [
                {
                    "name": "chainId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "isMetaMask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "selectedAddress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "indexSignatures": [],
            "kind": 167,
            "methods": [
                {
                    "name": "enable",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isConnected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "on",
                    "args": [
                        {
                            "name": "eventName",
                            "type": "AUC_ETH_EVENTS.ACCOUNT_CHANGED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "handler",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "accounts",
                                    "type": "string[]",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "eventName",
                            "type": "AUC_ETH_EVENTS.ACCOUNT_CHANGED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "handler",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "accounts",
                                    "type": "string[]",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "on",
                    "args": [
                        {
                            "name": "eventName",
                            "type": "AUC_ETH_EVENTS.CHAIN_CHANGED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "handler",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "chainId",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "eventName",
                            "type": "AUC_ETH_EVENTS.CHAIN_CHANGED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "handler",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "chainId",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "on",
                    "args": [
                        {
                            "name": "eventName",
                            "type": "AUC_ETH_EVENTS.CONNECT",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "handler",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "connectInfo",
                                    "type": "AucConnectInfo",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "eventName",
                            "type": "AUC_ETH_EVENTS.CONNECT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "handler",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "connectInfo",
                                    "type": "AucConnectInfo",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "on",
                    "args": [
                        {
                            "name": "eventName",
                            "type": "AUC_ETH_EVENTS.DISCONNECT",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "handler",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "error",
                                    "type": "AucProviderRpcError",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "eventName",
                            "type": "AUC_ETH_EVENTS.DISCONNECT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "handler",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "error",
                                    "type": "AucProviderRpcError",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "on",
                    "args": [
                        {
                            "name": "eventName",
                            "type": "AUC_ETH_EVENTS.MESSAGE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "handler",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "message",
                                    "type": "AucProviderMessage",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "eventName",
                            "type": "AUC_ETH_EVENTS.MESSAGE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "handler",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "message",
                                    "type": "AucProviderMessage",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "request",
                    "args": [
                        {
                            "name": "args",
                            "type": "AucRequestArguments",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "AucRequestArguments",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "AucEtherscanTransaction",
            "id": "interface-AucEtherscanTransaction-c3d3ee32c7dfd8f7eee055f89162f99c4d7b711ac18f09171798ec85e16e346675a518936b5c9811047a463d4617686a57134d8b819903ea6d6a4e222940fd09",
            "file": "projects/applicature/components/src/lib/interfaces/etherscan-transaction.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AUC_TRANSACTION_STATUS } from '../enums';\n\nexport interface AucEtherscanTransactionResponse {\n  status: '0' | '1'; // Note: status: 0 = Fail, 1 = Pass. Will return null/empty value for pre-byzantium fork\n  message: string;\n  result: AucEtherscanTransaction[];\n}\n\nexport interface AucEtherscanTransaction {\n  blockNumber: string;\n  timeStamp: string;\n  hash: string;\n  nonce: string;\n  blockHash: string;\n  transactionIndex: string;\n  from: string;\n  to: string;\n  value: string;\n  gas: string;\n  gasPrice: string;\n  isError:  '0' | '1'; // Note: isError\":\"0\" = Pass , isError\":\"1\" = Error during Contract Execution\n  txreceipt_status: string; // 0 - fail, 1 - success\n  input: string;\n  contractAddress: string;\n  cumulativeGasUsed: string;\n  gasUsed: string;\n  confirmations: string;\n  explorerUrl?: string;\n}\n\nexport interface AucEtherscanTransactionLocalStorage {\n  name: string,\n  hash: string;\n  status: AUC_TRANSACTION_STATUS;\n  explorerUrl: string;\n  viewed: boolean;\n}\n",
            "properties": [
                {
                    "name": "blockHash",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "blockNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "confirmations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "contractAddress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "cumulativeGasUsed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "explorerUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "from",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "gas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "gasPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "gasUsed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "hash",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "input",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "isError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"0\" | \"1\"",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "nonce",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "timeStamp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "to",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "transactionIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "txreceipt_status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucEtherscanTransactionLocalStorage",
            "id": "interface-AucEtherscanTransactionLocalStorage-c3d3ee32c7dfd8f7eee055f89162f99c4d7b711ac18f09171798ec85e16e346675a518936b5c9811047a463d4617686a57134d8b819903ea6d6a4e222940fd09",
            "file": "projects/applicature/components/src/lib/interfaces/etherscan-transaction.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AUC_TRANSACTION_STATUS } from '../enums';\n\nexport interface AucEtherscanTransactionResponse {\n  status: '0' | '1'; // Note: status: 0 = Fail, 1 = Pass. Will return null/empty value for pre-byzantium fork\n  message: string;\n  result: AucEtherscanTransaction[];\n}\n\nexport interface AucEtherscanTransaction {\n  blockNumber: string;\n  timeStamp: string;\n  hash: string;\n  nonce: string;\n  blockHash: string;\n  transactionIndex: string;\n  from: string;\n  to: string;\n  value: string;\n  gas: string;\n  gasPrice: string;\n  isError:  '0' | '1'; // Note: isError\":\"0\" = Pass , isError\":\"1\" = Error during Contract Execution\n  txreceipt_status: string; // 0 - fail, 1 - success\n  input: string;\n  contractAddress: string;\n  cumulativeGasUsed: string;\n  gasUsed: string;\n  confirmations: string;\n  explorerUrl?: string;\n}\n\nexport interface AucEtherscanTransactionLocalStorage {\n  name: string,\n  hash: string;\n  status: AUC_TRANSACTION_STATUS;\n  explorerUrl: string;\n  viewed: boolean;\n}\n",
            "properties": [
                {
                    "name": "explorerUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "hash",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AUC_TRANSACTION_STATUS",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "viewed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucEtherscanTransactionResponse",
            "id": "interface-AucEtherscanTransactionResponse-c3d3ee32c7dfd8f7eee055f89162f99c4d7b711ac18f09171798ec85e16e346675a518936b5c9811047a463d4617686a57134d8b819903ea6d6a4e222940fd09",
            "file": "projects/applicature/components/src/lib/interfaces/etherscan-transaction.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AUC_TRANSACTION_STATUS } from '../enums';\n\nexport interface AucEtherscanTransactionResponse {\n  status: '0' | '1'; // Note: status: 0 = Fail, 1 = Pass. Will return null/empty value for pre-byzantium fork\n  message: string;\n  result: AucEtherscanTransaction[];\n}\n\nexport interface AucEtherscanTransaction {\n  blockNumber: string;\n  timeStamp: string;\n  hash: string;\n  nonce: string;\n  blockHash: string;\n  transactionIndex: string;\n  from: string;\n  to: string;\n  value: string;\n  gas: string;\n  gasPrice: string;\n  isError:  '0' | '1'; // Note: isError\":\"0\" = Pass , isError\":\"1\" = Error during Contract Execution\n  txreceipt_status: string; // 0 - fail, 1 - success\n  input: string;\n  contractAddress: string;\n  cumulativeGasUsed: string;\n  gasUsed: string;\n  confirmations: string;\n  explorerUrl?: string;\n}\n\nexport interface AucEtherscanTransactionLocalStorage {\n  name: string,\n  hash: string;\n  status: AUC_TRANSACTION_STATUS;\n  explorerUrl: string;\n  viewed: boolean;\n}\n",
            "properties": [
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "result",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucEtherscanTransaction[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"0\" | \"1\"",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucNativeCurrency",
            "id": "interface-AucNativeCurrency-d3262b703dbfe423602b677ad95e6ee673f35abcb7498d1620793f512c1a795e9c20ee7ab7d0cf27b15319dc2d85676e5cefea6e54ad9a72d0673d53660a3f86",
            "file": "projects/applicature/components/src/lib/interfaces/native-currency.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AucNativeCurrency {\n  name: string;\n  symbol: string;\n  decimals: number;\n}\n",
            "properties": [
                {
                    "name": "decimals",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucNetworkOption",
            "id": "interface-AucNetworkOption-12b1d9f3b4930d0bff4c53fb1c599a35fd9e4b9822c05e5aec7d211c2c21295bf8929e74de1688133938c03be7d121c2e66844fb5191156babc9e03318393a4f",
            "file": "projects/applicature/components/src/lib/interfaces/network-option.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AucEthChainParams } from './ethereum';\n\nexport interface AucNetworkOption {\n  /** {@link icon} - currency icon url */\n  icon: string;\n  name: string;\n  chainId: string;\n  /** {@link symbol} -  currency symbol. You can use AucNativeCurrencies[chainID].name or other string. */\n  symbol: string;\n\n  /** {@link blockExplorerUrl} - Ex: https://etherscan.io. <br>\n   * You can use {@link AucBlockExplorerUrls[chainId][0]} or set other url.\n   * */\n  blockExplorerUrl: string;\n\n  /** {@link blockExplorerApiUrl} - Ex: https://api.etherscan.io/api. <br>\n   * Used for getting transactions information.\n   * You can use {@link AucBlockExplorerUrls[chainId]} or set other url.\n   * */\n  blockExplorerApiUrl?: string;\n\n  /*** {@link isActive} - sets option as active */\n  isActive?: boolean;\n  disabled?: boolean;\n\n  /*** {@link chainParams} - this params used for adding new network to the Metamask. */\n  chainParams?: AucEthChainParams;\n}\n",
            "properties": [
                {
                    "name": "blockExplorerApiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>{@link blockExplorerApiUrl} - Ex: <a href=\"https://api.etherscan.io/api\">https://api.etherscan.io/api</a>. <br>\nUsed for getting transactions information.\nYou can use {@link AucBlockExplorerUrls[chainId]} or set other url.</p>\n",
                    "line": 20,
                    "rawdescription": "\n{@link blockExplorerApiUrl} - Ex: https://api.etherscan.io/api. <br>\nUsed for getting transactions information.\nYou can use {@link AucBlockExplorerUrls[chainId]} or set other url.\n"
                },
                {
                    "name": "blockExplorerUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>{@link blockExplorerUrl} - Ex: <a href=\"https://etherscan.io\">https://etherscan.io</a>. <br>\nYou can use {@link AucBlockExplorerUrls[chainId][0]} or set other url.</p>\n",
                    "line": 14,
                    "rawdescription": "\n{@link blockExplorerUrl} - Ex: https://etherscan.io. <br>\nYou can use {@link AucBlockExplorerUrls[chainId][0]} or set other url.\n"
                },
                {
                    "name": "chainId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "chainParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucEthChainParams",
                    "optional": true,
                    "description": "<p>{@link chainParams} - this params used for adding new network to the Metamask.</p>\n",
                    "line": 27,
                    "rawdescription": "\n{@link chainParams} - this params used for adding new network to the Metamask."
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>{@link icon} - currency icon url</p>\n",
                    "line": 5,
                    "rawdescription": "\n{@link icon} - currency icon url"
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>{@link isActive} - sets option as active</p>\n",
                    "line": 23,
                    "rawdescription": "\n{@link isActive} - sets option as active"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>{@link symbol} -  currency symbol. You can use AucNativeCurrencies[chainID].name or other string.</p>\n",
                    "line": 9,
                    "rawdescription": "\n{@link symbol} -  currency symbol. You can use AucNativeCurrencies[chainID].name or other string."
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucNoNetworkConfigDialogDataI",
            "id": "interface-AucNoNetworkConfigDialogDataI-5721a946ab49935b26a28a29a7b430cc2df77bdc5cb1e5cb5e2118baa95d5b6d81229865213c21bedc4aed656baaf1cff694f3d68d507d7baa8fd2ff21621a2a",
            "file": "projects/applicature/components/src/lib/network-dropdown/no-network-config/interfaces/no-network-config-dialog-data.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AucNoNetworkConfigDialogDataI {\n  text: string;\n  title: string;\n}\n",
            "properties": [
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucOverlayCustomizationConfig",
            "id": "interface-AucOverlayCustomizationConfig-4339fc7d3b32e59d594711eb1123d38af68befc0b055f82643c08d552767d898f28f59fda2a892b00d455ded69c92cdd43a60e1f64ad28329a2331cf79e82db3",
            "file": "projects/applicature/components/src/lib/overlay/interfaces/overlay-customization-config.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AucOverlayCustomizationConfig {\n  transparent?: boolean,\n  overlayClass?: string | string[];\n}\n",
            "properties": [
                {
                    "name": "overlayClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | string[]",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "transparent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucPosition",
            "id": "interface-AucPosition-a91917e6a45d9201f1679fcaa4281d0eb7f5417ff2517e17ff858208fdf18d23e3481f6293457b4b80dd253db41a7f7dc1064004b61333e4c23ba02fa833c3f2",
            "file": "projects/applicature/components/src/lib/interfaces/position.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AucHorizontalPosition, AucVerticalPosition } from '../types';\n\nexport interface AucPosition {\n  vertical?: AucVerticalPosition,\n  horizontal?: AucHorizontalPosition\n}\n",
            "properties": [
                {
                    "name": "horizontal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucHorizontalPosition",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "vertical",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucVerticalPosition",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucProviderMessage",
            "id": "interface-AucProviderMessage-8355ccc95853c384abface8f06995a55a7899f9e2080d17ac0052892d963a2dd30091cf5633caf8314a7a3656c33e7c00c76c899143e3cf080b505e7775b1ef5",
            "file": "projects/applicature/components/src/lib/interfaces/ethereum.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AUC_ETH_EVENTS, AUC_ETH_METHODS } from '../enums';\n\nexport interface AucEthChainParams {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: number; // 18\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n  iconUrls?: string[]; // Currently ignored.\n}\n\nexport interface AucConnectInfo {\n  chainId: string;\n}\n\nexport interface AucProviderMessage {\n  data: unknown;\n  type: string;\n}\n\nexport interface AucProviderRpcError extends Error {\n  code: number;\n  data?: unknown;\n  message: string;\n}\n\nexport interface AucRequestArguments {\n  method: AUC_ETH_METHODS | string;\n  params?: unknown[] | Record<string, unknown>;\n}\n\nexport interface AucEthereum {\n  isMetaMask: boolean;\n\n  selectedAddress: string;\n\n  chainId: string;\n\n  enable(): Promise<unknown>;\n\n  isConnected(): boolean;\n\n  on(eventName: AUC_ETH_EVENTS.ACCOUNT_CHANGED, handler: (accounts: string[]) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.CHAIN_CHANGED, handler: (chainId: string) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.CONNECT, handler: (connectInfo: AucConnectInfo) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.DISCONNECT, handler: (error: AucProviderRpcError) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.MESSAGE, handler: (message: AucProviderMessage) => void): void;\n\n  request<T = any>(args: AucRequestArguments): Promise<T>;\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucProviderRpcError",
            "id": "interface-AucProviderRpcError-8355ccc95853c384abface8f06995a55a7899f9e2080d17ac0052892d963a2dd30091cf5633caf8314a7a3656c33e7c00c76c899143e3cf080b505e7775b1ef5",
            "file": "projects/applicature/components/src/lib/interfaces/ethereum.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AUC_ETH_EVENTS, AUC_ETH_METHODS } from '../enums';\n\nexport interface AucEthChainParams {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: number; // 18\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n  iconUrls?: string[]; // Currently ignored.\n}\n\nexport interface AucConnectInfo {\n  chainId: string;\n}\n\nexport interface AucProviderMessage {\n  data: unknown;\n  type: string;\n}\n\nexport interface AucProviderRpcError extends Error {\n  code: number;\n  data?: unknown;\n  message: string;\n}\n\nexport interface AucRequestArguments {\n  method: AUC_ETH_METHODS | string;\n  params?: unknown[] | Record<string, unknown>;\n}\n\nexport interface AucEthereum {\n  isMetaMask: boolean;\n\n  selectedAddress: string;\n\n  chainId: string;\n\n  enable(): Promise<unknown>;\n\n  isConnected(): boolean;\n\n  on(eventName: AUC_ETH_EVENTS.ACCOUNT_CHANGED, handler: (accounts: string[]) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.CHAIN_CHANGED, handler: (chainId: string) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.CONNECT, handler: (connectInfo: AucConnectInfo) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.DISCONNECT, handler: (error: AucProviderRpcError) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.MESSAGE, handler: (message: AucProviderMessage) => void): void;\n\n  request<T = any>(args: AucRequestArguments): Promise<T>;\n}\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "Error"
        },
        {
            "name": "AucRecentTransactionsModalData",
            "id": "interface-AucRecentTransactionsModalData-fef6cd2a4c2a14612276ff9d3b65b49897b29d26c6470b43e6f1ff34d3188ee37b50a3c1f0af2587e228f63808ad9fc42edf8f848db0db4f5b87f0a7920bf9f7",
            "file": "projects/applicature/components/src/lib/transactions/components/transactions-history-modal/interfaces/recent-transaction-modal-data.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AucRecentTransactionsModalData {\n  header: string;\n}\n",
            "properties": [
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucRequestArguments",
            "id": "interface-AucRequestArguments-8355ccc95853c384abface8f06995a55a7899f9e2080d17ac0052892d963a2dd30091cf5633caf8314a7a3656c33e7c00c76c899143e3cf080b505e7775b1ef5",
            "file": "projects/applicature/components/src/lib/interfaces/ethereum.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AUC_ETH_EVENTS, AUC_ETH_METHODS } from '../enums';\n\nexport interface AucEthChainParams {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: number; // 18\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n  iconUrls?: string[]; // Currently ignored.\n}\n\nexport interface AucConnectInfo {\n  chainId: string;\n}\n\nexport interface AucProviderMessage {\n  data: unknown;\n  type: string;\n}\n\nexport interface AucProviderRpcError extends Error {\n  code: number;\n  data?: unknown;\n  message: string;\n}\n\nexport interface AucRequestArguments {\n  method: AUC_ETH_METHODS | string;\n  params?: unknown[] | Record<string, unknown>;\n}\n\nexport interface AucEthereum {\n  isMetaMask: boolean;\n\n  selectedAddress: string;\n\n  chainId: string;\n\n  enable(): Promise<unknown>;\n\n  isConnected(): boolean;\n\n  on(eventName: AUC_ETH_EVENTS.ACCOUNT_CHANGED, handler: (accounts: string[]) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.CHAIN_CHANGED, handler: (chainId: string) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.CONNECT, handler: (connectInfo: AucConnectInfo) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.DISCONNECT, handler: (error: AucProviderRpcError) => void): void;\n\n  on(eventName: AUC_ETH_EVENTS.MESSAGE, handler: (message: AucProviderMessage) => void): void;\n\n  request<T = any>(args: AucRequestArguments): Promise<T>;\n}\n",
            "properties": [
                {
                    "name": "method",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AUC_ETH_METHODS | string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "params",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[] | Record<string | >",
                    "optional": true,
                    "description": "",
                    "line": 33
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucSetStyleProp",
            "id": "interface-AucSetStyleProp-84d37ebae01ba0341ca7e4f998cccb69f98598bcbe0ea0d7cde9987cff58a3a8e9c1ce33f348cbbe410c682c1bc13fe9a63105630637c01b12116652d8f3d930",
            "file": "projects/applicature/components/src/lib/directives/set-style-props/interfaces/set-style-prop.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AucSetStyleProp {\n  name: string;\n  value: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucSort",
            "id": "interface-AucSort-827cbab635c3e9996c91b248fe3652b342256159e4930c004b65eeb147cc57eb177a472e6da4552e44609a4193cc1723602ce0c8b623dd17a861f198a58fc0bd",
            "file": "projects/applicature/components/src/lib/interfaces/sort.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AucSortDirection } from '../types';\n\nexport interface AucSort {\n  sortBy: string; // sort by value\n  sortDirection: AucSortDirection; // sort by direction\n}\n",
            "properties": [
                {
                    "name": "sortBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "sortDirection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucSortDirection",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucTableHeaderItem",
            "id": "interface-AucTableHeaderItem-8b3bed7e5846f3b58a8cd7e9532a00cb83cbdc5c589aa8654561499c37b6792e666144a69a0cc2dcc03bdb08e3d2d84322d6e92d6b7b4fcdeb4198a3cb89c70a",
            "file": "projects/applicature/components/src/lib/table/interfaces/table.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AucSort } from '../../interfaces';\n\nexport interface AucTableHeaderItem {\n  position: number; // column position 1, 2, 3, ...\n  rowKey: string;\n  value: string;\n  icon?: string;\n  sort?: AucSort;\n  sortBy?: string;\n}\n\nexport interface AucTableRowItem {\n  value: string;\n  link?: string;\n  icon?: string;\n  withBg?: boolean;\n}\n\nexport interface AucTableRow {\n  [key: string]: AucTableRowItem | AucTableRowItem[];\n}\n\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "rowKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucSort",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "sortBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucTableRow",
            "id": "interface-AucTableRow-8b3bed7e5846f3b58a8cd7e9532a00cb83cbdc5c589aa8654561499c37b6792e666144a69a0cc2dcc03bdb08e3d2d84322d6e92d6b7b4fcdeb4198a3cb89c70a",
            "file": "projects/applicature/components/src/lib/table/interfaces/table.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AucSort } from '../../interfaces';\n\nexport interface AucTableHeaderItem {\n  position: number; // column position 1, 2, 3, ...\n  rowKey: string;\n  value: string;\n  icon?: string;\n  sort?: AucSort;\n  sortBy?: string;\n}\n\nexport interface AucTableRowItem {\n  value: string;\n  link?: string;\n  icon?: string;\n  withBg?: boolean;\n}\n\nexport interface AucTableRow {\n  [key: string]: AucTableRowItem | AucTableRowItem[];\n}\n\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-8b3bed7e5846f3b58a8cd7e9532a00cb83cbdc5c589aa8654561499c37b6792e666144a69a0cc2dcc03bdb08e3d2d84322d6e92d6b7b4fcdeb4198a3cb89c70a",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "AucTableRowItem | []",
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 175,
            "methods": []
        },
        {
            "name": "AucTableRowItem",
            "id": "interface-AucTableRowItem-8b3bed7e5846f3b58a8cd7e9532a00cb83cbdc5c589aa8654561499c37b6792e666144a69a0cc2dcc03bdb08e3d2d84322d6e92d6b7b4fcdeb4198a3cb89c70a",
            "file": "projects/applicature/components/src/lib/table/interfaces/table.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AucSort } from '../../interfaces';\n\nexport interface AucTableHeaderItem {\n  position: number; // column position 1, 2, 3, ...\n  rowKey: string;\n  value: string;\n  icon?: string;\n  sort?: AucSort;\n  sortBy?: string;\n}\n\nexport interface AucTableRowItem {\n  value: string;\n  link?: string;\n  icon?: string;\n  withBg?: boolean;\n}\n\nexport interface AucTableRow {\n  [key: string]: AucTableRowItem | AucTableRowItem[];\n}\n\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "withBg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucTransferModalData",
            "id": "interface-AucTransferModalData-0ecfed3c1a185b954b99fbd021b2568f6c8a4561937665f467bea3c6c2b2d9d71990118b1bfc3e9b9397176140a05b04cf7ac12574821f9867fe2e6472406a3e",
            "file": "projects/applicature/components/src/lib/modals/transfer-modal/interfaces/transfer-modal-data.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import BigNumber from 'bignumber.js';\n\nexport interface AucTransferModalData {\n  header: string;\n  symbol: string;\n  allowance: BigNumber.Value;\n  max: BigNumber.Value | any;\n  approve: () => Promise<void>;\n  confirm: () => Promise<void>;\n  approveButton: string;\n  approvingButton: string;\n  confirmButton: string;\n}\n",
            "properties": [
                {
                    "name": "allowance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BigNumber.Value",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "approve",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "approveButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "approvingButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "confirm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "confirmButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BigNumber.Value | any",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AucWrongNetworkModalData",
            "id": "interface-AucWrongNetworkModalData-6f71eb9699ab3704029faa3883b5a48f885ef76f32d1bccf6129bc2b3e32ea085a673fb14c4bea6c7d793fc784ab519b93d74ebf32e0cf6da072fc6f1d6f4f5c",
            "file": "projects/applicature/components/src/lib/modals/wrong-network-modal/interfaces/wrong-network-modal-data.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AucWrongNetworkAppearance } from '../types';\n\nexport interface AucWrongNetworkModalData {\n  header: string;\n  message: string;\n  chainId: string;\n  switchLabel: string;\n  appearance: AucWrongNetworkAppearance;\n}\n",
            "properties": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucWrongNetworkAppearance",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "chainId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "switchLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ComponentDoc",
            "id": "interface-ComponentDoc-1031ace5110f07a33245fad6f19ec2730cbf7b7e853322943647baefc3a584cbe7f117f1b3ff6f2ce345937cfcd93d4842b8b9726b492e7337ba946dcba37221",
            "file": "projects/components-demo/src/app/modules/example-view/components/doc-view/doc-view.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input, AfterContentInit, ChangeDetectorRef } from \"@angular/core\";\n\n// import { DocFather, DocFathers, DocGroupTitle } from \"../sharedDataTypes\";\nimport { take } from \"rxjs/operators\";\nimport { DocumentationParserService } from '../../services';\n\ntype DocFather = any;\ntype DocFathers = any;\ntype DocGroupTitle = any;\n\ninterface ComponentDoc {\n  component: string;\n  docFather: DocFather;\n  constructors?: DocFathers;\n  properties?: DocFathers;\n  accessors?: DocFathers;\n  methods?: DocFathers;\n  functions?: DocFathers;\n}\n\n/**\n * Sorts DocFathers by decorator -> Input > Output > HostBinding > other > alphabetical.\n *\n * @param docFather1 - The first element to compare.\n * @param docFather2 - The second element to be compared with.\n * @param decorator  - The Decorator by which to sort in this iteration.\n */\nfunction sortByDecorator(\n  docFather1: DocFather,\n  docFather2: DocFather,\n  decorator: \"Input\" | \"Output\" | \"HostBinding\" = \"Input\"\n): number {\n  if (docFather1.decorators) {\n    // Element1 has decorators.\n    if (!docFather2.decorators) {\n      return -1;\n    }\n\n    const decoratorsElement1 = docFather1.decorators.map(dec => dec.name);\n    const decoratorsElement2 = docFather2.decorators.map(dec => dec.name);\n\n    if (decoratorsElement1.includes(decorator) && decoratorsElement2.includes(decorator)) {\n      return decoratorsElement1.indexOf(decorator) - decoratorsElement2.indexOf(decorator);\n    }\n\n    if (decoratorsElement1.includes(decorator)) {\n      return -1;\n    } else if (decoratorsElement2.includes(decorator)) {\n      return 1;\n    } else {\n      return sortByDecorator(docFather1, docFather2, decorator === \"Input\" ? \"Output\" : \"HostBinding\");\n    }\n\n  } else if (docFather2.decorators) {\n    return -sortByDecorator(docFather2, docFather1);\n  } else {\n    return docFather1.name.localeCompare(docFather2.name);\n  }\n}\n\n@Component({\n  selector: 'demo-doc-view',\n  templateUrl: './doc-view.component.html',\n  styleUrls: ['./doc-view.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DocViewComponent implements AfterContentInit {\n  /** The component the documentation should be visualized for. */\n  @Input()\n  public components!: Array<string>;\n\n  /** Array containing all the docs of the components input. */\n  public componentsDocs: Array<ComponentDoc> = [];\n\n  /** Flag to indicate if some data could be loaded - otherwise the message to run \"yarn doc\" first will occur */\n  public wasLoaded = false;\n\n  constructor(\n    public documentationParserService: DocumentationParserService,\n    private readonly cd: ChangeDetectorRef\n  ) { }\n\n  /**\n   * Inits the componentsDocs array by calling the documentationParserService and\n   * filtering for those components given by the components input.\n   */\n  public ngAfterContentInit(): void {\n    if (!this.components) {\n      return;\n    }\n    this.documentationParserService.onDataLoaded$\n      .pipe(take(1))\n      .subscribe(wasLoaded => {\n        this.wasLoaded = !!wasLoaded;\n        if (wasLoaded) {\n          this.componentsDocs = [];\n          this.components.forEach(component => {\n            const docFather = this.documentationParserService.find(component);\n            if (!docFather) {\n              return;\n            }\n            const componentDoc: ComponentDoc = {component, docFather};\n            componentDoc.constructors = this.arraySetup(componentDoc.docFather, \"Constructors\");\n            componentDoc.accessors = this.arraySetup(componentDoc.docFather, \"Accessors\");\n            componentDoc.methods = this.arraySetup(componentDoc.docFather, \"Methods\");\n            componentDoc.functions = this.arraySetup(componentDoc.docFather, \"Functions\");\n            componentDoc.properties = this.arraySetup(componentDoc.docFather, \"Properties\")\n              .filter(child =>\n                (child.flags.isProtected || child.flags.isPublic) && !child.flags.isConstructorProperty\n              )\n              .sort(sortByDecorator);\n            this.componentsDocs.push(componentDoc);\n          });\n          this.cd.markForCheck();\n        }\n      });\n  }\n\n  /**\n   * Returns the first accessor parameter.\n   *\n   * @param docFather - The DocFather to be searched for the accessor parameters\n   */\n  public getAccessorsParameters(docFather: DocFather): string {\n    for (const keyName of [ \"bindingPropertyName\", \"hostPropertyName\", \"type.name\", \"type.types\" ]) {\n      const keys = this.findKeys(docFather, keyName);\n      if (keys.length > 0) {\n        return keys[0];\n      }\n    }\n    return \"\";\n  }\n\n  /**\n   * Iterates through the object, searches for the keyName\n   * and returns an array of results matching the keyName.\n   *\n   * @param inspectedObject - The object to get inspected\n   * @param keyName         - The name of the key to be found\n   */\n  private findKeys(inspectedObject: any, keyName: string): string[] {\n    const results = [];\n    if (typeof inspectedObject === \"object\") {\n      if (inspectedObject.hasOwnProperty(keyName)) {\n        return [inspectedObject[keyName].toString()];\n      } else {\n        for (const key in inspectedObject) {\n          if (inspectedObject[key]) {\n            results.push(...this.findKeys(inspectedObject[key], keyName));\n          }\n        }\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Sets up the array identified by title.\n   *\n   * @param title - The title of the component doc snippets to save into the array.\n   */\n  private arraySetup(docFather: DocFather, title: DocGroupTitle): Array<DocFather> {\n    if (!docFather) {\n      return [];\n    }\n    const group = docFather.groups.find(group => group.title === title);\n    if (group) {\n      return docFather.children.filter(child => group.children.includes(child.id));\n    } else {\n      return [];\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "accessors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DocFathers",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "component",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "constructors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DocFathers",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "docFather",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DocFather",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "functions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DocFathers",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "methods",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DocFathers",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "properties",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DocFathers",
                    "optional": true,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Window",
            "id": "interface-Window-1a1fa711c14f6037af75628ed5ea3f3c7143598b7549d90e1304c9c2e715a34a510e006f4959c593c375222b7b22341fd123bd83788cfc88d5f4482026dd0e64",
            "file": "projects/components-demo/src/polyfills.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import 'zone.js';\nimport { AucEthereum } from '@applicature/components';\nimport Web3 from 'web3';\nimport process from 'process';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\nimport { Buffer } from 'buffer';\n\ndeclare global {\n  interface Window {\n    ethereum: AucEthereum;\n    global: any;\n    web3: Web3;\n  }\n}\n\nwindow.process = process;\nwindow.global = window;\nwindow.global.Buffer = global.Buffer || Buffer;\n",
            "properties": [
                {
                    "name": "ethereum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucEthereum",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "global",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "web3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Web3",
                    "optional": false,
                    "description": "",
                    "line": 63
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Window",
            "id": "interface-Window-535eacae96ffc2665680cf16bb44bff03e0cb74669a22f59d7ab53dc016001d686220e3729944b9e2ddaec6b4ee65751c4547b0f191c64c62f831c2fd1ec2a2b-1",
            "file": "projects/demo/src/polyfills.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import 'zone.js';\nimport { AucEthereum } from '@applicature/components';\nimport { Buffer } from 'buffer';\nimport process from 'process';\nimport Web3 from 'web3';\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\ndeclare global {\n  interface Window {\n    ethereum: AucEthereum;\n    global: any;\n    web3: Web3;\n  }\n}\n\nwindow.process = process;\nwindow.global = window;\nwindow.global.Buffer = global.Buffer || Buffer;\n",
            "properties": [
                {
                    "name": "ethereum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucEthereum",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "global",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "web3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Web3",
                    "optional": false,
                    "description": "",
                    "line": 62
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Window-1"
        }
    ],
    "injectables": [
        {
            "name": "AucBlockScrollHelperService",
            "id": "injectable-AucBlockScrollHelperService-a4f3ffe1326822ac104002a917a1c630cda9da3a15d08f77bfa8388df9993814f847ec6e114fd6c5ce880934ad97100a2b5dd6c12dde6c0c81a24b3544a13151",
            "file": "projects/applicature/components/src/lib/helpers/block-scroll-helper/block-scroll-helper.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "lockScroll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThis class will block scroll for body;\n",
                    "description": "<p>This class will block scroll for body;</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "unlockScroll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThis class will unlock scroll for body;\n",
                    "description": "<p>This class will unlock scroll for body;</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>Used for lock / unlock scroll for body.</p>\n",
            "rawdescription": "\n\nUsed for lock / unlock scroll for body.\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Used for lock / unlock scroll for body.\n */\n@Injectable()\nexport class AucBlockScrollHelperService {\n  constructor(@Inject(DOCUMENT) private _document: Document) {\n  }\n\n  /**\n   * @link lockScroll add class `block-scroll` to body;\n   * This class will block scroll for body;\n   */\n  public lockScroll(): void {\n    this._document.body.classList.add('block-scroll');\n  }\n\n  /**\n   * @link unlockScroll remove class `block-scroll` from body;\n   * This class will unlock scroll for body;\n   */\n  public unlockScroll(): void {\n    this._document.body.classList.remove('block-scroll');\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "_document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AucDialogService",
            "id": "injectable-AucDialogService-5d7880777c066d19e8d5344e3609cf7b81225d9fd0821d74379db9e50b28d003e57721be9506de033e26720a6c951fc5c2051d3d25918210f65e32367f4b05d1",
            "file": "projects/applicature/components/src/lib/dialog/services/dialog/dialog.service.ts",
            "properties": [
                {
                    "name": "_dialogComponentRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ComponentRef<AucDialogComponent>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "appendDialogComponentToBody",
                    "args": [
                        {
                            "name": "config",
                            "type": "AucDialogConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "AucDialogRef<R>",
                    "typeParameters": [
                        "T",
                        "R"
                    ],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "AucDialogConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "open",
                    "args": [
                        {
                            "name": "componentType",
                            "type": "Type<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "config",
                            "type": "AucDialogConfig<D>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "AucDialogRef<Type<R>>",
                    "typeParameters": [
                        "T",
                        "D",
                        "R"
                    ],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThis method open dialog window.\n",
                    "description": "<p>This method open dialog window.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2185,
                                "end": 2198,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "componentType"
                            },
                            "type": "Type<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2179,
                                "end": 2184,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>component which will be shown inside the dialog.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 2262,
                                "end": 2268,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "config"
                            },
                            "type": "AucDialogConfig<D>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2256,
                                "end": 2261,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>configuration for the dialog window. More details {@link AucDialogConfig}.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "removeDialogComponentFromBody",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Inject,\n  Injectable,\n  Injector,\n  Type\n} from '@angular/core';\n\nimport { AucDialogComponent } from '../../dialog.component';\nimport { AucDialogConfig } from '../../dialog-config';\nimport { AucDialogInjector } from '../../dialog-injector';\nimport { AucDialogRef } from '../../dialog-ref';\n\n\n@Injectable()\nexport class AucDialogService {\n  private _dialogComponentRef: ComponentRef<AucDialogComponent>;\n\n  constructor(\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    private _injector: Injector,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n  }\n\n  private appendDialogComponentToBody<T = any, R = any>(config: AucDialogConfig): AucDialogRef<R> {\n    const map = new WeakMap();\n    map.set(AucDialogConfig, config);\n\n    const dialogRef = new AucDialogRef<R>();\n    map.set(AucDialogRef, dialogRef);\n\n    const afterClosedSub = dialogRef.afterClosed\n      .subscribe(() => {\n        this.removeDialogComponentFromBody();\n        afterClosedSub.unsubscribe();\n      });\n\n    const componentFactory: ComponentFactory<AucDialogComponent> =\n      this._componentFactoryResolver.resolveComponentFactory<AucDialogComponent>(AucDialogComponent);\n    const componentRef: ComponentRef<AucDialogComponent> = componentFactory.create(new AucDialogInjector(this._injector, map));\n\n    this._appRef.attachView(componentRef.hostView);\n\n    const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n    this.document.body.appendChild(domElem);\n\n    this._dialogComponentRef = componentRef;\n\n    const dialogOnCloseSubscription = this._dialogComponentRef.instance.onClose\n      .subscribe(() => {\n        this.removeDialogComponentFromBody();\n        dialogOnCloseSubscription.unsubscribe();\n      });\n\n    return dialogRef;\n  }\n\n  private removeDialogComponentFromBody(): void {\n    this._appRef.detachView(this._dialogComponentRef.hostView);\n    this._dialogComponentRef.destroy();\n  }\n\n  /**\n   * This method open dialog window.\n   * @param componentType - component which will be shown inside the dialog.\n   * @param config - configuration for the dialog window. More details {@link AucDialogConfig}.\n   */\n  public open<T = any, D = any, R = any>(componentType: Type<T>, config: AucDialogConfig<D>): AucDialogRef<Type<R>> {\n    const dialogRef: AucDialogRef<Type<R>> = this.appendDialogComponentToBody<Type<T>, Type<R>>(config);\n\n    this._dialogComponentRef.instance.childComponentType = componentType;\n\n    return dialogRef;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_appRef",
                        "type": "ApplicationRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "_componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_appRef",
                        "type": "ApplicationRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AucTransactionService",
            "id": "injectable-AucTransactionService-123057796bc4a2c07069159662ecb966eebfe904ac4095c1d51bdf5626f3daf31440d2122b040675362e53d3306d93442ae7586628ee62e19968303f05ec95ec",
            "file": "projects/applicature/components/src/lib/transactions/services/transaction/transaction.service.ts",
            "properties": [
                {
                    "name": "_dispose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_transactions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucEtherscanTransactionLocalStorage[]",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_transactionsChanged$",
                    "defaultValue": "new BehaviorSubject<any>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<any>",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "_getLocalStorageKey",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 188,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_pingTransactionsStatus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_refreshTransactions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 194,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_removeFromTransactions",
                    "args": [
                        {
                            "name": "hash",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 200,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "hash",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearTransactions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dispose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getRemoteTransactions",
                    "args": [
                        {
                            "name": "address",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "chainId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "1"
                        },
                        {
                            "name": "offset",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "100"
                        },
                        {
                            "name": "sortDirection",
                            "type": "AucSortDirection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "AUC_SORT_DIRECTION.ASC"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<AucEtherscanTransactionResponse>",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMethod gor getting remote transactions from blockchain.\n",
                    "description": "<p>Method gor getting remote transactions from blockchain.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3511,
                                "end": 3518,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "address"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3505,
                                "end": 3510,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>wallet address.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 3549,
                                "end": 3556,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "chainId"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3543,
                                "end": 3548,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>0x-prefixed hexadecimal string.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 3603,
                                "end": 3607,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "page"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "1",
                            "tagName": {
                                "pos": 3597,
                                "end": 3602,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>number of the page. Uses for pagination.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 3663,
                                "end": 3669,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "offset"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "100",
                            "tagName": {
                                "pos": 3657,
                                "end": 3662,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Uses for pagination.</li>\n</ul>\n"
                        },
                        {
                            "name": "sortDirection",
                            "type": "AucSortDirection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "AUC_SORT_DIRECTION.ASC",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTransactionApiUrl",
                    "args": [
                        {
                            "name": "chainId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSupported networks {@link BlockExplorerApiUrl}`. <br>\nYou can add your custom API url when init library {@link AucNetworkOption.blockExplorerApiUrl}.\n",
                    "description": "<p>Supported networks {@link BlockExplorerApiUrl}`. <br>\nYou can add your custom API url when init library {@link AucNetworkOption.blockExplorerApiUrl}.</p>\n",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1430,
                                "end": 1437,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "chainId"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1424,
                                "end": 1429,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>0x-prefixed hexadecimal string.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1478,
                                "end": 1485,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>API url buy chainId. <br>\nSupported networks {@link BlockExplorerApiUrl}`. <br>\nYou can add your custom API url when init library {@link AucNetworkOption.blockExplorerApiUrl}.</p>\n"
                        }
                    ]
                },
                {
                    "name": "markAsViewed",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "refreshTransactions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "saveTransaction",
                    "args": [
                        {
                            "name": "chainId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "hash",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "status",
                            "type": "AUC_TRANSACTION_STATUS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "AUC_TRANSACTION_STATUS.PENDING"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "chainId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "hash",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "status",
                            "type": "AUC_TRANSACTION_STATUS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "AUC_TRANSACTION_STATUS.PENDING",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription, timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AUC_SORT_DIRECTION, AUC_TRANSACTION_STATUS } from '../../../enums';\nimport {\n  AucEthereum,\n  AucEtherscanTransaction,\n  AucEtherscanTransactionLocalStorage,\n  AucEtherscanTransactionResponse\n} from '../../../interfaces';\n\nimport { AucBlockExplorerApiUrl, AucBlockExplorerUrls } from '../../../constants';\nimport { AucSortDirection } from '../../../types';\nimport { AucWalletConnectService } from '../../../services';\n\n\nconst AUC_ETHERSCAN_TRANSACTIONS = 'AUC_ETHERSCAN_TRANSACTIONS';\nconst AUC_ETHERSCAN_INTERVAL = 10000;\n\n\n@Injectable()\nexport class AucTransactionService {\n  private _transactionsChanged$: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n  private _transactions: AucEtherscanTransactionLocalStorage[] = [];\n  private _dispose: Subscription;\n\n  public get transactionsChanged$(): Observable<AucEtherscanTransactionLocalStorage[]> {\n    return this._transactionsChanged$.asObservable();\n  }\n\n  constructor(\n    private _http: HttpClient,\n    private _walletConnectService: AucWalletConnectService\n  ) {\n    this._transactions = JSON.parse(localStorage.getItem(this._getLocalStorageKey())) || [];\n    this._transactionsChanged$.next(this._transactions);\n  }\n\n  /**\n   * @param chainId - 0x-prefixed hexadecimal string.\n   * @returns API url buy chainId. <br>\n   * Supported networks {@link BlockExplorerApiUrl}`. <br>\n   * You can add your custom API url when init library {@link AucNetworkOption.blockExplorerApiUrl}.\n   */\n  static getTransactionApiUrl(chainId: string): string {\n    const url: string = AucBlockExplorerApiUrl[chainId];\n\n    if (!url) {\n      throw new Error(`Can't find transaction API url. Make sure that you add blockExplorerApiUrl when init library`);\n    }\n\n    return url;\n  }\n\n  public refreshTransactions(): void {\n    this.dispose();\n\n    this._transactions = JSON.parse(localStorage.getItem(this._getLocalStorageKey())) || [];\n\n    this._refreshTransactions();\n\n    this._dispose = timer(0, AUC_ETHERSCAN_INTERVAL)\n      .subscribe(() => this._pingTransactionsStatus());\n  }\n\n  public dispose(): void {\n    if (this._dispose && !this._dispose.closed) {\n      this._dispose.unsubscribe();\n    }\n  }\n\n  public saveTransaction(chainId: string,\n                         name: string,\n                         hash: string,\n                         status: AUC_TRANSACTION_STATUS = AUC_TRANSACTION_STATUS.PENDING\n  ): void {\n\n    this._removeFromTransactions(hash);\n\n    this._transactions = [\n      {\n        name,\n        hash,\n        status,\n        viewed: false,\n        explorerUrl: undefined\n      },\n      ...this._transactions,\n    ];\n\n    if (chainId) {\n      this._transactions.forEach((tx) => {\n        tx.explorerUrl = `${AucBlockExplorerUrls[chainId]}/tx/${tx.hash}`;\n      });\n    }\n\n    if (this._transactions.length === 100) {\n      this._transactions = this._transactions.slice(0, 100);\n    }\n\n    this._refreshTransactions();\n  }\n\n  public markAsViewed(): void {\n    this._transactions = this._transactions\n      .map((tx: AucEtherscanTransactionLocalStorage) => ({ ...tx, viewed: true }));\n\n    this._refreshTransactions();\n  }\n\n  public clearTransactions(): void {\n    this._transactions = [];\n\n    this._refreshTransactions();\n  }\n\n  /**\n   * Method gor getting remote transactions from blockchain.\n   * @param address - wallet address.\n   * @param chainId - 0x-prefixed hexadecimal string.\n   * @param page - number of the page. Uses for pagination.\n   * @param offset - Uses for pagination.\n   */\n  public getRemoteTransactions(address: string,\n                               chainId: string,\n                               page: number = 1,\n                               offset: number = 100,\n                               sortDirection: AucSortDirection = AUC_SORT_DIRECTION.ASC\n  ): Observable<AucEtherscanTransactionResponse> {\n    try {\n      const apiUrl: string = AucTransactionService.getTransactionApiUrl(chainId);\n\n      if (!apiUrl) {\n        return of(null);\n      }\n\n      let params: HttpParams = new HttpParams();\n      params = params.set('module', 'account');\n      params = params.set('action', 'txlist');\n      params = params.set('address', address);\n      params = params.set('startblock', 0);\n      params = params.set('endblock', 99999999);\n      params = params.set('sort', sortDirection);\n      params = params.set('page', page);\n      params = params.set('offset', offset);\n\n      return this._http.get<AucEtherscanTransactionResponse>(`${apiUrl}`, { params })\n        .pipe(\n          map((data: AucEtherscanTransactionResponse) => {\n            if (data.result && Array.isArray(data.result)) {\n              data.result.forEach((tx: AucEtherscanTransaction) => {\n                tx.explorerUrl = `${AucBlockExplorerUrls[chainId]}/tx/${tx.hash}`;\n              });\n            }\n\n            return data;\n          })\n        );\n    } catch (e) {\n      console.error(e);\n\n      return of(null);\n    }\n  }\n\n  private _pingTransactionsStatus(): void {\n    const eth = this._walletConnectService.web3.eth;\n\n    this._transactions.forEach(async (tx) => {\n      try {\n        const transactionReceipt = await eth.getTransactionReceipt(tx.hash);\n\n        if (transactionReceipt) {\n          tx.status = Boolean(transactionReceipt.status) ? AUC_TRANSACTION_STATUS.SUCCESS : AUC_TRANSACTION_STATUS.FAIL;\n        } else if (!(await eth.getTransaction(tx.hash))) {\n          this._removeFromTransactions(tx.hash);\n        }\n      } catch (error) {\n        this._removeFromTransactions(tx.hash);\n      }\n    });\n\n    this._refreshTransactions();\n  }\n\n  private _getLocalStorageKey(): string {\n    const { chainId, selectedAddress } = (window as any).ethereum as AucEthereum;\n\n    return `${AUC_ETHERSCAN_TRANSACTIONS}[${selectedAddress}, ${chainId}]`.toUpperCase();\n  }\n\n  private _refreshTransactions(): void {\n    localStorage.setItem(this._getLocalStorageKey(), JSON.stringify(this._transactions));\n\n    this._transactionsChanged$.next(this._transactions.slice());\n  }\n\n  private _removeFromTransactions(hash: string): void {\n    this._transactions = this._transactions.filter((tx) => tx.hash !== hash);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "_http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "transactionsChanged$": {
                    "name": "transactionsChanged$",
                    "getSignature": {
                        "name": "transactionsChanged$",
                        "type": "",
                        "returnType": "Observable<AucEtherscanTransactionLocalStorage[]>",
                        "line": 29
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "AucWalletConnectService",
            "id": "injectable-AucWalletConnectService-18cb78125aac41fcc96bd2ea4451b29d8235bac0f219028e5670bb7bca24444e06c86e426fd1f43e61e86223c77e823a9b425cdfbb3379b2e25fc0a919f47091",
            "file": "projects/applicature/components/src/lib/services/wallet-connect/wallet-connect.service.ts",
            "properties": [
                {
                    "name": "_accountsChanged$",
                    "defaultValue": "new BehaviorSubject<string[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<string[]>",
                    "optional": false,
                    "description": "",
                    "line": 224,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_balanceChanged$",
                    "defaultValue": "new BehaviorSubject<string>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<string | null>",
                    "optional": false,
                    "description": "",
                    "line": 227,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_cantFindAddingNetwork$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 229,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_chainChanged$",
                    "defaultValue": "new BehaviorSubject<string>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<string | null>",
                    "optional": false,
                    "description": "",
                    "line": 225,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_connectChanged$",
                    "defaultValue": "new Subject<AucConnectInfo>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<AucConnectInfo>",
                    "optional": false,
                    "description": "",
                    "line": 228,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_disconnectChanged$",
                    "defaultValue": "new Subject<AucProviderRpcError>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<AucProviderRpcError>",
                    "optional": false,
                    "description": "",
                    "line": 230,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_messageChanged$",
                    "defaultValue": "new Subject<AucProviderMessage>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<AucProviderMessage>",
                    "optional": false,
                    "description": "",
                    "line": 231,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_networkChanged$",
                    "defaultValue": "new BehaviorSubject<number | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<number | null>",
                    "optional": false,
                    "description": "",
                    "line": 226,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_onboard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "API",
                    "optional": false,
                    "description": "",
                    "line": 222,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_selectedNetwork$",
                    "defaultValue": "new BehaviorSubject<AucNetworkOption>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<AucNetworkOption>",
                    "optional": false,
                    "description": "",
                    "line": 232,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_supportedNetworks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucNetworkOption[]",
                    "optional": false,
                    "description": "",
                    "line": 233,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_web3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Web3",
                    "optional": false,
                    "description": "",
                    "line": 223,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "_getSubscriptions",
                    "args": [
                        {
                            "name": "observer",
                            "type": "Subscriber<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Subscriptions",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 373,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "observer",
                            "type": "Subscriber<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_handleEthEvents",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 420,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_initWeb3",
                    "args": [
                        {
                            "name": "observer",
                            "type": "Subscriber<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "selectedWallet",
                            "type": "Wallet",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 399,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "observer",
                            "type": "Subscriber<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "selectedWallet",
                            "type": "Wallet",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_request",
                    "args": [
                        {
                            "name": "method",
                            "type": "AUC_ETH_METHODS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "[] | Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 448,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "method",
                            "type": "AUC_ETH_METHODS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "[] | Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addEthereumChain",
                    "args": [
                        {
                            "name": "chainParams",
                            "type": "Partial<AucEthChainParams>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 360,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n\nThis method is used for adding new network to Metamask by {@link chainParams}.\n\nThis Library already have {@link chainParams} for the next chainIds {@link AUC_CHAIN_ID}.\nYou can get it uses methood {@link aucGetChainParams}\n",
                    "description": "<p>This method is used for adding new network to Metamask by {@link chainParams}.</p>\n<p>This Library already have {@link chainParams} for the next chainIds {@link AUC_CHAIN_ID}.\nYou can get it uses methood {@link aucGetChainParams}</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 10942,
                                "end": 10953,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "chainParams"
                            },
                            "type": "Partial<AucEthChainParams>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 10936,
                                "end": 10941,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Uses for adding new network to Metamask.\nThis Library already have {@link chainParams} for the next chainIds {@link AUC_CHAIN_ID}.\nYou can get it uses methood {@link aucGetChainParams}</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "connectWallet",
                    "args": [
                        {
                            "name": "isDisconnect",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<AucConnectionState>",
                    "typeParameters": [],
                    "line": 288,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisconnect",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "disconnectWallet",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 313,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initialize",
                    "args": [
                        {
                            "name": "config",
                            "type": "Omit<Initialization | \"subscriptions\" | \"darkMode\" | \"hideBranding\">",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "supportedNetworks",
                            "type": "AucNetworkOption[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 244,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThis library uses {@link Onboard} for initialization wallet connection.\nMore information about config {@link https://www.npmjs.com/package/bnc-onboard}.\n",
                    "description": "<p>This library uses {@link Onboard} for initialization wallet connection.\nMore information about config {@link <a href=\"https://www.npmjs.com/package/bnc-onboard%7D\">https://www.npmjs.com/package/bnc-onboard}</a>.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7358,
                                "end": 7364,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "config"
                            },
                            "type": "Omit<Initialization | \"subscriptions\" | \"darkMode\" | \"hideBranding\">",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7352,
                                "end": 7357,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Initialization Config for wallet connection.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 7424,
                                "end": 7441,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "supportedNetworks"
                            },
                            "type": "AucNetworkOption[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7418,
                                "end": 7423,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>List of the supported networks.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "switchEthereumChain",
                    "args": [
                        {
                            "name": "chainId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "chainParams",
                            "type": "AucEthChainParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 334,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThis method is used for switching Metamask network by {@link chainId}. <br>\nIf Metamask doesn't have this {@link chainId} it can be added by parameter {@link chainParams}. <br>\n\nIf you don't have chainId, you can use helper {@link aucConvertChainIdToHex} to generate it.\n\nUses for adding new network to Metamask if it doesn't include network by {@link chainId}. <br>\nThis Library already have {@link chainParams} for the next chainIds {@link AUC_CHAIN_ID}. <br>\nYou can use your own specific params.\n",
                    "description": "<p>This method is used for switching Metamask network by {@link chainId}. <br>\nIf Metamask doesn&#39;t have this {@link chainId} it can be added by parameter {@link chainParams}. <br></p>\n<p>If you don&#39;t have chainId, you can use helper {@link aucConvertChainIdToHex} to generate it.</p>\n<p>Uses for adding new network to Metamask if it doesn&#39;t include network by {@link chainId}. <br>\nThis Library already have {@link chainParams} for the next chainIds {@link AUC_CHAIN_ID}. <br>\nYou can use your own specific params.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 9849,
                                "end": 9856,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "chainId"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 9843,
                                "end": 9848,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>0x-prefixed hexadecimal string. <br>\nIf you don&#39;t have chainId, you can use helper {@link aucConvertChainIdToHex} to generate it.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 10011,
                                "end": 10022,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "chainParams"
                            },
                            "type": "AucEthChainParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 10005,
                                "end": 10010,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>An optional parameter. <br>\nUses for adding new network to Metamask if it doesn&#39;t include network by {@link chainId}. <br>\nThis Library already have {@link chainParams} for the next chainIds {@link AUC_CHAIN_ID}. <br>\nYou can use your own specific params.</li>\n</ul>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject, catchError, from, map, Observable, of, Subject, Subscriber, switchMap, tap } from 'rxjs';\n\nimport Web3 from 'web3';\nimport Onboard from 'bnc-onboard';\nimport { API, Initialization, Subscriptions, Wallet } from 'bnc-onboard/dist/src/interfaces';\n\nimport { AUC_ETH_EVENTS, AUC_ETH_METHODS, AUC_METAMASK_CODES } from '../../enums';\nimport {\n  AucEthChainParams,\n  AucNetworkOption,\n  AucConnectInfo,\n  AucEthereum,\n  AucProviderMessage,\n  AucProviderRpcError\n} from '../../interfaces';\nimport { AucConnectionState } from './interfaces';\nimport { aucConvertChainIdToHex, aucGetChainParams } from '../../helpers';\nimport { AucBlockExplorerApiUrl, AucBlockExplorerUrls } from '../../constants';\n\nconst AUC_CONNECTED_WALLET_NAME = 'AUC_CONNECTED_WALLET_NAME';\n\n\n@Injectable()\nexport class AucWalletConnectService {\n  /**\n   * {@link web3} It's getter.\n   * @returns current {@link Web3} instance.\n   */\n  public get web3(): Web3 {\n    return this._web3;\n  }\n\n  /**\n   * {@link onboard} It's getter. <br>\n   * This library uses {@link Onboard} for connecting wallet.\n   * @returns current {@link Onboard} instance.\n   */\n  public get onboard(): API {\n    return this._onboard;\n  };\n\n  /**\n   * {@link connectionState} It's getter.\n   * @returns current connection state.\n   */\n  public get connectionState(): AucConnectionState {\n    if (!this._onboard) {\n      return { connected: false };\n    }\n\n    const state = this._onboard.getState();\n\n    return {\n      connected: !!state.address,\n      state\n    }\n  }\n\n  /**\n   * {@link accountsChanged$} It's getter. <br>\n   * Emits when account was changed. <br>\n   * You can subscribe on it.\n   */\n  public get accountsChanged$(): Observable<string[]> {\n    return this._accountsChanged$.asObservable();\n  }\n\n  /**\n   * {@link chainChanged$} It's getter. <br>\n   * Emits when chain was changed. <br>\n   * You can subscribe on it.\n   */\n  public get chainChanged$(): Observable<string | null> {\n    return this._chainChanged$.asObservable();\n  }\n\n  /**\n   * {@link connectChanged$} It's getter. <br>\n   * Emits when connect event. Emits from Metamask {@link AUC_ETH_EVENTS.CONNECT} event. <br>\n   * You can subscribe on it.\n   */\n  public get connectChanged$(): Observable<AucConnectInfo> {\n    return this._connectChanged$.asObservable();\n  }\n\n  /**\n   * {@link disconnectChanged$} It's getter. <br>\n   * Emits when disconnect event. Emits from Metamask {@link AUC_ETH_EVENTS.DISCONNECT} event. <br>\n   * You can subscribe on it.\n   */\n  public get disconnectChanged$(): Observable<AucProviderRpcError> {\n    return this._disconnectChanged$.asObservable();\n  }\n\n  /**\n   * {@link messageChanged$} It's getter. <br>\n   * Emits when message events. Emits from Metamask {@link AUC_ETH_EVENTS.MESSAGE} event. <br>\n   * You can subscribe on it.\n   */\n  public get messageChanged$(): Observable<AucProviderMessage> {\n    return this._messageChanged$.asObservable();\n  }\n\n  /**\n   * {@link networkChanged$} It's getter. <br>\n   * Emits when network was changed. <br>\n   * You can subscribe on it.\n   */\n  public get networkChanged$(): Observable<number | null> {\n    return this._networkChanged$.asObservable();\n  }\n\n  /**\n   * {@link balanceChanged$} It's getter. <br>\n   * Emits when balance was changed. <br>\n   * You can subscribe on it.\n   */\n  public get balanceChanged$(): Observable<string | null> {\n    return this._balanceChanged$.asObservable();\n  }\n\n  /**\n   * {@link selectedNetwork$} It's getter. <br>\n   * Emits when selected network. <br>\n   * You can subscribe on it.\n   */\n  public get selectedNetwork$(): Observable<AucNetworkOption> {\n    return this._selectedNetwork$.asObservable();\n  }\n\n  /**\n   * {@link supportedNetworks} It's getter. <br>\n   * @returns Supported networks list.\n   */\n  public get supportedNetworks(): AucNetworkOption[] {\n    if (!this._supportedNetworks || !this._supportedNetworks.length) {\n      console.error(`You don't have any supported networks. Pls set it when initialize library`);\n    }\n\n    return this._supportedNetworks ?? [];\n  }\n\n  /**\n   * {@link supportedNetworks} It's setter. <br>\n   * Sets supported networks list. <br>\n   * You can set it in initialize method or set it later;\n   */\n  public set supportedNetworks(options: AucNetworkOption[]) {\n    this._supportedNetworks = options ?? [];\n    this._supportedNetworks.forEach((item: AucNetworkOption) => {\n      if (!item.chainId) {\n        return;\n      }\n\n      if (item.blockExplorerApiUrl) {\n        AucBlockExplorerApiUrl[item.chainId] = item.blockExplorerApiUrl;\n      }\n\n      if (!item.blockExplorerUrl) {\n        return;\n      }\n\n      AucBlockExplorerUrls[item.chainId] = [\n        ...new Set([\n          item.blockExplorerUrl,\n          ...(AucBlockExplorerUrls[item.chainId] || [])\n        ])\n      ];\n    });\n\n    this.selectedNetwork = this._chainChanged$.value;\n  }\n\n  /**\n   * {@link cantFindAddingNetwork$} It's getter. <br>\n   * Emits when adding new network and config doesn't exist. <br>\n   * You can subscribe on it and show some message to user.\n   */\n  public get cantFindAddingNetwork$(): Observable<void> {\n    return this._cantFindAddingNetwork$.asObservable();\n  }\n\n  /**\n   * {@link chainId} - Sets selected chainId and selected network.\n   * @param chainId - 0x-prefixed hexadecimal string.\n   */\n  private set chainId(chainId: string) {\n    this._chainChanged$.next(chainId);\n    this.selectedNetwork = chainId;\n  }\n\n  /**\n   * {@link selectedNetwork} Sets selected network by chainId.\n   * @param chainId - 0x-prefixed hexadecimal string.\n   */\n  private set selectedNetwork(chainId: string) {\n    if (!chainId) {\n      this._selectedNetwork$.next(null);\n    }\n\n    let isSameSelected: boolean = false;\n\n    this._supportedNetworks = this.supportedNetworks\n      .map((option: AucNetworkOption) => {\n        if (option.isActive && option.chainId === chainId) {\n          isSameSelected = true;\n        }\n\n        return { ...option, isActive: option.chainId === chainId };\n      });\n\n    if (isSameSelected) {\n      return;\n    }\n\n    const active = this.supportedNetworks.find((option: AucNetworkOption) => option.isActive);\n\n    this._selectedNetwork$.next(active);\n  }\n\n  private _onboard: API;\n  private _web3: Web3;\n  private _accountsChanged$: BehaviorSubject<string[]> = new BehaviorSubject<string[]>([]);\n  private _chainChanged$: BehaviorSubject<string | null> = new BehaviorSubject<string>(null);\n  private _networkChanged$: BehaviorSubject<number | null> = new BehaviorSubject<number | null>(null);\n  private _balanceChanged$: BehaviorSubject<string | null> = new BehaviorSubject<string>(null);\n  private _connectChanged$: Subject<AucConnectInfo> = new Subject<AucConnectInfo>();\n  private _cantFindAddingNetwork$: Subject<void> = new Subject<void>();\n  private _disconnectChanged$: Subject<AucProviderRpcError> = new Subject<AucProviderRpcError>();\n  private _messageChanged$: Subject<AucProviderMessage> = new Subject<AucProviderMessage>();\n  private _selectedNetwork$: Subject<AucNetworkOption> = new BehaviorSubject<AucNetworkOption>(null);\n  private _supportedNetworks: AucNetworkOption[];\n\n  constructor() {\n  }\n\n  /**\n   * This library uses {@link Onboard} for initialization wallet connection.\n   * More information about config {@link https://www.npmjs.com/package/bnc-onboard}.\n   * @param config - Initialization Config for wallet connection.\n   * @param supportedNetworks - List of the supported networks.\n   */\n  public initialize(config: Omit<Initialization, 'subscriptions' | 'darkMode' | 'hideBranding'>,\n                    supportedNetworks: AucNetworkOption[]\n  ): Observable<void> {\n    if (this._onboard) {\n      console.error('bnc-onboard already initialized');\n\n      return of(null);\n    }\n\n    if (supportedNetworks && Array.isArray(supportedNetworks)) {\n      this.supportedNetworks = supportedNetworks;\n    } else {\n      console.error('Invalid supported Networks. Please set supportedNetworks as AucNetworkOption[]');\n    }\n\n    return new Observable<void>((observer: Subscriber<void>) => {\n      this._onboard = Onboard({\n        ...config,\n        walletSelect: {\n          ...config.walletSelect,\n          heading: 'Connect a wallet',\n          description: '',\n        },\n        subscriptions: this._getSubscriptions<void>(observer),\n        hideBranding: true,\n      });\n\n      const previouslySelectedWallet = localStorage.getItem(AUC_CONNECTED_WALLET_NAME);\n\n      if (previouslySelectedWallet !== null) {\n        this._onboard.walletSelect(previouslySelectedWallet)\n          .then(() => {\n            observer.next();\n            observer.complete();\n          })\n          .catch(error => observer.error(error));\n\n        return;\n      }\n\n      this._initWeb3(observer);\n    });\n  }\n\n  public connectWallet(isDisconnect: boolean = false): Observable<AucConnectionState> {\n    if (!this._onboard) {\n      return of({ connected: false })\n        .pipe(\n          tap(() => new Error('initialize method must be called'))\n        );\n    }\n\n    let connection$: Observable<void> = of(null);\n\n    if (this.connectionState.connected) {\n      if (!isDisconnect) {\n        return of(this.connectionState);\n      }\n\n      connection$ = this.disconnectWallet()\n    }\n\n    return connection$\n      .pipe(\n        switchMap(() => from(this._onboard.walletSelect())),\n        map(() => this.connectionState)\n      );\n  }\n\n  public disconnectWallet(): Observable<void> {\n    return of(this._onboard ? this._onboard.walletReset() : null)\n      .pipe(\n        tap(() => {\n          localStorage.removeItem(AUC_CONNECTED_WALLET_NAME);\n        })\n      )\n  }\n\n  /**\n   * This method is used for switching Metamask network by {@link chainId}. <br>\n   * If Metamask doesn't have this {@link chainId} it can be added by parameter {@link chainParams}. <br>\n   *\n   * @param chainId - 0x-prefixed hexadecimal string. <br>\n   * If you don't have chainId, you can use helper {@link aucConvertChainIdToHex} to generate it.\n   *\n   * @param chainParams - An optional parameter. <br>\n   * Uses for adding new network to Metamask if it doesn't include network by {@link chainId}. <br>\n   * This Library already have {@link chainParams} for the next chainIds {@link AUC_CHAIN_ID}. <br>\n   * You can use your own specific params.\n   */\n  public switchEthereumChain(chainId: string, chainParams?: AucEthChainParams): Observable<boolean> {\n    if (!chainId) {\n      return of(false);\n    }\n\n    return this._request<void>(AUC_ETH_METHODS.SWITCH_ETHEREUM_CHAIN, [ { chainId } ])\n      .pipe(\n        map(() => true),\n        catchError(err => {\n          if (err?.code === AUC_METAMASK_CODES.UNRECOGNIZED_CHAIN_ID) {\n            return this.addEthereumChain(chainParams ?? aucGetChainParams(chainId))\n          }\n\n          return of(false);\n        })\n      );\n  }\n\n  /**\n   *\n   * This method is used for adding new network to Metamask by {@link chainParams}.\n   *\n   * @param chainParams - Uses for adding new network to Metamask.\n   * This Library already have {@link chainParams} for the next chainIds {@link AUC_CHAIN_ID}.\n   * You can get it uses methood {@link aucGetChainParams}\n   */\n  public addEthereumChain(chainParams: Partial<AucEthChainParams>): Observable<boolean> {\n    if (!chainParams) {\n      this._cantFindAddingNetwork$.next();\n      return of(false);\n    }\n\n    return this._request<void>(AUC_ETH_METHODS.ADD_ETHEREUM_CHAIN, [ chainParams ])\n      .pipe(\n        map(() => true),\n        catchError(() => of(false))\n      );\n  }\n\n  private _getSubscriptions<T = any>(observer: Subscriber<T>): Subscriptions {\n    let selectedWallet: Wallet;\n\n    return {\n      address: (address: string): void => {\n        this._accountsChanged$.next(address ? [ address ] : []);\n\n        this._initWeb3<T>(observer, selectedWallet);\n      },\n      network: (networkId: number): void => {\n        this._onboard.config({ networkId });\n\n        this.chainId = aucConvertChainIdToHex(networkId)\n        this._networkChanged$.next(networkId);\n      },\n      wallet: (wallet: Wallet): void => {\n        selectedWallet = wallet;\n\n        this._initWeb3<T>(observer, selectedWallet);\n      },\n      balance: (balance: string): void => {\n        this._balanceChanged$.next(balance);\n      },\n    };\n  }\n\n  private _initWeb3<T = any>(observer: Subscriber<T>, selectedWallet?: Wallet): void {\n    try {\n      const provider = Object.assign({}, selectedWallet?.provider || {});\n\n      if (!provider?.selectedAddress || !selectedWallet?.name) {\n        this._web3 = new Web3();\n      } else {\n        localStorage.setItem(AUC_CONNECTED_WALLET_NAME, selectedWallet.name);\n\n        this._web3 = new Web3(selectedWallet.provider);\n      }\n\n      this._handleEthEvents();\n\n      observer.next();\n      observer.complete();\n    } catch (e) {\n      observer.error(e);\n    }\n  }\n\n  private _handleEthEvents(): void {\n    const eth = (window as any).ethereum as AucEthereum;\n\n    if (!eth) {\n      return;\n    }\n\n    eth.on(AUC_ETH_EVENTS.CHAIN_CHANGED, (chainId: string) => {\n      /**\n       *  It's recommended to reload the page on chain changes, unless you have good reason not to. <br>\n       *  You can use window.location.reload()\n       */\n      this.chainId = chainId;\n    });\n\n    eth.on(AUC_ETH_EVENTS.CONNECT, (connectInfo: AucConnectInfo) => {\n      this._connectChanged$.next(connectInfo);\n    });\n\n    eth.on(AUC_ETH_EVENTS.DISCONNECT, (error: AucProviderRpcError) => {\n      this._disconnectChanged$.next(error);\n    });\n\n    eth.on(AUC_ETH_EVENTS.MESSAGE, (message: AucProviderMessage) => {\n      this._messageChanged$.next(message);\n    });\n  }\n\n  private _request<T = any>(\n    method: AUC_ETH_METHODS,\n    params?: unknown[] | Record<string, unknown>,\n  ): Observable<T> {\n    const eth = (window as any).ethereum as AucEthereum;\n\n    return from(eth.request({ method, params }));\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 233
            },
            "accessors": {
                "web3": {
                    "name": "web3",
                    "getSignature": {
                        "name": "web3",
                        "type": "",
                        "returnType": "Web3",
                        "line": 30,
                        "rawdescription": "\n\n{@link web3} It's getter.\n",
                        "description": "<p>{@link web3} It&#39;s getter.</p>\n",
                        "jsdoctags": [
                            {
                                "pos": 920,
                                "end": 963,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 339,
                                "tagName": {
                                    "pos": 921,
                                    "end": 928,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>current {@link Web3} instance.</p>\n"
                            }
                        ]
                    }
                },
                "onboard": {
                    "name": "onboard",
                    "getSignature": {
                        "name": "onboard",
                        "type": "",
                        "returnType": "API",
                        "line": 39,
                        "rawdescription": "\n\n{@link onboard} It's getter. <br>\nThis library uses {@link Onboard} for connecting wallet.\n",
                        "description": "<p>{@link onboard} It&#39;s getter. <br>\nThis library uses {@link Onboard} for connecting wallet.</p>\n",
                        "jsdoctags": [
                            {
                                "pos": 1134,
                                "end": 1180,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 339,
                                "tagName": {
                                    "pos": 1135,
                                    "end": 1142,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>current {@link Onboard} instance.</p>\n"
                            }
                        ]
                    }
                },
                "connectionState": {
                    "name": "connectionState",
                    "getSignature": {
                        "name": "connectionState",
                        "type": "",
                        "returnType": "AucConnectionState",
                        "line": 47,
                        "rawdescription": "\n\n{@link connectionState} It's getter.\n",
                        "description": "<p>{@link connectionState} It&#39;s getter.</p>\n",
                        "jsdoctags": [
                            {
                                "pos": 1298,
                                "end": 1336,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 339,
                                "tagName": {
                                    "pos": 1299,
                                    "end": 1306,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>current connection state.</p>\n"
                            }
                        ]
                    }
                },
                "accountsChanged$": {
                    "name": "accountsChanged$",
                    "getSignature": {
                        "name": "accountsChanged$",
                        "type": "",
                        "returnType": "Observable<string[]>",
                        "line": 65,
                        "rawdescription": "\n\n{@link accountsChanged$} It's getter. <br>\nEmits when account was changed. <br>\nYou can subscribe on it.\n",
                        "description": "<p>{@link accountsChanged$} It&#39;s getter. <br>\nEmits when account was changed. <br>\nYou can subscribe on it.</p>\n"
                    }
                },
                "chainChanged$": {
                    "name": "chainChanged$",
                    "getSignature": {
                        "name": "chainChanged$",
                        "type": "",
                        "returnType": "Observable<string | null>",
                        "line": 74,
                        "rawdescription": "\n\n{@link chainChanged$} It's getter. <br>\nEmits when chain was changed. <br>\nYou can subscribe on it.\n",
                        "description": "<p>{@link chainChanged$} It&#39;s getter. <br>\nEmits when chain was changed. <br>\nYou can subscribe on it.</p>\n"
                    }
                },
                "connectChanged$": {
                    "name": "connectChanged$",
                    "getSignature": {
                        "name": "connectChanged$",
                        "type": "",
                        "returnType": "Observable<AucConnectInfo>",
                        "line": 83,
                        "rawdescription": "\n\n{@link connectChanged$} It's getter. <br>\nEmits when connect event. Emits from Metamask {@link AUC_ETH_EVENTS.CONNECT} event. <br>\nYou can subscribe on it.\n",
                        "description": "<p>{@link connectChanged$} It&#39;s getter. <br>\nEmits when connect event. Emits from Metamask {@link AUC_ETH_EVENTS.CONNECT} event. <br>\nYou can subscribe on it.</p>\n"
                    }
                },
                "disconnectChanged$": {
                    "name": "disconnectChanged$",
                    "getSignature": {
                        "name": "disconnectChanged$",
                        "type": "",
                        "returnType": "Observable<AucProviderRpcError>",
                        "line": 92,
                        "rawdescription": "\n\n{@link disconnectChanged$} It's getter. <br>\nEmits when disconnect event. Emits from Metamask {@link AUC_ETH_EVENTS.DISCONNECT} event. <br>\nYou can subscribe on it.\n",
                        "description": "<p>{@link disconnectChanged$} It&#39;s getter. <br>\nEmits when disconnect event. Emits from Metamask {@link AUC_ETH_EVENTS.DISCONNECT} event. <br>\nYou can subscribe on it.</p>\n"
                    }
                },
                "messageChanged$": {
                    "name": "messageChanged$",
                    "getSignature": {
                        "name": "messageChanged$",
                        "type": "",
                        "returnType": "Observable<AucProviderMessage>",
                        "line": 101,
                        "rawdescription": "\n\n{@link messageChanged$} It's getter. <br>\nEmits when message events. Emits from Metamask {@link AUC_ETH_EVENTS.MESSAGE} event. <br>\nYou can subscribe on it.\n",
                        "description": "<p>{@link messageChanged$} It&#39;s getter. <br>\nEmits when message events. Emits from Metamask {@link AUC_ETH_EVENTS.MESSAGE} event. <br>\nYou can subscribe on it.</p>\n"
                    }
                },
                "networkChanged$": {
                    "name": "networkChanged$",
                    "getSignature": {
                        "name": "networkChanged$",
                        "type": "",
                        "returnType": "Observable<number | null>",
                        "line": 110,
                        "rawdescription": "\n\n{@link networkChanged$} It's getter. <br>\nEmits when network was changed. <br>\nYou can subscribe on it.\n",
                        "description": "<p>{@link networkChanged$} It&#39;s getter. <br>\nEmits when network was changed. <br>\nYou can subscribe on it.</p>\n"
                    }
                },
                "balanceChanged$": {
                    "name": "balanceChanged$",
                    "getSignature": {
                        "name": "balanceChanged$",
                        "type": "",
                        "returnType": "Observable<string | null>",
                        "line": 119,
                        "rawdescription": "\n\n{@link balanceChanged$} It's getter. <br>\nEmits when balance was changed. <br>\nYou can subscribe on it.\n",
                        "description": "<p>{@link balanceChanged$} It&#39;s getter. <br>\nEmits when balance was changed. <br>\nYou can subscribe on it.</p>\n"
                    }
                },
                "selectedNetwork$": {
                    "name": "selectedNetwork$",
                    "getSignature": {
                        "name": "selectedNetwork$",
                        "type": "",
                        "returnType": "Observable<AucNetworkOption>",
                        "line": 128,
                        "rawdescription": "\n\n{@link selectedNetwork$} It's getter. <br>\nEmits when selected network. <br>\nYou can subscribe on it.\n",
                        "description": "<p>{@link selectedNetwork$} It&#39;s getter. <br>\nEmits when selected network. <br>\nYou can subscribe on it.</p>\n"
                    }
                },
                "supportedNetworks": {
                    "name": "supportedNetworks",
                    "setSignature": {
                        "name": "supportedNetworks",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "options",
                                "type": "AucNetworkOption[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 149,
                        "rawdescription": "\n\n{@link supportedNetworks} It's setter. <br>\nSets supported networks list. <br>\nYou can set it in initialize method or set it later;\n",
                        "description": "<p>{@link supportedNetworks} It&#39;s setter. <br>\nSets supported networks list. <br>\nYou can set it in initialize method or set it later;</p>\n",
                        "jsdoctags": [
                            {
                                "name": "options",
                                "type": "AucNetworkOption[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "supportedNetworks",
                        "type": "[]",
                        "returnType": "AucNetworkOption[]",
                        "line": 136,
                        "rawdescription": "\n\n{@link supportedNetworks} It's getter. <br>\n",
                        "description": "<p>{@link supportedNetworks} It&#39;s getter. <br></p>\n",
                        "jsdoctags": [
                            {
                                "pos": 3772,
                                "end": 3809,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 339,
                                "tagName": {
                                    "pos": 3773,
                                    "end": 3780,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>Supported networks list.</p>\n"
                            }
                        ]
                    }
                },
                "cantFindAddingNetwork$": {
                    "name": "cantFindAddingNetwork$",
                    "getSignature": {
                        "name": "cantFindAddingNetwork$",
                        "type": "",
                        "returnType": "Observable<void>",
                        "line": 180,
                        "rawdescription": "\n\n{@link cantFindAddingNetwork$} It's getter. <br>\nEmits when adding new network and config doesn't exist. <br>\nYou can subscribe on it and show some message to user.\n",
                        "description": "<p>{@link cantFindAddingNetwork$} It&#39;s getter. <br>\nEmits when adding new network and config doesn&#39;t exist. <br>\nYou can subscribe on it and show some message to user.</p>\n"
                    }
                },
                "chainId": {
                    "name": "chainId",
                    "setSignature": {
                        "name": "chainId",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "chainId",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 188,
                        "rawdescription": "\n\n{@link chainId} - Sets selected chainId and selected network.\n",
                        "description": "<p>{@link chainId} - Sets selected chainId and selected network.</p>\n",
                        "jsdoctags": [
                            {
                                "name": {
                                    "pos": 5294,
                                    "end": 5301,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "chainId"
                                },
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "pos": 5288,
                                    "end": 5293,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "param"
                                },
                                "comment": "<ul>\n<li>0x-prefixed hexadecimal string.</li>\n</ul>\n"
                            }
                        ]
                    }
                },
                "selectedNetwork": {
                    "name": "selectedNetwork",
                    "setSignature": {
                        "name": "selectedNetwork",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "chainId",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 197,
                        "rawdescription": "\n\n{@link selectedNetwork} Sets selected network by chainId.\n",
                        "description": "<p>{@link selectedNetwork} Sets selected network by chainId.</p>\n",
                        "jsdoctags": [
                            {
                                "name": {
                                    "pos": 5544,
                                    "end": 5551,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "chainId"
                                },
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "pos": 5538,
                                    "end": 5543,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "param"
                                },
                                "comment": "<ul>\n<li>0x-prefixed hexadecimal string.</li>\n</ul>\n"
                            }
                        ]
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "DocumentationParserService",
            "id": "injectable-DocumentationParserService-716845b3715db5c819d05a7d6930aa4e6500660cc0bfbccce77a9c204780bc39c4b7d28fd98b1ed8e865ab3209e64ed44c8ba5995d19d9118fa35b6e99cd5e58",
            "file": "projects/components-demo/src/app/modules/example-view/services/documentation-parser/documentation-parser.service.ts",
            "properties": [
                {
                    "name": "_docFather",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DocFather | null",
                    "optional": false,
                    "description": "<p>The currently loaded documentation docs json</p>\n",
                    "line": 16,
                    "rawdescription": "\nThe currently loaded documentation docs json",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "onDataLoaded$",
                    "defaultValue": "new ReplaySubject(1)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReplaySubject<DocFather>",
                    "optional": false,
                    "description": "<p>Emits a value as soon as the jsonDoc is loaded</p>\n",
                    "line": 13,
                    "rawdescription": "\nEmits a value as soon as the jsonDoc is loaded",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "find",
                    "args": [
                        {
                            "name": "component",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DocFather | undefined",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "importFile",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nImports the doc file with the httpClient (So that we can take action if the file is not available)\n",
                    "description": "<p>Imports the doc file with the httpClient (So that we can take action if the file is not available)</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "walkThroughTree",
                    "args": [
                        {
                            "name": "data",
                            "type": "DocFather",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "component",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DocFather | undefined",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRecursively walks through the components-tree and searches for the part, where\nthe docFather's title is equals to the component argument.\n",
                    "description": "<p>Recursively walks through the components-tree and searches for the part, where\nthe docFather&#39;s title is equals to the component argument.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1126,
                                "end": 1130,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "data"
                            },
                            "type": "DocFather",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1120,
                                "end": 1125,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>the docFather to walk through and search for the component.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 1203,
                                "end": 1212,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "component"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1197,
                                "end": 1202,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>the component to be searched for in the docFather tree.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\nimport { map, Observable, ReplaySubject } from 'rxjs';\nimport * as DocJson from '../../../../../../../../doc/doc.json';\n// import * as DocJson from '../../../../../assets/doc/doc.json';\n\n// import { DocFather } from \"../sharedDataTypes\";\nexport type DocFather = any;\n\n@Injectable()\nexport class DocumentationParserService {\n  /** Emits a value as soon as the jsonDoc is loaded */\n  public onDataLoaded$: ReplaySubject<DocFather> = new ReplaySubject(1);\n\n  /** The currently loaded documentation docs json */\n  private _docFather: DocFather | null = null;\n\n  constructor() {\n    this.importFile();\n  }\n\n  public find(component: string): DocFather | undefined {\n    if (!this._docFather) {\n      return undefined;\n    }\n    return this.walkThroughTree(this._docFather, component);\n  }\n\n  public set docFather(docFather: DocFather) {\n    this._docFather = docFather;\n    this.onDataLoaded$.next(this._docFather);\n  }\n\n  /**\n   * Recursively walks through the components-tree and searches for the part, where\n   * the docFather's title is equals to the component argument.\n   * @param data the docFather to walk through and search for the component.\n   * @param component the component to be searched for in the docFather tree.\n   */\n  private walkThroughTree(data: DocFather, component: string): DocFather | undefined {\n    if (!data?.children) {\n      return;\n    }\n    const child = data.children.find(child => child.name === component);\n    if (!child) {\n      for (const child of data.children) {\n        const newChild = this.walkThroughTree(child, component);\n        if (newChild) {\n          return newChild;\n        }\n      }\n      return;\n    } else {\n      return child;\n    }\n  }\n\n  /**\n   * Imports the doc file with the httpClient (So that we can take action if the file is not available)\n   */\n  private importFile(): void {\n    try {\n      if (DocJson) {\n        this.docFather = DocJson;\n      }\n    } catch (e) {\n      console.warn(`To show the api -> run \"yarn doc\" and restart the server`);\n    }\n\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "accessors": {
                "docFather": {
                    "name": "docFather",
                    "setSignature": {
                        "name": "docFather",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "docFather",
                                "type": "DocFather",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 29,
                        "jsdoctags": [
                            {
                                "name": "docFather",
                                "type": "DocFather",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AucDialogConfig",
            "id": "class-AucDialogConfig-e859dec18efb3783ee6e49cf2c8e51d78b81b8be1cb5a9af8b085fed393139cb56054de4fab68b69b8fe4d8391cde56c4d324c1992d2f651d50596aaa2b15361",
            "file": "projects/applicature/components/src/lib/dialog/dialog-config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { AucDialogPosition } from './types';\nimport { AucCustomizeDialogOverlayConfigInterface } from './interfaces';\n\nexport class AucDialogConfig<D = any> {\n  data?: D; // Data for injected component.\n  width?: string; // '300px', '50%', '1rem' ...\n  height?: string; // '300px', '50%', '1rem' ...\n  minWidth?: string; // '300px', '50%', '1rem' ...\n  minHeight?: string; // '300px', '50%', '1rem' ...\n  maxWidth?: string; // '300px', '50%', '1rem' ...\n  maxHeight?: string; // '300px', '50%', '1rem' ...\n  position?: AucDialogPosition;\n  dialogClass?: string | string[]; // Add custom class to the dialog container.\n  panel?: {\n    panelClass: string | string[]; // Add custom class to the dialog panel.\n  };\n  overlay?: AucCustomizeDialogOverlayConfigInterface; // customize overlay.\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "D",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "dialogClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | string[]",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "maxHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "maxWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "minHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "minWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "overlay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucCustomizeDialogOverlayConfigInterface",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "panel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucDialogPosition",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AucDialogInjector",
            "id": "class-AucDialogInjector-887b7ef34969f4c001b14a45972a6f9596424d0346cc59778257c4721df00f2b825824a608654cb22cf8b63b476f3cfb28b1f2985f40d9da3f6a7f3346cf2f69",
            "file": "projects/applicature/components/src/lib/dialog/dialog-injector.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Injector, Type, InjectionToken, InjectFlags } from '@angular/core';\n\nexport class AucDialogInjector implements Injector {\n  constructor(\n    private _parentInjector: Injector,\n    private _additionalTokens: WeakMap<any, any>\n  ) {\n  }\n\n  get<T>(\n    token: Type<T> | InjectionToken<T>,\n    notFoundValue?: T,\n    flags?: InjectFlags\n  ): T;\n  get(token: any, notFoundValue?: any);\n  get<T>(token: any, notFoundValue?: any, flags?: any): T {\n    const value = this._additionalTokens.get(token);\n\n    if (value) {\n      return value;\n    }\n\n    return this._parentInjector.get<T>(token, notFoundValue);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_parentInjector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_additionalTokens",
                        "type": "WeakMap<any | any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "_parentInjector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_additionalTokens",
                        "type": "WeakMap<any | any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "token",
                            "type": "Type<T> | InjectionToken<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "notFoundValue",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "flags",
                            "type": "InjectFlags",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "Type<T> | InjectionToken<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "notFoundValue",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "flags",
                            "type": "InjectFlags",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "token",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "notFoundValue",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "notFoundValue",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "token",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "notFoundValue",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "flags",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "notFoundValue",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "flags",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Injector"
            ]
        },
        {
            "name": "AucDialogRef",
            "id": "class-AucDialogRef-c5c1eb4b5e1b8cb359e6bd13b628b0e574675555c7a49e844f2cb33ba5b4fd7981ab65b4e8b9ff5be7ffe002672f524b7a5dea234f56ee8194a6ac2e51467944",
            "file": "projects/applicature/components/src/lib/dialog/dialog-ref.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Observable, Subject } from 'rxjs';\n\nexport class AucDialogRef<R = any> {\n  private readonly _afterClosed = new Subject<R>();\n  private readonly _afterOpened = new Subject<null>();\n\n  /**\n   * {@link afterClosed} - emits after dialog was closed.\n   * You can add subscription for it if needed. this.dialogRed.afterClosed.subscribe();\n   */\n  public afterClosed: Observable<any> = this._afterClosed.asObservable();\n\n  /**\n   * {@link afterOpened} - emits after dialog was opened.\n   * You can add subscription for it if needed. this.dialogRed._afterOpened.subscribe();\n   */\n  public afterOpened: Observable<null> = this._afterOpened.asObservable();\n\n  /**\n   * {@link close} - emits close dialog action the dialog window.\n   * @param result - the value which will be emitted for afterClosed action.\n   */\n  public close(result?: R): void {\n    this._afterClosed.next(result);\n  }\n\n  /**\n   * {@link open} - emits open dialog action the dialog window.\n   * You mustn't use it. It's already used inside injection strategy.\n   */\n  public open(): void {\n    this._afterOpened.next(null);\n  }\n}\n",
            "properties": [
                {
                    "name": "_afterClosed",
                    "defaultValue": "new Subject<R>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        121,
                        144
                    ]
                },
                {
                    "name": "_afterOpened",
                    "defaultValue": "new Subject<null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        121,
                        144
                    ]
                },
                {
                    "name": "afterClosed",
                    "defaultValue": "this._afterClosed.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>{@link afterClosed} - emits after dialog was closed.\nYou can add subscription for it if needed. this.dialogRed.afterClosed.subscribe();</p>\n",
                    "line": 11,
                    "rawdescription": "\n\n{@link afterClosed} - emits after dialog was closed.\nYou can add subscription for it if needed. this.dialogRed.afterClosed.subscribe();\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "afterOpened",
                    "defaultValue": "this._afterOpened.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<>",
                    "optional": false,
                    "description": "<p>{@link afterOpened} - emits after dialog was opened.\nYou can add subscription for it if needed. this.dialogRed._afterOpened.subscribe();</p>\n",
                    "line": 17,
                    "rawdescription": "\n\n{@link afterOpened} - emits after dialog was opened.\nYou can add subscription for it if needed. this.dialogRed._afterOpened.subscribe();\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "close",
                    "args": [
                        {
                            "name": "result",
                            "type": "R",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link close} - emits close dialog action the dialog window.\n",
                    "description": "<p>{@link close} - emits close dialog action the dialog window.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 742,
                                "end": 748,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "result"
                            },
                            "type": "R",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 736,
                                "end": 741,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>the value which will be emitted for afterClosed action.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "open",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link open} - emits open dialog action the dialog window.\nYou mustn't use it. It's already used inside injection strategy.\n",
                    "description": "<p>{@link open} - emits open dialog action the dialog window.\nYou mustn&#39;t use it. It&#39;s already used inside injection strategy.</p>\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "AucContentBodyDirective",
            "id": "directive-AucContentBodyDirective-4414cfa13ae31be512310fb54076d69d263e2d9825046e2c6931be676e2fc5ac8475c808d607379a539f8f2a22beff90282d679856ff16983a4a092fc55604de",
            "file": "projects/applicature/components/src/lib/directives/content-body/content-body.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  AfterViewInit,\n  Directive,\n  EmbeddedViewRef,\n  Inject,\n  OnDestroy,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nimport { AucBlockScrollHelperService } from '../../helpers';\n\n\n@Directive({\n  selector: '[aucContentBody]',\n  exportAs: 'aucContentBody',\n  providers: [ AucBlockScrollHelperService ]\n})\nexport class AucContentBodyDirective implements AfterViewInit, OnDestroy {\n  private _embeddedViewRef: EmbeddedViewRef<any>;\n\n  constructor(private _templateRef: TemplateRef<any>,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(DOCUMENT) private _document: Document,\n              private _blockScrollHelperService: AucBlockScrollHelperService) {\n  }\n\n  ngAfterViewInit(): void {\n    this._embeddedViewRef = this._viewContainerRef.createEmbeddedView(this._templateRef);\n    this._embeddedViewRef.detectChanges();\n\n    this._embeddedViewRef.rootNodes.forEach(node => this._document.body.appendChild(node));\n\n    this._blockScrollHelperService.lockScroll();\n  }\n\n  public destroy(): void {\n    this._blockScrollHelperService.unlockScroll();\n    this._embeddedViewRef.destroy();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy();\n  }\n\n}\n",
            "selector": "[aucContentBody]",
            "providers": [
                {
                    "name": "AucBlockScrollHelperService"
                }
            ],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_embeddedViewRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EmbeddedViewRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "destroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_blockScrollHelperService",
                        "type": "AucBlockScrollHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "_templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_blockScrollHelperService",
                        "type": "AucBlockScrollHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "AucCustomClassDirective",
            "id": "directive-AucCustomClassDirective-5251c5ea2c19679f76e025fa2649d35f22f2813ac83410548a2dcbf30bb0116ae288a047016df939b1fb84483ece16440f10c73ffca08a0c378854034edd7db7",
            "file": "projects/applicature/components/src/lib/directives/custom-class/custom-class.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\n\n@Directive({\n  selector: '[aucCustomClass]',\n  exportAs: 'aucCustomClass'\n})\nexport class AucCustomClassDirective {\n  /**\n   * {@link aucCustomClass} - It's an `@Input()` parameter.\n   * Sets class / list of classes to the elements.\n   */\n  @Input()\n  public aucCustomClass: string | string[];\n\n  constructor(private _renderer2: Renderer2, private _elementRef: ElementRef) {\n  }\n\n  ngOnInit(): void {\n    this.setClasses([].concat(this.aucCustomClass ?? []));\n  }\n\n  public setClasses(classes: string[]): void {\n    if (!classes?.length) {\n      return;\n    }\n\n    classes.forEach((item: string) => {\n      this._renderer2.addClass(this._elementRef.nativeElement, item);\n    });\n  }\n\n  public removeClasses(classes: string[]): void {\n    if (!classes?.length) {\n      return;\n    }\n\n    classes.forEach((item: string) => {\n      this._renderer2.removeClass(this._elementRef.nativeElement, item);\n    });\n  }\n}\n",
            "selector": "[aucCustomClass]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "aucCustomClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link aucCustomClass} - It's an `@Input()` parameter.\nSets class / list of classes to the elements.\n",
                    "description": "<p>{@link aucCustomClass} - It&#39;s an <code>@Input()</code> parameter.\nSets class / list of classes to the elements.</p>\n",
                    "line": 14,
                    "type": "string | string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeClasses",
                    "args": [
                        {
                            "name": "classes",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "classes",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setClasses",
                    "args": [
                        {
                            "name": "classes",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "classes",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_renderer2",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "_renderer2",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "AucCustomizeDialogDirective",
            "id": "directive-AucCustomizeDialogDirective-cf88d13bb83cff818eebcec99951ff8b0b246ebf62757d55221e7e1f728cc62c44007229c99970cd65c5626011a12914e0abb199aac4c7207d469202a905b683",
            "file": "projects/applicature/components/src/lib/dialog/directives/customize-dialog/customize-dialog.directive.ts",
            "type": "directive",
            "description": "<p>Uses for customization dialog window by config.</p>\n",
            "rawdescription": "\n\nUses for customization dialog window by config.\n",
            "sourceCode": "import { Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\n\nimport { AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS } from '../../enums';\nimport { AucCustomizeDialogConfig } from '../../interfaces';\n\n\n/**\n * Uses for customization dialog window by config.\n */\n@Directive({\n  selector: '[aucCustomizeDialog]',\n  exportAs: 'aucCustomizeDialog'\n})\nexport class AucCustomizeDialogDirective implements OnInit {\n  /**\n   * {@link config} - configuration data for customization dialog.\n   */\n  @Input()\n  public config?: AucCustomizeDialogConfig;\n\n  private get isConfig(): boolean {\n    return !!(Object.keys(this.config ?? {})).length;\n  }\n\n  constructor(private _renderer2: Renderer2, private _elementRef: ElementRef) {\n  }\n\n  ngOnInit(): void {\n    this.mapConfig();\n  }\n\n  public setClasses(classes: string[]): void {\n    if (!classes.length) {\n      return;\n    }\n\n    classes.forEach((item: string) => {\n      this._renderer2.addClass(this._elementRef.nativeElement, item);\n    });\n  }\n\n  public setStyle(style: string, value: string | number): void {\n    if (!this._elementRef?.nativeElement || !style || (!value && value !== 0)) {\n      return;\n    }\n\n    this._renderer2.setStyle(this._elementRef.nativeElement, style, value);\n  }\n\n  public mapConfig(): void {\n    if (!this.isConfig) {\n      return;\n    }\n\n    Object.keys(this.config).forEach((key: string) => {\n      if (key === AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS.CLASSES) {\n        this.setClasses([].concat(this.config[key]));\n\n        return;\n      }\n\n      if (key === AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS.WIDTH) {\n        this.setStyle('width', this.config[key]);\n\n        return;\n      }\n\n      if (key === AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS.HEIGHT) {\n        this.setStyle('height', this.config[key]);\n\n        return;\n      }\n\n      if (key === AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS.MIN_WIDTH) {\n        this.setStyle('min-width', this.config[key]);\n\n        return;\n      }\n\n      if (key === AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS.MIN_HEIGHT) {\n        this.setStyle('min-height', this.config[key]);\n\n        return;\n      }\n\n      if (key === AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS.MAX_WIDTH) {\n        this.setStyle('max-width', this.config[key]);\n\n        return;\n      }\n\n      if (key === AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS.MAX_HEIGHT) {\n        this.setStyle('max-height', this.config[key]);\n\n        return;\n      }\n\n      if (key === AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS.POSITION) {\n        this.setClasses([].concat(this.config[key]));\n\n        return;\n      }\n    });\n  }\n\n}\n",
            "selector": "[aucCustomizeDialog]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link config} - configuration data for customization dialog.\n",
                    "description": "<p>{@link config} - configuration data for customization dialog.</p>\n",
                    "line": 19,
                    "type": "AucCustomizeDialogConfig",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "mapConfig",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setClasses",
                    "args": [
                        {
                            "name": "classes",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "classes",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setStyle",
                    "args": [
                        {
                            "name": "style",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "style",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_renderer2",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "_renderer2",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "isConfig": {
                    "name": "isConfig",
                    "getSignature": {
                        "name": "isConfig",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 21
                    }
                }
            }
        },
        {
            "name": "AucDropdownMenuDirective",
            "id": "directive-AucDropdownMenuDirective-fb5141165090d831bafa5c7ca4f2ef450ce84d7a7fbc8bc1e7b96ec73b4acccc41e21044ab02c0f8e5724952672ccd886d75182911a22051fc055f8750f6ca3f",
            "file": "projects/applicature/components/src/lib/dropdown-menu/directives/dropdown-menu/dropdown-menu.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AfterViewInit, Directive, Inject, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n\n@Directive({\n  selector: '[aucDropdownMenu]',\n  exportAs: 'aucDropdownMenu'\n})\nexport class AucDropdownMenuDirective implements AfterViewInit {\n\n  constructor(private _templateRef: TemplateRef<any>,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(DOCUMENT) private document: Document\n  ) {\n  }\n\n  public ngAfterViewInit(): void {\n    let embeddedViewRef = this._viewContainerRef.createEmbeddedView(this._templateRef);\n\n    embeddedViewRef.detectChanges();\n\n    embeddedViewRef.rootNodes.forEach(node => this.document.body.appendChild(node))\n  }\n\n}\n",
            "selector": "[aucDropdownMenu]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "_templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "AucIdenticonDirective",
            "id": "directive-AucIdenticonDirective-3a39849b1f90497cf5e53cb4d47637e5d3d6145a24e66575239a785f6de7141a9f6088a497181cd729d8079183b7e4ff47a3f7347adc341256afc749db4bf1dd",
            "file": "projects/applicature/components/src/lib/directives/identicon/identicon.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\n\nimport { AucIdenticonPosition } from './types';\nimport { AUC_IDENTICON_POSITION } from './enums';\n\n\n@Directive({\n  selector: '[aucIdenticon]',\n  exportAs: 'aucIdenticon'\n})\nexport class AucIdenticonDirective implements OnChanges {\n  /**\n   * {@link aucIdenticon} - It's an `@Input()` parameter.\n   * Shows identicon if provided.\n   * It's an optional parameter.\n   */\n  @Input()\n  public aucIdenticon: HTMLDivElement;\n\n  /**\n   * {@link position} - It's an `@Input()` parameter.\n   * Controls identicon position.\n   * It's an optional parameter. The default value is right;\n   * You can use enum {@link AUC_IDENTICON_POSITION}\n   */\n  @Input()\n  public position: AucIdenticonPosition = AUC_IDENTICON_POSITION.RIGHT;\n\n  private identicon: HTMLDivElement;\n\n  constructor(private _renderer2: Renderer2, private _elementRef: ElementRef) {\n  }\n\n  ngOnChanges() {\n    this.setIdenticon();\n  }\n\n  public setIdenticon(): void {\n    if (!this.aucIdenticon) {\n      return;\n    }\n\n    if (this.identicon) {\n      this._renderer2.removeChild(this._elementRef.nativeElement, this.identicon);\n    }\n\n    this.identicon = this.aucIdenticon.cloneNode(true) as HTMLDivElement;\n    this._renderer2.addClass(this.identicon, 'auc-identicon');\n\n    if (!this.position) {\n      this.position = AUC_IDENTICON_POSITION.RIGHT;\n    }\n\n    if (this.position !== AUC_IDENTICON_POSITION.RIGHT) {\n      this._renderer2.setStyle(this.identicon, 'margin-right', '8px');\n      this._renderer2.insertBefore(this._elementRef.nativeElement, this.identicon, this._elementRef.nativeElement.firstChild);\n\n      return;\n    }\n\n    this._renderer2.setStyle(this.identicon, 'margin-left', '8px');\n    this._renderer2.appendChild(this._elementRef.nativeElement, this.identicon);\n  }\n\n}\n",
            "selector": "[aucIdenticon]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "aucIdenticon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link aucIdenticon} - It's an `@Input()` parameter.\nShows identicon if provided.\nIt's an optional parameter.\n",
                    "description": "<p>{@link aucIdenticon} - It&#39;s an <code>@Input()</code> parameter.\nShows identicon if provided.\nIt&#39;s an optional parameter.</p>\n",
                    "line": 18,
                    "type": "HTMLDivElement",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "AUC_IDENTICON_POSITION.RIGHT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link position} - It's an `@Input()` parameter.\nControls identicon position.\nIt's an optional parameter. The default value is right;\nYou can use enum {@link AUC_IDENTICON_POSITION}\n",
                    "description": "<p>{@link position} - It&#39;s an <code>@Input()</code> parameter.\nControls identicon position.\nIt&#39;s an optional parameter. The default value is right;\nYou can use enum {@link AUC_IDENTICON_POSITION}</p>\n",
                    "line": 27,
                    "type": "AucIdenticonPosition",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "identicon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLDivElement",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setIdenticon",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "implements": [
                "OnChanges"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_renderer2",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "_renderer2",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "AucInsertionDirective",
            "id": "directive-AucInsertionDirective-60a4c0dad9cf2e8577936065900ded70283be1a888fe5bf8f38322e7e923e032583326bcfebc2043040b68793ce7e6f451d584bf37b32c3ca78d236b0789aa1a",
            "file": "projects/applicature/components/src/lib/dialog/directives/insertion/insertion.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ViewContainerRef } from '@angular/core';\n\n\n@Directive({\n  selector: '[aucInsertion]',\n  exportAs: 'aucInsertion'\n})\nexport class AucInsertionDirective {\n  get viewContainerRef(): ViewContainerRef {\n    return this._viewContainerRef;\n  }\n\n  constructor(public _viewContainerRef: ViewContainerRef) {\n  }\n}\n",
            "selector": "[aucInsertion]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_viewContainerRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewContainerRef",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "_viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "viewContainerRef": {
                    "name": "viewContainerRef",
                    "getSignature": {
                        "name": "viewContainerRef",
                        "type": "",
                        "returnType": "ViewContainerRef",
                        "line": 9
                    }
                }
            }
        },
        {
            "name": "AucRippleDirective",
            "id": "directive-AucRippleDirective-04ca12c210754150404bf50ca6b5a9feca1238bf3e09734eefddd916626bc19d8e1ccb78eb1bbda7888ced239956df91accd9fd05b44191904606cace922ae19",
            "file": "projects/applicature/components/src/lib/ripple/directives/ripple/ripple.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, HostListener, Input, Renderer2 } from '@angular/core';\n\n\n@Directive({\n  selector: '[aucRipple]',\n  exportAs: 'aucRipple'\n})\nexport class AucRippleDirective {\n  /**\n   * {@link customClass} - It's an `@Input()` parameter.\n   * Sets custom class to the ripple element.\n   * This is an optional parameter.\n   */\n  @Input() customClass?: string;\n\n  private readonly rippleClass = 'auc-ripple';\n\n  @HostListener('mousedown', [ '$event' ]) onMousedown(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.createRipple(e);\n  }\n\n  constructor(private _renderer2: Renderer2, private _elementRef: ElementRef) {\n    this.setStyle(this._elementRef.nativeElement, 'overflow', 'hidden');\n    this.setStyle(this._elementRef.nativeElement, 'position', 'relative');\n  }\n\n  public setStyle(el: HTMLElement, style: string, value: string | number): void {\n    if (!this._elementRef?.nativeElement || !style || (!value && value !== 0)) {\n      return;\n    }\n\n    this._renderer2.setStyle(el, style, value);\n  }\n\n  private createRipple(event): void {\n    const rippleIndex = [ ...this._elementRef.nativeElement.childNodes ]\n      .findIndex(node => node.className === this.rippleClass);\n\n    if (rippleIndex !== -1) {\n      this._renderer2.removeChild(\n        this._elementRef.nativeElement,\n        this._elementRef.nativeElement.childNodes[rippleIndex]\n      );\n    }\n\n    const button = this._elementRef.nativeElement;\n    const circle: HTMLElement = this._renderer2.createElement('span');\n    const diameter = Math.max(button.clientWidth, button.clientHeight);\n    const radius = diameter / 2;\n    const circleSize = `${diameter}px`;\n    this._renderer2.setStyle(circle, 'width', circleSize);\n    this._renderer2.setStyle(circle, 'height', circleSize);\n    this._renderer2.setStyle(circle, 'left', `${event.offsetX - radius}px`);\n    this._renderer2.setStyle(circle, 'top', `${event.offsetY - radius}px`);\n    this._renderer2.addClass(circle, this.rippleClass);\n\n    if ((this.customClass ?? '').trim()) {\n      this._renderer2.addClass(circle, this.customClass.trim());\n    }\n\n    this._renderer2.appendChild(this._elementRef.nativeElement, circle);\n  }\n\n}\n",
            "selector": "[aucRipple]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "customClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link customClass} - It's an `@Input()` parameter.\nSets custom class to the ripple element.\nThis is an optional parameter.\n",
                    "description": "<p>{@link customClass} - It&#39;s an <code>@Input()</code> parameter.\nSets custom class to the ripple element.\nThis is an optional parameter.</p>\n",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "mousedown",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18
                }
            ],
            "propertiesClass": [
                {
                    "name": "rippleClass",
                    "defaultValue": "'auc-ripple'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121,
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createRipple",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMousedown",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mousedown', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setStyle",
                    "args": [
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "style",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "style",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_renderer2",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "_renderer2",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "AucSetStylePropsDirective",
            "id": "directive-AucSetStylePropsDirective-a91dcda9af39fb72d593063f2e3cd01a6f551c1ab2d460dcec0a7d90ca17af54cb0011d1d90619b5adff77b3775fbdad6bad751689b1f741ad6be02edf99de3d",
            "file": "projects/applicature/components/src/lib/directives/set-style-props/set-style-props.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\n\nimport { AucSetStyleProp } from './interfaces';\n\n\n@Directive({\n  selector: '[aucSetStyleProps]',\n  exportAs: 'aucSetStyleProps'\n})\nexport class AucSetStylePropsDirective implements OnChanges {\n  /**\n   * {@link aucSetStyleProps} - It's an `@Input()` parameter.\n   * Used for setting style properties to the element.\n   * You can use set properties in your scss.\n   * Ex: aucSetStyleProps = {name: '--text-color: 'red'}.\n   * In your scss file you can use it: color: var(--text-color);\n   */\n  @Input()\n  public aucSetStyleProps!: AucSetStyleProp | AucSetStyleProp[];\n\n  constructor(private _elementRef: ElementRef) {\n  }\n\n  ngOnChanges(): void {\n    this.setProperty([].concat(this.aucSetStyleProps ?? []));\n  }\n\n  public setProperty(props: AucSetStyleProp[]): void {\n    if (!Array.isArray(props) || !props.length || !this._elementRef?.nativeElement?.style) {\n      return;\n    }\n\n    props.forEach((item: AucSetStyleProp) => {\n      if (!item.name || !item.value) {\n        return\n      }\n\n      this._elementRef.nativeElement.style.setProperty(item.name, item.value);\n    });\n  }\n\n}\n",
            "selector": "[aucSetStyleProps]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "aucSetStyleProps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link aucSetStyleProps} - It's an `@Input()` parameter.\nUsed for setting style properties to the element.\nYou can use set properties in your scss.\nEx: aucSetStyleProps = {name: '--text-color: 'red'}.\nIn your scss file you can use it: color: var(--text-color);\n",
                    "description": "<p>{@link aucSetStyleProps} - It&#39;s an <code>@Input()</code> parameter.\nUsed for setting style properties to the element.\nYou can use set properties in your scss.\nEx: aucSetStyleProps = {name: &#39;--text-color: &#39;red&#39;}.\nIn your scss file you can use it: color: var(--text-color);</p>\n",
                    "line": 19,
                    "type": "AucSetStyleProp | AucSetStyleProp[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setProperty",
                    "args": [
                        {
                            "name": "props",
                            "type": "AucSetStyleProp[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "props",
                            "type": "AucSetStyleProp[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "implements": [
                "OnChanges"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "_elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "AucTriggerDirective",
            "id": "directive-AucTriggerDirective-280abee8c69432748aef4e77d978567c4922204130658288381280f75090e1414c9f1ea7dcb7b469e5b30bde3a6d6a608fb8e0d48bc2bbbe3272017cca23e6cd",
            "file": "projects/applicature/components/src/lib/directives/trigger/trigger.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, EventEmitter, HostListener, Input, Output, Renderer2 } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { AucCustomClassDirective } from '../custom-class';\n\n\n@Directive({\n  selector: '[aucTrigger]',\n  exportAs: 'aucTrigger'\n})\nexport class AucTriggerDirective {\n  /**\n   * {@link triggerClass} - It's an `@Input()` parameter.\n   * You can customize element when opened status.\n   * This is an optional parameter. By default, used auc-trigger-opened.\n   */\n  @Input()\n  public triggerClass?: string = 'auc-trigger-opened';\n\n  /**\n   * {@link onShowHide} - It's an `@Output()` parameter.\n   * Emits show/hide state.\n   * If opened - true.\n   * If closed - false.\n   */\n  @Output()\n  public onShowHide: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  private _customClass: AucCustomClassDirective;\n  private _isOpened: boolean = false;\n\n  public opened$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(this._isOpened);\n\n  public get opened(): boolean {\n    return this._isOpened;\n  }\n\n  private set _opened(opened: boolean) {\n    this._isOpened = opened;\n    this.opened$.next(this.opened);\n    this.onShowHide.emit(this.opened);\n  }\n\n  @HostListener('click', [ '$event' ]) onClick(e: MouseEvent): void {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.showHide();\n  }\n\n  public get nativeElement() {\n    return this._elementRef?.nativeElement;\n  }\n\n  constructor(private _renderer2: Renderer2, private _elementRef: ElementRef) {\n    this._customClass = new AucCustomClassDirective(this._renderer2, this._elementRef);\n  }\n\n  public showHide(isOpen?: boolean): void {\n    if ((isOpen ?? null) !== null) {\n      this._opened = isOpen;\n    } else {\n      this._opened = !this._opened;\n    }\n\n    if (this._customClass) {\n      if (this.opened) {\n        this._customClass.setClasses([ this.triggerClass ]);\n\n        return;\n      }\n\n      this._customClass.removeClasses([ this.triggerClass ]);\n    }\n  }\n\n}\n",
            "selector": "[aucTrigger]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "triggerClass",
                    "defaultValue": "'auc-trigger-opened'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link triggerClass} - It's an `@Input()` parameter.\nYou can customize element when opened status.\nThis is an optional parameter. By default, used auc-trigger-opened.\n",
                    "description": "<p>{@link triggerClass} - It&#39;s an <code>@Input()</code> parameter.\nYou can customize element when opened status.\nThis is an optional parameter. By default, used auc-trigger-opened.</p>\n",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onShowHide",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link onShowHide} - It's an `@Output()` parameter.\nEmits show/hide state.\nIf opened - true.\nIf closed - false.\n",
                    "description": "<p>{@link onShowHide} - It&#39;s an <code>@Output()</code> parameter.\nEmits show/hide state.\nIf opened - true.\nIf closed - false.</p>\n",
                    "line": 27,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "e",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44
                }
            ],
            "propertiesClass": [
                {
                    "name": "_customClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucCustomClassDirective",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_isOpened",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "opened$",
                    "defaultValue": "new BehaviorSubject<boolean>(this._isOpened)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "e",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showHide",
                    "args": [
                        {
                            "name": "isOpen",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "isOpen",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_renderer2",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 53,
                "jsdoctags": [
                    {
                        "name": "_renderer2",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "opened": {
                    "name": "opened",
                    "getSignature": {
                        "name": "opened",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 34
                    }
                },
                "_opened": {
                    "name": "_opened",
                    "setSignature": {
                        "name": "_opened",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "opened",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 38,
                        "jsdoctags": [
                            {
                                "name": "opened",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "nativeElement": {
                    "name": "nativeElement",
                    "getSignature": {
                        "name": "nativeElement",
                        "type": "",
                        "returnType": "",
                        "line": 51
                    }
                }
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-768d93cdb52690293d76396e15f95da644bf2b0782304416b9adad1ba12f7c9abf185c9ebf3585f2f8f9bb3baaade4e78fc95c48e4f0aef14b08613328d3fc4e",
            "file": "projects/components-demo/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "demo-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'demo-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<demo-button-demo></demo-button-demo>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-6a2eb18f0ae1b9e2d696927a0683b52567a1d3c56db66bf592e512cc4a38a7f7b1332dc4cb7e055d157c68aa870ee1df0e5471b9422f8bb99f7eecd26e01ec0c-1",
            "file": "projects/demo/src/app/app.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "accountDropdownConfig",
                    "defaultValue": "{\n    overlay: {\n      transparent: true\n    },\n    position: {\n      vertical: AUC_POSITIONS.BELOW,\n      horizontal: AUC_POSITIONS.BEFORE\n    }\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucDropdownConfig",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "accountOptions",
                    "defaultValue": "[\n    { name: 'My Account', id: 1 },\n    { name: 'Some menu Item', id: 2 },\n    { name: 'Some menu Item', id: 3 }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucAccountOption[]",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ALERT_POSITION",
                    "defaultValue": "AUC_ALERT_POSITION",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "BTN_APPEARANCE",
                    "defaultValue": "AUC_BUTTON_APPEARANCE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "COLORS",
                    "defaultValue": "AS_COLOR_GROUP",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "CONNECT_WALLET_APPEARANCE",
                    "defaultValue": "AUC_CONNECT_WALLET_APPEARANCE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "identicon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLDivElement",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "IDENTICON_POSITION",
                    "defaultValue": "AUC_IDENTICON_POSITION",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "networkDropdownConfig",
                    "defaultValue": "{\n    overlay: {\n      transparent: true\n    },\n    position: {\n      vertical: AUC_POSITIONS.BELOW,\n      horizontal: AUC_POSITIONS.AFTER\n    }\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucDropdownConfig",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "customBtnConnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onConnect",
                    "args": [
                        {
                            "name": "evt",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "evt",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDisconnect",
                    "args": [
                        {
                            "name": "evt",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "evt",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport {\n  AUC_ALERT_POSITION,\n  AUC_BUTTON_APPEARANCE,\n  AUC_CONNECT_WALLET_APPEARANCE,\n  AUC_IDENTICON_POSITION,\n  AUC_POSITIONS,\n  AucAccountOption,\n  AucConnectionState,\n  AucDropdownConfig,\n  aucGenerateJazzicon,\n  AucTransactionService,\n  AucWalletConnectService\n} from '@applicature/components';\nimport { AS_COLOR_GROUP } from '@applicature/styles';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnInit {\n  public identicon!: HTMLDivElement;\n  public COLORS = AS_COLOR_GROUP;\n  public BTN_APPEARANCE = AUC_BUTTON_APPEARANCE;\n  public IDENTICON_POSITION = AUC_IDENTICON_POSITION;\n  public ALERT_POSITION = AUC_ALERT_POSITION;\n  public CONNECT_WALLET_APPEARANCE = AUC_CONNECT_WALLET_APPEARANCE;\n\n  networkDropdownConfig: AucDropdownConfig = {\n    overlay: {\n      transparent: true\n    },\n    position: {\n      vertical: AUC_POSITIONS.BELOW,\n      horizontal: AUC_POSITIONS.AFTER\n    }\n  }\n\n  accountDropdownConfig: AucDropdownConfig = {\n    overlay: {\n      transparent: true\n    },\n    position: {\n      vertical: AUC_POSITIONS.BELOW,\n      horizontal: AUC_POSITIONS.BEFORE\n    }\n  }\n\n  public accountOptions: AucAccountOption[] = [\n    { name: 'My Account', id: 1 },\n    { name: 'Some menu Item', id: 2 },\n    { name: 'Some menu Item', id: 3 }\n  ];\n\n  constructor(\n    private _transactionService: AucTransactionService,\n    private _walletConnectService: AucWalletConnectService,\n    private _cdr: ChangeDetectorRef\n  ) {\n  }\n\n  public ngOnInit(): void {\n    this.identicon = aucGenerateJazzicon('0x6FF69D870c84a9D7F6c12095313F18F883A77f1D');\n\n    this._walletConnectService.accountsChanged$\n      .subscribe((data) => {\n        console.log('metamaskAccountsChanged$: ', data);\n      });\n\n    this._walletConnectService.chainChanged$\n      .subscribe((data) => {\n        console.log('metamaskChainChanged$: ', data);\n      });\n\n    this._walletConnectService.connectChanged$\n      .subscribe((data) => {\n        console.log('metamaskConnect$: ', data);\n      });\n\n    this._walletConnectService.disconnectChanged$\n      .subscribe((data) => {\n        console.log('metamaskDisconnect$: ', data);\n      });\n\n    this._walletConnectService.messageChanged$\n      .subscribe((data) => {\n        console.log('metamaskMessage$: ', data);\n      });\n  }\n\n  public onDisconnect(evt): void {\n    console.log('onDisconnect: ', evt);\n  }\n\n  public onConnect(evt): void {\n    console.log('onConnect: ', evt);\n  }\n\n  public customBtnConnect(): void {\n    this._walletConnectService.connectWallet()\n      .subscribe((connectionstate: AucConnectionState) => {\n        console.log('Custom connect connectionState: ', connectionstate);\n      })\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "h2.section-title {\n  font-size: 36px;\n  font-weight: bold;\n}\n\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_transactionService",
                        "type": "AucTransactionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 57,
                "jsdoctags": [
                    {
                        "name": "_transactionService",
                        "type": "AucTransactionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AppComponent-1",
            "templateData": "<div style=\"padding: 50px 100px 100px;\">\n  <section class=\"account-balance\">\n    <h2 class=\"section-title\">Account Balance</h2>\n\n    <div class=\"example-card\">\n      <app-example-account-balance></app-example-account-balance>\n    </div>\n  </section>\n\n\n  <button type=\"button\" (click)=\"customBtnConnect()\">Custom Connect</button>\n\n  <div style=\"display: flex;justify-content: flex-end; background: #DDE3EC;padding: 50px;\">\n    <auc-connect-wallet [showBalance]=\"true\"\n                        [showNetworkOptions]=\"true\"\n                        [networkDropdownConfig]=\"networkDropdownConfig\"\n                        (onConnect)=\"onConnect($event)\"\n                        (onDisconnect)=\"onDisconnect($event)\"\n    >\n    </auc-connect-wallet>\n  </div>\n  <br>\n  <div style=\"display: flex;justify-content: flex-end; background: #DDE3EC;padding: 50px;\">\n    <auc-connect-wallet [showBalance]=\"true\"\n                        [showTransactions]=\"true\"\n                        [account]=\"{ name: 'Account Name'}\"\n                        [accountOptions]=\"accountOptions\"\n                        [accountDropdownConfig]=\"accountDropdownConfig\"\n                        [appearance]=\"CONNECT_WALLET_APPEARANCE.ICON\">\n    </auc-connect-wallet>\n  </div>\n  <br>\n\n  <div style=\"display: flex;justify-content: flex-end; background: #DDE3EC;padding: 50px;\">\n    <auc-connect-wallet [showBalance]=\"true\"\n                        [showTransactions]=\"true\"\n                        [account]=\"{ name: 'Account Name', image: 'assets/images/default-avatar.png' }\"\n                        [accountOptions]=\"accountOptions\"\n                        [appearance]=\"CONNECT_WALLET_APPEARANCE.BUTTON\">\n    </auc-connect-wallet>\n  </div>\n\n  <section id=\"dialogs\">\n    <h2 class=\"section-title\">Applicature Dialogs</h2>\n    <app-example-dialogs></app-example-dialogs>\n  </section>\n  <br>\n  <br>\n\n  <div style=\"background: #fff;padding: 50px;\">\n    <auc-input label=\"Field Label\"\n               suffix=\"USDT\"\n               hint=\"This is a message\"\n               placeholder=\"Enter\"\n               [max]=\"100\">\n    </auc-input>\n    <br>\n    <br>\n    <auc-input label=\"Field Label\"\n               suffix=\"USDT\"\n               hint=\"This is a message\"\n               placeholder=\"Enter\"\n               [max]=\"100\"\n               [errors]=\"['This is an error message']\">\n    </auc-input>\n    <br>\n    <br>\n    <auc-input label=\"Field Label\"\n               suffix=\"USDT\"\n               hint=\"This is a message\"\n               placeholder=\"Enter\"\n               [max]=\"100\"\n               [disabled]=\"true\">\n    </auc-input>\n  </div>\n  <br>\n  <br>\n\n  <auc-alert text=\"Alert text goes here\"\n             icon=\"wcl-icon-fail\"\n             [color]=\"COLORS.RED\"\n             [iconPosition]=\"ALERT_POSITION.LEFT\"\n  >\n  </auc-alert>\n  <br>\n  <br>\n\n  <auc-alert text=\"Alert text goes here\"\n             [color]=\"COLORS.GREEN\"\n             icon=\"wcl-icon-fail\"\n  >\n  </auc-alert>\n  <br>\n  <br>\n\n  <auc-alert text=\"Alert text goes here\"\n             icon=\"wcl-icon-fail\"\n             [color]=\"COLORS.BLUE\"\n             [iconPosition]=\"ALERT_POSITION.LEFT\"\n  >\n  </auc-alert>\n  <br>\n  <br>\n\n  <auc-alert text=\"Alert text goes here\"\n             icon=\"wcl-icon-fail\"\n             [color]=\"COLORS.ORANGE\"\n             [iconPosition]=\"ALERT_POSITION.RIGHT\"\n  >\n  </auc-alert>\n  <br>\n  <br>\n\n  <auc-alert text=\"Alert text goes here\"\n             icon=\"wcl-icon-fail\"\n             [color]=\"COLORS.GREY\"\n             [iconPosition]=\"ALERT_POSITION.LEFT\"\n  >\n  </auc-alert>\n  <br>\n  <br>\n\n  <auc-alert text=\"Alert text goes here\"\n             icon=\"wcl-icon-fail\"\n             [color]=\"COLORS.WHITE\"\n  >\n  </auc-alert>\n  <br>\n  <br>\n\n  <auc-avatar></auc-avatar>\n  <br>\n  <br>\n\n  <auc-avatar src=\"assets/images/avatar-1.png\" [size]=\"48\"></auc-avatar>\n  <br>\n  <br>\n\n  <auc-button label=\"Button\" [disabled]=\"true\"></auc-button>\n  <br>\n  <br>\n\n  <auc-button label=\"Button\"></auc-button>\n  <br>\n  <br>\n\n  <auc-button label=\"Button\" leftIcon=\"wcl-icon-star\"></auc-button>\n  <br>\n  <br>\n\n  <auc-button label=\"Button\" rightIcon=\"wcl-icon-chevron-down\"></auc-button>\n  <br>\n  <br>\n\n  <auc-button label=\"Button\" leftIcon=\"wcl-icon-star\" rightIcon=\"wcl-icon-chevron-down\"></auc-button>\n  <br>\n  <br>\n\n  <auc-button [appearance]=\"BTN_APPEARANCE.ICON\" leftIcon=\"wcl-icon-recent\" [color]=\"COLORS.WHITE\"></auc-button>\n  <br>\n  <br>\n\n  <auc-button label=\"Ethereum\" leftIcon=\"wcl-icon-star\" rightIcon=\"wcl-icon-chevron-down\"\n              [color]=\"COLORS.WHITE\"></auc-button>\n  <br>\n  <br>\n\n  <auc-button label=\"0x643...5456\" [identicon]=\"identicon\"></auc-button>\n  <br>\n  <br>\n\n  <auc-button label=\"0x643...5456\" [identicon]=\"identicon\" [identiconPosition]=\"IDENTICON_POSITION.LEFT\"></auc-button>\n  <br>\n  <br>\n\n  <auc-button label=\"Ethereum\" leftIcon=\"wcl-icon-star\" [borderRadius]=\"0\" [color]=\"COLORS.WHITE\"></auc-button>\n  <br>\n  <br>\n\n  <auc-button label=\"Ethereum\" leftIcon=\"wcl-icon-star\" [borderRadius]=\"0\" [transparent]=\"true\"\n              [color]=\"COLORS.WHITE\"></auc-button>\n  <br>\n  <br>\n\n  <auc-button label=\"1 pending\" [color]=\"COLORS.WHITE\" [pending]=\"true\"></auc-button>\n  <br>\n  <br>\n\n  <auc-button label=\"Ethereum\" [adaptive]=\"true\"></auc-button>\n  <br>\n  <br>\n\n  <section id=\"table\">\n    <h2 class=\"section-title\">Applicature Table</h2>\n\n    <div class=\"example-card\">\n      <app-example-table></app-example-table>\n    </div>\n  </section>\n\n  <br>\n  <br>\n\n  <section id=\"dropdown-menu\">\n    <h2 class=\"section-title\">Applicature Dropdown Menu</h2>\n\n    <div class=\"example-card\">\n      <app-custom-dropdown-menu></app-custom-dropdown-menu>\n    </div>\n  </section>\n\n</div>\n"
        },
        {
            "name": "AucAccountBalanceComponent",
            "id": "component-AucAccountBalanceComponent-eb13dde8b486d3220fbcf5201e68fb83c99777c3cb7aed24124384527eec035cce4778ff75df4f1ad5182e989ae9f6dabfcbfe7a65e21010cf081ed0159363e1",
            "file": "projects/applicature/components/src/lib/account-balance/account-balance.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-account-balance",
            "styleUrls": [
                "./account-balance.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./account-balance.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "addressConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link addressConfig} - It's an `@Input()` parameter. <br>\nConfiguration for account address button <br>\nIt's an optional parameter.<br>\n",
                    "description": "<p>{@link addressConfig} - It&#39;s an <code>@Input()</code> parameter. <br>\nConfiguration for account address button <br>\nIt&#39;s an optional parameter.<br></p>\n",
                    "line": 75,
                    "type": "AucAccountBalanceAddressConfig",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link appearance} - It's an `@Input()` parameter. <br>\nSets style for appearance.<br>\nYou can use one of the values from enum {@link AUC_BALANCE_APPEARANCE}.<br>\nIt's an optional parameter.\n",
                    "description": "<p>{@link appearance} - It&#39;s an <code>@Input()</code> parameter. <br>\nSets style for appearance.<br>\nYou can use one of the values from enum {@link AUC_BALANCE_APPEARANCE}.<br>\nIt&#39;s an optional parameter.</p>\n",
                    "line": 41,
                    "type": "AucBalanceAppearance",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "AS_COLOR_GROUP.WHITE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link color} - It's an `@Input()` parameter. <br>\nSets theme of the button. <br>\nIt's an optional parameter. The default value is white. <br>\nYou can use enum {@link AS_COLOR_GROUP}.\n",
                    "description": "<p>{@link color} - It&#39;s an <code>@Input()</code> parameter. <br>\nSets theme of the button. <br>\nIt&#39;s an optional parameter. The default value is white. <br>\nYou can use enum {@link AS_COLOR_GROUP}.</p>\n",
                    "line": 50,
                    "type": "AsColorGroup",
                    "decorators": []
                },
                {
                    "name": "identicon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link identicon} - Shows identicon if provided.\n",
                    "description": "<p>{@link identicon} - Shows identicon if provided.</p>\n",
                    "line": 95,
                    "type": "HTMLDivElement",
                    "decorators": []
                },
                {
                    "name": "isCurrency",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link isCurrency} - It's an `@Input()` parameter. <br>\nShows Currency icon from supported networks list. <br>\nYou will set supported networks when initialize library, {@link AucNetworkOption.icon}. <br>\nIt's an optional parameter. The default value is false.\n",
                    "description": "<p>{@link isCurrency} - It&#39;s an <code>@Input()</code> parameter. <br>\nShows Currency icon from supported networks list. <br>\nYou will set supported networks when initialize library, {@link AucNetworkOption.icon}. <br>\nIt&#39;s an optional parameter. The default value is false.</p>\n",
                    "line": 59,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showAddress",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link showAddress} - It's an `@Input()` parameter. <br>\nShow or hide account address. <br>\nIt's an optional parameter. The default value is false. <br>\n",
                    "description": "<p>{@link showAddress} - It&#39;s an <code>@Input()</code> parameter. <br>\nShow or hide account address. <br>\nIt&#39;s an optional parameter. The default value is false. <br></p>\n",
                    "line": 67,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onAddressClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link onAddressClick} - It's an `@Output()` parameter. <br>\nEmits an action when account button was clicked. <br>\nEmitted value is native click value.\n",
                    "description": "<p>{@link onAddressClick} - It&#39;s an <code>@Output()</code> parameter. <br>\nEmits an action when account button was clicked. <br>\nEmitted value is native click value.</p>\n",
                    "line": 83,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_addressRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLDivElement>",
                    "optional": false,
                    "description": "",
                    "line": 98,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'addressRef', {static: true}"
                        }
                    ],
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "activeNetwork",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucNetworkOption",
                    "optional": false,
                    "description": "",
                    "line": 87,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "address$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 85,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "balance$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 86,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "COLOR_GROUP",
                    "defaultValue": "AS_COLOR_GROUP",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 89,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "styleProperties",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucSetStyleProp[]",
                    "optional": false,
                    "description": "",
                    "line": 88,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onAccountButtonClick",
                    "args": [
                        {
                            "name": "evt",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "evt",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AS_COLOR_GROUP, AsColorGroup, AsColorProperties, AsColors } from '@applicature/styles';\n\nimport { aucGenerateJazzicon, aucNormalizeBalance } from '../helpers';\nimport { AucConnectionState, AucWalletConnectService } from '../services';\nimport { AucBalanceAppearance } from './types';\nimport { AUC_BALANCE_APPEARANCE } from './enums';\nimport { AucNetworkOption } from '../interfaces';\nimport { AucSetStyleProp } from '../directives';\nimport { AucAccountBalanceAddressConfig } from './interfaces';\n\n\n@Component({\n  selector: 'auc-account-balance',\n  templateUrl: './account-balance.component.html',\n  styleUrls: [ './account-balance.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AucAccountBalanceComponent implements OnInit, OnChanges {\n  /**\n   * {@link appearance} - It's an `@Input()` parameter. <br>\n   * Sets style for appearance.<br>\n   * You can use one of the values from enum {@link AUC_BALANCE_APPEARANCE}.<br>\n   * It's an optional parameter.\n   */\n  @Input()\n  public appearance?: AucBalanceAppearance;\n\n  /**\n   * {@link color} - It's an `@Input()` parameter. <br>\n   * Sets theme of the button. <br>\n   * It's an optional parameter. The default value is white. <br>\n   * You can use enum {@link AS_COLOR_GROUP}.\n   */\n  @Input()\n  public color: AsColorGroup = AS_COLOR_GROUP.WHITE;\n\n  /**\n   * {@link isCurrency} - It's an `@Input()` parameter. <br>\n   * Shows Currency icon from supported networks list. <br>\n   * You will set supported networks when initialize library, {@link AucNetworkOption.icon}. <br>\n   * It's an optional parameter. The default value is false.\n   */\n  @Input()\n  public isCurrency?: boolean = false;\n\n  /**\n   * {@link showAddress} - It's an `@Input()` parameter. <br>\n   * Show or hide account address. <br>\n   * It's an optional parameter. The default value is false. <br>\n   */\n  @Input()\n  public showAddress: boolean = false;\n\n  /**\n   * {@link addressConfig} - It's an `@Input()` parameter. <br>\n   * Configuration for account address button <br>\n   * It's an optional parameter.<br>\n   */\n  @Input()\n  public addressConfig?: AucAccountBalanceAddressConfig;\n\n  /**\n   * {@link onAddressClick} - It's an `@Output()` parameter. <br>\n   * Emits an action when account button was clicked. <br>\n   * Emitted value is native click value.\n   */\n  @Output()\n  public onAddressClick: EventEmitter<any> = new EventEmitter<any>();\n\n  public address$: Observable<string>;\n  public balance$: Observable<string>;\n  public activeNetwork: AucNetworkOption;\n  public styleProperties: AucSetStyleProp[] = [];\n  public COLOR_GROUP = AS_COLOR_GROUP;\n\n  /**\n   * {@link identicon} - Shows identicon if provided.\n   */\n  @Input()\n  public identicon: HTMLDivElement;\n\n  @ViewChild('addressRef', { static: true })\n  private _addressRef!: ElementRef<HTMLDivElement>;\n\n  public get classNames(): { [el: string]: boolean } {\n    return {\n      ['auc-balance']: true,\n      [`auc-balance-${this.appearance}`]: true,\n      ['auc-balance-with-address']: this.showAddress,\n    };\n  }\n\n  constructor(\n    private _cdr: ChangeDetectorRef,\n    private _walletConnectService: AucWalletConnectService,\n  ) {\n    this.balance$ = this._walletConnectService.balanceChanged$\n      .pipe(\n        map((balance: string) => {\n          const connectionState: AucConnectionState = this._walletConnectService.connectionState;\n\n          return aucNormalizeBalance(connectionState?.state?.network, balance) ?? '0'\n        })\n      );\n\n    this._walletConnectService.selectedNetwork$\n      .subscribe((network: AucNetworkOption) => {\n        this.activeNetwork = network;\n\n        this._cdr.markForCheck();\n      });\n  }\n\n  public ngOnInit(): void {\n    this.address$ = this._walletConnectService.accountsChanged$\n      .pipe(\n        map((accounts: string[]) => {\n          const account = (accounts ?? [])[0] || null;\n\n          if (account && this.showAddress && this.addressConfig?.showIdenticon) {\n            this.identicon = aucGenerateJazzicon(account);\n          }\n\n          return account;\n        }),\n      );\n  }\n\n  public ngOnChanges(): void {\n    if (this.appearance === AUC_BALANCE_APPEARANCE.TRANSPARENT) {\n      return;\n    }\n\n    const colorProperties: AsColorProperties = AsColors[this.color || AS_COLOR_GROUP.WHITE];\n\n    this.styleProperties = Object.keys(colorProperties || {})\n      .map((prop: string) => {\n        return {\n          name: `--auc-account-balance-${prop}`,\n          value: colorProperties[prop]\n        }\n      });\n\n    this._cdr.markForCheck();\n  }\n\n  public onAccountButtonClick(evt): void {\n    this.onAddressClick.next(evt);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: inline-block;\n}\n\n.auc-balance {\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n  height: 40px;\n  border-radius: 8px;\n  position: relative;\n  z-index: 0;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: var(--auc-account-balance-base);\n    z-index: -1;\n  }\n\n  &.auc-balance-translucent {\n    &:before {\n      opacity: 0.5;\n    }\n  }\n\n  &.auc-balance-transparent {\n    &:before {\n      background: transparent;\n      opacity: 0;\n    }\n  }\n}\n\n.auc-balance-info {\n  display: flex;\n  align-items: center;\n  color: var(--auc-account-balance-text);\n  padding: 8px 12px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n}\n\nauc-icon {\n  width: 20px;\n  height: 20px;\n  font-size: 20px;\n  margin-right: 8px;\n}\n\n",
                    "styleUrl": "./account-balance.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 106,
                "jsdoctags": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "accessors": {
                "classNames": {
                    "name": "classNames",
                    "getSignature": {
                        "name": "classNames",
                        "type": "literal type",
                        "returnType": "literal type",
                        "line": 100
                    }
                }
            },
            "templateData": "<div [ngClass]=\"classNames\" [aucSetStyleProps]=\"styleProperties\">\n  <div class=\"auc-balance-info\" *ngIf=\"activeNetwork\">\n    <auc-icon *ngIf=\"isCurrency && activeNetwork.icon\"\n              class=\"auc-balance-currency\"\n              [icon]=\"activeNetwork.icon\"\n    >\n    </auc-icon>\n\n    <span>{{ balance$ | async }} {{ activeNetwork.symbol }}</span>\n  </div>\n\n  <auc-button *ngIf=\"showAddress\"\n              (onClick)=\"onAccountButtonClick($event)\"\n              [disabled]=\"addressConfig?.disabled\"\n              [label]=\"(address$ | async | aucShortAddress)\"\n              [identicon]=\"identicon\"\n              [identiconPosition]=\"addressConfig?.identiconPosition\"\n              [color]=\"addressConfig?.color ?? COLOR_GROUP.WHITE\">\n  </auc-button>\n</div>\n"
        },
        {
            "name": "AucAccountButtonComponent",
            "id": "component-AucAccountButtonComponent-a1f1bb796b0cfdf0b607163a4328c94aa120e80d704517b795d686ddea60bb620d9beea493f5b432579ec84f8ddc092052e9ccaeeb403ce3c469e12630db92ad",
            "file": "projects/applicature/components/src/lib/account-button/account-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-account-button",
            "styleUrls": [
                "./account-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./account-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "account",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link account} - It's an `@Input()` parameter. <br>\nUser account related information. <br>\nRequired parameter.\n",
                    "description": "<p>{@link account} - It&#39;s an <code>@Input()</code> parameter. <br>\nUser account related information. <br>\nRequired parameter.</p>\n",
                    "line": 33,
                    "type": "AucAccountData",
                    "decorators": []
                },
                {
                    "name": "accountDropdownConfig",
                    "defaultValue": "{\n    overlay: {\n      transparent: true\n    },\n    position: {\n      vertical: AUC_POSITIONS.BELOW,\n      horizontal: AUC_POSITIONS.BEFORE\n    }\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link accountDropdownConfig} - It's an `@Input()` parameter. <br>\nYou can customize dropdown position and overlay. <br>\nThis is an optional parameter. <br>\nThe default value is: <br>\n{\n  overlay: {\n    transparent: true\n  },\n  position: {\n    vertical: AUC_POSITIONS.BELOW,\n    horizontal: AUC_POSITIONS.BEFORE\n  }\n  }\n",
                    "description": "<p>{@link accountDropdownConfig} - It&#39;s an <code>@Input()</code> parameter. <br>\nYou can customize dropdown position and overlay. <br>\nThis is an optional parameter. <br>\nThe default value is: <br>\n{\n  overlay: {\n    transparent: true\n  },\n  position: {\n    vertical: AUC_POSITIONS.BELOW,\n    horizontal: AUC_POSITIONS.BEFORE\n  }\n  }</p>\n",
                    "line": 66,
                    "type": "AucDropdownConfig",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link options} - It's an `@Input()` parameter. <br>\nList of options in popover. <br>\nIt's an optional parameter.\n",
                    "description": "<p>{@link options} - It&#39;s an <code>@Input()</code> parameter. <br>\nList of options in popover. <br>\nIt&#39;s an optional parameter.</p>\n",
                    "line": 41,
                    "type": "AucAccountOption[]",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "40",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link size} - It's an `@Input()` parameter. <br>\nSets size of the avatar. <br>\nIt's an optional parameter. The default value is 40.\n",
                    "description": "<p>{@link size} - It&#39;s an <code>@Input()</code> parameter. <br>\nSets size of the avatar. <br>\nIt&#39;s an optional parameter. The default value is 40.</p>\n",
                    "line": 49,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "optionClick",
                    "defaultValue": "new EventEmitter<AucAccountOption>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link optionEmitter} - It's an `@Output()` parameter. <br>\nEmits selected option from the list.\n",
                    "description": "<p>{@link optionEmitter} - It&#39;s an <code>@Output()</code> parameter. <br>\nEmits selected option from the list.</p>\n",
                    "line": 81,
                    "type": "EventEmitter<AucAccountOption>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_sub",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 87,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "accountAddress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 84,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "disconnectBtnColor",
                    "defaultValue": "AS_COLOR_GROUP.RED",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AsColorGroup",
                    "optional": false,
                    "description": "",
                    "line": 85,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isOptionsOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_closeOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onChangeWalletProviderClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onDisconnectClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onOptionClick",
                    "args": [
                        {
                            "name": "option",
                            "type": "AucAccountOption",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "AucAccountOption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setOpened",
                    "args": [
                        {
                            "name": "opened",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "opened",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { AUC_POSITIONS } from '../enums';\nimport { AucDropdownConfig } from '../dropdown-menu';\nimport { AucWalletConnectService } from '../services';\nimport { AS_COLOR_GROUP, AsColorGroup } from '@applicature/styles';\nimport { AucAccountData, AucAccountOption } from './interfaces';\n\n\n@Component({\n  selector: 'auc-account-button',\n  templateUrl: './account-button.component.html',\n  styleUrls: [ './account-button.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AucAccountButtonComponent implements OnInit {\n  /**\n   * {@link account} - It's an `@Input()` parameter. <br>\n   * User account related information. <br>\n   * Required parameter.\n   */\n  @Input()\n  public account!: AucAccountData;\n\n  /**\n   * {@link options} - It's an `@Input()` parameter. <br>\n   * List of options in popover. <br>\n   * It's an optional parameter.\n   */\n  @Input()\n  public options: AucAccountOption[] = [];\n\n  /**\n   * {@link size} - It's an `@Input()` parameter. <br>\n   * Sets size of the avatar. <br>\n   * It's an optional parameter. The default value is 40.\n   */\n  @Input()\n  public size: number = 40;\n\n  /**\n   * {@link accountDropdownConfig} - It's an `@Input()` parameter. <br>\n   * You can customize dropdown position and overlay. <br>\n   * This is an optional parameter. <br>\n   * The default value is: <br>\n   * {\n   *   overlay: {\n   *     transparent: true\n   *   },\n   *   position: {\n   *     vertical: AUC_POSITIONS.BELOW,\n   *     horizontal: AUC_POSITIONS.BEFORE\n   *   }\n *   }\n   */\n  @Input() accountDropdownConfig: AucDropdownConfig = {\n    overlay: {\n      transparent: true\n    },\n    position: {\n      vertical: AUC_POSITIONS.BELOW,\n      horizontal: AUC_POSITIONS.BEFORE\n    }\n  }\n\n  /**\n   * {@link optionEmitter} - It's an `@Output()` parameter. <br>\n   * Emits selected option from the list.\n   */\n  @Output('optionClick')\n  public optionEmitter: EventEmitter<AucAccountOption> = new EventEmitter<AucAccountOption>();\n\n  public isOptionsOpen: boolean = false;\n  public accountAddress!: string;\n  public disconnectBtnColor: AsColorGroup = AS_COLOR_GROUP.RED;\n\n  private _sub: Subscription = new Subscription();\n\n  constructor(\n    private _cdr: ChangeDetectorRef,\n    private _walletConnectService: AucWalletConnectService,\n    private _elementRef: ElementRef<HTMLElement>,\n  ) {\n  }\n\n  public ngOnInit(): void {\n    this._sub.add(\n      this._walletConnectService.accountsChanged$\n        .subscribe((accounts) => {\n          this.accountAddress = accounts?.length && accounts[0];\n\n          this._closeOptions();\n        }),\n    );\n  }\n\n  public setOpened(opened: boolean): void {\n    this.isOptionsOpen = opened;\n  }\n\n  public onOptionClick(option: AucAccountOption): void {\n    this._closeOptions();\n\n    this.optionEmitter.emit(option);\n  }\n\n  public onChangeWalletProviderClick(): void {\n    this._closeOptions();\n\n    this._walletConnectService.connectWallet(true)\n      .subscribe();\n  }\n\n  public onDisconnectClick(): void {\n    this._closeOptions();\n\n    this._walletConnectService.disconnectWallet()\n      .subscribe();\n  }\n\n  private _closeOptions() {\n    this.setOpened(false);\n    this._cdr.markForCheck();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/src/lib/scss/variables\";\n@import \"../../../../styles/src/lib/scss/mixins\";\n@import \"../../../../styles/src/lib/scss/functions\";\n\n:host {\n  display: inline-block;\n}\n\n.auc-account-button {\n  cursor: pointer;\n}\n\n.auc-account-button-options {\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  font-family: $as-font-family;\n  min-width: 250px;\n  padding: 8px 0;\n  background: getColor(white, base);\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(56, 64, 75, 0.1);\n  list-style-type: none;\n}\n\n.auc-account-button-header {\n  display: inline-block;\n  padding: 0 12px;\n  margin-top: 4px;\n  margin-bottom: 8px;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 20px;\n  color: getColor(grey, base);\n}\n\n.auc-account-button-user-info {\n  display: flex;\n  align-items: center;\n  font-family: $as-font-family;\n}\n\n.auc-account-button-user-info-avatar {\n  margin-right: 12px;\n}\n\n.auc-account-button-user-info-name {\n  display: flex;\n  flex-direction: column;\n  margin-right: auto;\n\n  > h1 {\n    margin: 0;\n    font-weight: bold;\n    font-size: 16px;\n    line-height: 24px;\n    color: $black;\n  }\n\n  > span {\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 20px;\n    color: getColor(grey, base);\n  }\n}\n\n.auc-account-button-user-info-copy {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  margin-left: 12px;\n  cursor: pointer;\n  border-radius: 50%;\n  @include transition;\n\n  &:hover {\n    background: getColor(grey, background);\n\n    &:before {\n      color: getColor(grey, base);\n    }\n  }\n\n  &:before {\n    font-size: 18px;\n    color: getColor(grey, hover);\n  }\n}\n\n.auc-account-button-options-item {\n  display: flex;\n  align-items: center;\n  height: 40px;\n  padding: 8px 12px;\n  @include transition;\n\n  &:hover {\n    cursor: pointer;\n    background: getColor(grey, background);\n  }\n\n  &.auc-options-item-disabled {\n    cursor: default;\n    opacity: .5;\n    pointer-events: none;\n  }\n}\n\n.auc-account-button-options-name {\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: $black;\n}\n\n.auc-account-button-options-footer {\n  display: flex;\n  flex-direction: column;\n  padding: 8px 12px;\n}\n\n.auc-account-button-options-button {\n  margin-bottom: 8px;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n}\n",
                    "styleUrl": "./account-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 87,
                "jsdoctags": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<auc-avatar class=\"auc-account-button\"\n            aucTrigger\n            #networkOptionsTrigger=\"aucTrigger\"\n            [src]=\"account?.image\"\n            [size]=\"size\"\n            (onShowHide)=\"setOpened($event)\"\n>\n</auc-avatar>\n\n<auc-dropdown-menu *ngIf=\"isOptionsOpen\"\n                   [config]=\"accountDropdownConfig\"\n                   [trigger]=\"networkOptionsTrigger\"\n>\n  <ul class=\"auc-account-button-options\">\n    <li class=\"auc-account-button-header\">Connected with Metamask</li>\n\n    <li class=\"auc-account-button-header\">\n      <div class=\"auc-account-button-user-info\">\n        <auc-avatar [src]=\"account?.image\"\n                    [size]=\"48\"\n                    class=\"auc-account-button-user-info-avatar\">\n        </auc-avatar>\n\n        <div class=\"auc-account-button-user-info-name\">\n          <h1>{{ account?.name || (accountAddress | aucShortAddress) }}</h1>\n          <span *ngIf=\"account?.name\">{{ accountAddress | aucShortAddress }}</span>\n        </div>\n\n        <auc-copy-to-clipboard [value]=\"accountAddress\"\n                               class=\"auc-account-button-user-info-copy\"\n        >\n        </auc-copy-to-clipboard>\n      </div>\n    </li>\n\n    <li *ngFor=\"let option of options\"\n        (click)=\"onOptionClick(option)\"\n        [class.auc-options-item-disabled]=\"option.disabled\"\n        class=\"auc-account-button-options-item\">\n      <span class=\"auc-account-button-options-name\">{{ option.name }}</span>\n    </li>\n\n    <li class=\"auc-account-button-options-footer\">\n      <auc-button [adaptive]=\"true\"\n                  (onClick)=\"onChangeWalletProviderClick()\"\n                  label=\"Change wallet provider\"\n                  class=\"auc-account-button-options-button\">\n      </auc-button>\n      <auc-button [adaptive]=\"true\"\n                  (onClick)=\"onDisconnectClick()\"\n                  [color]=\"disconnectBtnColor\"\n                  label=\"Disconnect\"\n                  class=\"auc-account-button-options-button\">\n      </auc-button>\n    </li>\n  </ul>\n</auc-dropdown-menu>\n"
        },
        {
            "name": "AucAccountModalComponent",
            "id": "component-AucAccountModalComponent-59eccf192e2ef17b6cbd8eeb072bf5e1340741f6e8934d24222e82e958cc68b3ed02a0963ddf1b0f86b4527e46b845d3bcf3f6a26144cd0b5c3b777d45564083",
            "file": "projects/applicature/components/src/lib/modals/account-modal/account-modal.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-account-modal",
            "styleUrls": [
                "./account-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./account-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_sub",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "accountAddress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucAccountModalData",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "etherscanAddress$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "identicon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLDivElement",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "transactions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<AucEtherscanTransactionLocalStorage[]>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onChangeClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onClearTransactionsClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onCloseClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onDisconnectClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit, } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AUC_VALUE_TYPES, aucCheckValueType, aucGenerateJazzicon } from '../../helpers';\nimport { AucNetworkOption, AucEtherscanTransactionLocalStorage } from '../../interfaces';\nimport { AucAccountModalData } from './interfaces';\nimport { AucDialogConfig, AucDialogRef } from '../../dialog';\nimport { AucConnectionState, AucWalletConnectService } from '../../services';\nimport { AucTransactionService } from '../../transactions';\n\n\n@Component({\n  selector: 'auc-account-modal',\n  templateUrl: './account-modal.component.html',\n  styleUrls: [ './account-modal.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AucAccountModalComponent implements OnInit, OnDestroy {\n  public identicon: HTMLDivElement;\n  public accountAddress: string;\n  public etherscanAddress$: Observable<string>;\n  public transactions$: Observable<AucEtherscanTransactionLocalStorage[]>;\n  public data: AucAccountModalData;\n\n  private _sub: Subscription = new Subscription();\n\n  constructor(\n    private _config: AucDialogConfig<AucAccountModalData>,\n    private _dialogRef: AucDialogRef,\n    private _cdr: ChangeDetectorRef,\n    private _walletConnectService: AucWalletConnectService,\n    private _transactionService: AucTransactionService\n  ) {\n    this.data = this._config.data;\n    this.transactions$ = this._transactionService.transactionsChanged$;\n\n    this.etherscanAddress$ = this._walletConnectService.selectedNetwork$\n      .pipe(\n        map((network: AucNetworkOption) => {\n          const connectionInfo: AucConnectionState = this._walletConnectService.connectionState;\n\n          if (!network || !network.blockExplorerUrl || !connectionInfo?.state?.address) {\n            return null;\n          }\n\n          return `${network.blockExplorerUrl}/address/${connectionInfo.state.address}`\n        })\n      );\n  }\n\n  public ngOnInit(): void {\n    this._sub.add(\n      this._walletConnectService.accountsChanged$\n        .pipe(\n          filter((accounts) => accounts?.length > 0)\n        )\n        .subscribe(([ accountAddress ]) => {\n          this.accountAddress = accountAddress;\n          this.identicon = aucGenerateJazzicon(this.accountAddress);\n\n          this._cdr.markForCheck();\n        })\n    );\n  }\n\n  public ngOnDestroy(): void {\n    this._transactionService.markAsViewed();\n\n    this._sub.unsubscribe();\n  }\n\n  public onCloseClick(): void {\n    this._dialogRef.close();\n  }\n\n  public onClearTransactionsClick(): void {\n    this._transactionService.clearTransactions();\n  }\n\n  public onChangeClick(): void {\n    if (aucCheckValueType(this.data.change, AUC_VALUE_TYPES.FUNCTION)) {\n      this.data.change();\n    }\n  }\n\n  public onDisconnectClick(): void {\n    if (aucCheckValueType(this.data.disconnect, AUC_VALUE_TYPES.FUNCTION)) {\n      this.data.disconnect();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../../styles/src/lib/scss/variables\";\n@import \"../../../../../styles/src/lib/scss/functions\";\n@import \"../../../../../styles/src/lib/scss/mixins\";\n\n:host {\n  display: block;\n  height: 100%;\n}\n\n.auc-account {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  font-family: $as-font-family;\n  padding-top: 20px;\n\n  & > *:not(.auc-dialog-header) {\n    width: 100%;\n  }\n}\n\n.auc-dialog-header {\n  margin-left: 20px;\n  margin-right: 20px;\n  width: calc(100% - 40px);\n}\n\n.auc-account-info {\n  margin: 0 20px 20px;\n  border: 1px solid getColor(grey, light);\n}\n\n.auc-info {\n  padding: 20px 16px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  color: getColor(grey, base);\n}\n\n.auc-info-header,\n.auc-info-main {\n  margin-bottom: 12px;\n}\n\n.auc-info-header,\n.auc-info-main,\n.auc-info-footer {\n  display: flex;\n  align-items: center;\n}\n\n.auc-info-header {\n  > span {\n    font-weight: 500;\n    font-size: 13px;\n    line-height: 16px;\n    margin-right: auto;\n  }\n\n  .auc-info-header-change,\n  .auc-info-header-disconnect {\n    font-family: $as-font-family;\n    font-size: 13px;\n    font-weight: 500;\n    padding: 4px 8px;\n    border-radius: 8px;\n    background-color: transparent;\n    @include transition;\n\n    &:hover {\n      cursor: pointer;\n    }\n  }\n\n  .auc-info-header-change {\n    margin-right: 8px;\n    color: getColor(blue, base);\n    border: 1px solid getColor(blue, base);\n  }\n\n  .auc-info-header-disconnect {\n    color: getColor(red, base);\n    border: 1px solid getColor(red, base);\n  }\n}\n\n.auc-info-main {\n  > span {\n    display: inline-block;\n    margin-left: 8px;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 24px;\n    color: $black;\n  }\n}\n\n.auc-info-footer {\n  .auc-info-footer-item {\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    color: getColor(grey, base);\n    font-size: 13px;\n    font-weight: 500;\n    margin-right: 16px;\n    @include transition;\n\n    &:last-child {\n      margin-right: 0;\n    }\n\n    i {\n      display: inline-block;\n      margin-right: 8px;\n\n      &:before {\n        font-size: 20px;\n        color: getColor(grey, base);\n      }\n    }\n\n    &:hover span {\n      cursor: pointer;\n      text-decoration: underline;\n    }\n  }\n}\n\n.auc-account-footer {\n  padding: 20px 0;\n  background-color: getColor(gray, background);\n}\n\n.auc-account-transactions {\n  display: flex;\n  flex-direction: column;\n  max-height: 392px;\n  overflow-y: auto;\n  padding: 0 20px;\n}\n\n.auc-account-transactions-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 12px;\n}\n\n.auc-account-transactions-header-title {\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: $black;\n  padding-right: 15px;\n}\n\n.auc-account-transactions-header-action {\n  background-color: transparent;\n  padding: 0;\n  border: none;\n  outline: none;\n  color: getColor(blue, base);\n  font-style: normal;\n  font-weight: 500;\n  font-size: 13px;\n  line-height: 16px;\n  @include transition;\n\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n  }\n}\n\n@media (max-width: 767px) {\n  .auc-account-transactions {\n    max-height: calc(100vh - 273px);\n  }\n}\n",
                    "styleUrl": "./account-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_config",
                        "type": "AucDialogConfig<AucAccountModalData>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_dialogRef",
                        "type": "AucDialogRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_transactionService",
                        "type": "AucTransactionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "_config",
                        "type": "AucDialogConfig<AucAccountModalData>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dialogRef",
                        "type": "AucDialogRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_transactionService",
                        "type": "AucTransactionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"auc-account\">\n  <div class=\"auc-dialog-header\">\n    <h1>{{ data.header }}</h1>\n\n    <button type=\"button\" class=\"auc-close-btn\">\n      <auc-icon icon=\"wcl-icon-close\"\n                (click)=\"onCloseClick()\"\n      >\n      </auc-icon>\n    </button>\n  </div>\n\n  <div class=\"auc-account-info auc-info\">\n    <div class=\"auc-info-header\">\n      <span>Connected with Metamask</span>\n\n      <button (click)=\"onChangeClick()\"\n              aucRipple\n              class=\"auc-info-header-change\"\n      >\n        Change\n      </button>\n\n      <button (click)=\"onDisconnectClick()\"\n              aucRipple\n              class=\"auc-info-header-disconnect\"\n      >\n        Disconnect\n      </button>\n    </div>\n\n    <div class=\"auc-info-main\" [aucIdenticon]=\"identicon\">\n      <span>{{ accountAddress | aucShortAddress }}</span>\n    </div>\n    <div class=\"auc-info-footer\">\n      <span ngxClipboard\n            [cbContent]=\"accountAddress\"\n            class=\"auc-info-footer-item\"><i class=\"wcl-icon-copy\"></i><span>Copy Address</span></span>\n      <a class=\"auc-info-footer-item\" *ngIf=\"(etherscanAddress$ | async) as ethAddress\" [href]=\"ethAddress\"\n         target=\"_blank\"><i class=\"wcl-icon-external-link\"></i><span>View on Explorer</span></a>\n    </div>\n  </div>\n\n  <ng-container *ngIf=\"(transactions$ | async) as transactions\">\n    <div class=\"auc-account-footer\">\n      <div class=\"auc-account-transactions\">\n        <div class=\"auc-account-transactions-header\" *ngIf=\"transactions.length\">\n          <div class=\"auc-account-transactions-header-title\">Recent transactions</div>\n          <button type=\"button\"\n                  class=\"auc-account-transactions-header-action\"\n                  (click)=\"onClearTransactionsClick()\"\n          >\n            (clear all)\n          </button>\n        </div>\n        <auc-transactions-list [transactions]=\"transactions\"></auc-transactions-list>\n      </div>\n    </div>\n  </ng-container>\n</div>\n"
        },
        {
            "name": "AucAlertComponent",
            "id": "component-AucAlertComponent-68d57377444f1c5b791b10de9467c37ebdaf116d406999800d311eff373fa802ceb035a64e50d43464ce7993ec4a6da85c5fc85725df5237925a4a820e966e0b",
            "file": "projects/applicature/components/src/lib/alert/alert.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-alert",
            "styleUrls": [
                "./alert.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./alert.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "AS_COLOR_GROUP.RED",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link color} - It's an `@Input()` parameter.\nTheme color palette for the alert. This sets the alert background color.\nIt's an optional parameter. The default value is red.\n",
                    "description": "<p>{@link color} - It&#39;s an <code>@Input()</code> parameter.\nTheme color palette for the alert. This sets the alert background color.\nIt&#39;s an optional parameter. The default value is red.</p>\n",
                    "line": 50,
                    "type": "AsColorGroup",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link icon}  It's an `Input()` parameter.\nThis sets the alert icon otherwise it’ll be hidden.\nYou can use supported icons from enum {@link AUC_WLC_ICON} or string.\nIf you want to use custom icon you need to provide url to the image as a string value.\nIt's an optional parameter.\nThis is required parameter.\n",
                    "description": "<p>{@link icon}  It&#39;s an <code>Input()</code> parameter.\nThis sets the alert icon otherwise it’ll be hidden.\nYou can use supported icons from enum {@link AUC_WLC_ICON} or string.\nIf you want to use custom icon you need to provide url to the image as a string value.\nIt&#39;s an optional parameter.\nThis is required parameter.</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconPosition",
                    "defaultValue": "AUC_ALERT_POSITION.LEFT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link iconPosition} - It's an `@Input()` parameter.\nControls icon position.\nIt's an optional parameter. The default value is right.\nYou can use enum {@link AUC_ALERT_POSITION}\n",
                    "description": "<p>{@link iconPosition} - It&#39;s an <code>@Input()</code> parameter.\nControls icon position.\nIt&#39;s an optional parameter. The default value is right.\nYou can use enum {@link AUC_ALERT_POSITION}</p>\n",
                    "line": 42,
                    "type": "AucAlertPosition",
                    "decorators": []
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link text} - It's an `@Input()` parameter.\nThe message to show in the alert.\nThis is required parameter.\n",
                    "description": "<p>{@link text} - It&#39;s an <code>@Input()</code> parameter.\nThe message to show in the alert.\nThis is required parameter.</p>\n",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "styleProperties",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucSetStyleProp[]",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { AS_COLOR_GROUP, AsColorGroup, AsColorProperties, AsColors } from '@applicature/styles';\n\nimport { AucSetStyleProp } from '../directives';\nimport { AucAlertPosition } from './types';\nimport { AUC_ALERT_POSITION } from './enums';\n\n\n@Component({\n  selector: 'auc-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: [ './alert.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AucAlertComponent implements OnInit, OnChanges {\n  /**\n   * {@link text} - It's an `@Input()` parameter.\n   * The message to show in the alert.\n   * This is required parameter.\n   */\n  @Input()\n  public text!: string;\n\n  /**\n   * {@link icon}  It's an `Input()` parameter.\n   * This sets the alert icon otherwise it’ll be hidden.\n   * You can use supported icons from enum {@link AUC_WLC_ICON} or string.\n   * If you want to use custom icon you need to provide url to the image as a string value.\n   * It's an optional parameter.\n   * This is required parameter.\n   */\n  @Input()\n  public icon!: string;\n\n  /**\n   * {@link iconPosition} - It's an `@Input()` parameter.\n   * Controls icon position.\n   * It's an optional parameter. The default value is right.\n   * You can use enum {@link AUC_ALERT_POSITION}\n   */\n  @Input()\n  public iconPosition: AucAlertPosition = AUC_ALERT_POSITION.LEFT;\n\n  /**\n   * {@link color} - It's an `@Input()` parameter.\n   * Theme color palette for the alert. This sets the alert background color.\n   * It's an optional parameter. The default value is red.\n   */\n  @Input()\n  public color: AsColorGroup = AS_COLOR_GROUP.RED;\n\n  public styleProperties: AucSetStyleProp[] = [];\n\n  public get classNames(): { [el: string]: boolean } {\n    return {\n      ['auc-alert']: true,\n      [`auc-alert-white`]: this.color === 'white',\n      [`auc-alert-icon-${this.iconPosition}`]: true,\n    };\n  }\n\n  public ngOnInit(): void {\n    this.ngOnChanges();\n  }\n\n  public ngOnChanges(): void {\n    const { base, text } = AsColors[this.color] as AsColorProperties;\n\n    this.styleProperties = [\n      {\n        name: '--auc-alert-text',\n        value: text\n      },\n      {\n        name: '--auc-alert-background',\n        value: base\n      }\n    ];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/src/lib/scss/variables\";\n@import \"../../../../styles/src/lib/scss/functions\";\n\n:host {\n  display: block;\n}\n\n.auc-alert {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px;\n  background: var(--auc-alert-background);\n}\n\n.auc-alert-icon-right {\n  flex-direction: row-reverse;\n}\n\n.auc-alert-white {\n  .auc-alert-icon:before {\n    color: getColor(grey, base);\n  }\n}\n\n.auc-alert-icon {\n  margin: 0 8px;\n  display: inline-block;\n  font-size: 20px;\n\n  &:before {\n    color: var(--auc-alert-text);\n  }\n}\n\n.auc-alert-text {\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 20px;\n  font-family: $as-font-family;\n  color: var(--auc-alert-text);\n}\n\n",
                    "styleUrl": "./alert.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "accessors": {
                "classNames": {
                    "name": "classNames",
                    "getSignature": {
                        "name": "classNames",
                        "type": "literal type",
                        "returnType": "literal type",
                        "line": 54
                    }
                }
            },
            "templateData": "<div [ngClass]=\"classNames\"\n     [aucSetStyleProps]=\"styleProperties\"\n>\n  <span *ngIf=\"icon\" class=\"auc-alert-icon {{ icon }}\"></span>\n\n  <span class=\"auc-alert-text\">{{ text }}</span>\n</div>\n"
        },
        {
            "name": "AucAvatarComponent",
            "id": "component-AucAvatarComponent-7cedf7b22c8ec737d617b717815b27da51110ed680c6dce927beb85a4dfaf46ad117e3f4b945f4322a4bc87deb048999543194e06813054304d5e9971b9acea5",
            "file": "projects/applicature/components/src/lib/avatar/avatar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-avatar",
            "styleUrls": [
                "./avatar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./avatar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "40",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link size} - It's an `@Input()` parameter.\nSets size of the avatar.\nIt's an optional parameter. The default value is 40.\n",
                    "description": "<p>{@link size} - It&#39;s an <code>@Input()</code> parameter.\nSets size of the avatar.\nIt&#39;s an optional parameter. The default value is 40.</p>\n",
                    "line": 30,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "src",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link src} - It's an `@Input()` parameter.\nSets provided image url as avatar otherwise default user icon will be shown.\nIt's an optional parameter.\n",
                    "description": "<p>{@link src} - It&#39;s an <code>@Input()</code> parameter.\nSets provided image url as avatar otherwise default user icon will be shown.\nIt&#39;s an optional parameter.</p>\n",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultUserIcon",
                    "defaultValue": "AUC_WLC_ICON.USER",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucWlcIcon",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "defaultUserIconColor",
                    "defaultValue": "AsColors[AS_COLOR_GROUP.WHITE].base",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucWlcIcon",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "iconStyleProperties",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucSetStyleProp[]",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setIconStylesProperty",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input, OnChanges } from '@angular/core';\n\nimport { AS_COLOR_GROUP, AsColors } from '@applicature/styles';\n\nimport { AUC_WLC_ICON, AucWlcIcon } from '../icon';\nimport { AucSetStyleProp } from '../directives';\n\n\n@Component({\n  selector: 'auc-avatar',\n  templateUrl: './avatar.component.html',\n  styleUrls: [ './avatar.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AucAvatarComponent implements OnChanges {\n  /**\n   * {@link src} - It's an `@Input()` parameter.\n   * Sets provided image url as avatar otherwise default user icon will be shown.\n   * It's an optional parameter.\n   */\n  @Input()\n  public src?: string;\n\n  /**\n   * {@link size} - It's an `@Input()` parameter.\n   * Sets size of the avatar.\n   * It's an optional parameter. The default value is 40.\n   */\n  @Input()\n  public size: number = 40;\n\n  public iconStyleProperties: AucSetStyleProp[] = [];\n  public defaultUserIcon: AucWlcIcon = AUC_WLC_ICON.USER;\n  public defaultUserIconColor: AucWlcIcon = AsColors[AS_COLOR_GROUP.WHITE].base;\n\n  constructor() {\n    this.setIconStylesProperty();\n  }\n\n\n  ngOnChanges(): void {\n    this.setIconStylesProperty();\n  }\n\n  private setIconStylesProperty(): void {\n    this.iconStyleProperties = [\n      {\n        name: 'width',\n        value: `${this.size}px`\n      },\n      {\n        name: 'height',\n        value: `${this.size}px`\n      }\n    ].concat(this.src\n      ? []\n      : {\n        name: '--auc-avatar-icon-size',\n        value: `${this.size - (this.size / 3)}px`\n      }\n    )\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/src/lib/scss/functions\";\n\n:host {\n  display: inline-block;\n}\n\n.auc-avatar {\n  border-radius: 50%;\n  overflow: hidden;\n  background: getColor(grey, hover);\n\n  .auc-avatar-img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n\n  .auc-avatar-icon {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    font-size: var(--auc-avatar-icon-size);\n  }\n}\n",
                    "styleUrl": "./avatar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 34
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div\n     [aucSetStyleProps]=\"iconStyleProperties\"\n     class=\"auc-avatar\">\n  <img *ngIf=\"src; else iconRef\" [src]=\"src\" class=\"auc-avatar-img\" alt=\"\">\n\n  <ng-template #iconRef>\n    <auc-icon [icon]=\"defaultUserIcon\"\n              [color]=\"defaultUserIconColor\"\n              class=\"auc-avatar-icon\"\n    >\n    </auc-icon>\n  </ng-template>\n</div>\n"
        },
        {
            "name": "AucButtonComponent",
            "id": "component-AucButtonComponent-0692461d83d40645f31498520162e66dcf98c145d27d1154382a397fd340df8f8bb8a185ba00bfc81a0ecd64b0de0ab6c84bb601d0efe53240329e79fafefa3c",
            "file": "projects/applicature/components/src/lib/button/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "adaptive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link adaptive} - It's an `@Input()` parameter.\nWhether the button is full width.\nIt's an optional parameter. The default value is false.\n",
                    "description": "<p>{@link adaptive} - It&#39;s an <code>@Input()</code> parameter.\nWhether the button is full width.\nIt&#39;s an optional parameter. The default value is false.</p>\n",
                    "line": 55,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "AUC_BUTTON_APPEARANCE.FLAT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link appearance} - It's an `@Input()` parameter.\nIt's an optional parameter. The default value is flat.\nYou can use enum {@link AUC_BUTTON_APPEARANCE}.\n",
                    "description": "<p>{@link appearance} - It&#39;s an <code>@Input()</code> parameter.\nIt&#39;s an optional parameter. The default value is flat.\nYou can use enum {@link AUC_BUTTON_APPEARANCE}.</p>\n",
                    "line": 109,
                    "type": "AucButtonAppearance",
                    "decorators": []
                },
                {
                    "name": "borderRadius",
                    "defaultValue": "8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link borderRadius} - It's an `@Input()` parameter.\nSets borderRadius of the button.\nIt's an optional parameter. The default value is 8.\n",
                    "description": "<p>{@link borderRadius} - It&#39;s an <code>@Input()</code> parameter.\nSets borderRadius of the button.\nIt&#39;s an optional parameter. The default value is 8.</p>\n",
                    "line": 30,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "AS_COLOR_GROUP.BLUE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link color} - It's an `@Input()` parameter.\nSets theme of the button.\nIt's an optional parameter. The default value is blue.\nYou can use enum {@link AS_COLOR_GROUP}.\n",
                    "description": "<p>{@link color} - It&#39;s an <code>@Input()</code> parameter.\nSets theme of the button.\nIt&#39;s an optional parameter. The default value is blue.\nYou can use enum {@link AS_COLOR_GROUP}.</p>\n",
                    "line": 39,
                    "type": "AsColorGroup",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link disabled} - It's an `@Input()` parameter.\nWhether the button is disabled.\nIt's an optional parameter. The default value is false.\n",
                    "description": "<p>{@link disabled} - It&#39;s an <code>@Input()</code> parameter.\nWhether the button is disabled.\nIt&#39;s an optional parameter. The default value is false.</p>\n",
                    "line": 47,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "40",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link height} - It's an `@Input()` parameter.\nSets height of the button.\nIt's an optional parameter. The default value is 40.\n",
                    "description": "<p>{@link height} - It&#39;s an <code>@Input()</code> parameter.\nSets height of the button.\nIt&#39;s an optional parameter. The default value is 40.</p>\n",
                    "line": 63,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "identicon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link identicon} - It's an `@Input()` parameter.\nShows identicon if provided.\nIt's an optional parameter.\n",
                    "description": "<p>{@link identicon} - It&#39;s an <code>@Input()</code> parameter.\nShows identicon if provided.\nIt&#39;s an optional parameter.</p>\n",
                    "line": 71,
                    "type": "HTMLDivElement",
                    "decorators": []
                },
                {
                    "name": "identiconPosition",
                    "defaultValue": "AUC_IDENTICON_POSITION.RIGHT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link identiconPosition} - It's an `@Input()` parameter.\nControls identicon position.\nIt's an optional parameter. The default value is right;\nYou can use enum ${@link AUC_IDENTICON_POSITION}\n",
                    "description": "<p>{@link identiconPosition} - It&#39;s an <code>@Input()</code> parameter.\nControls identicon position.\nIt&#39;s an optional parameter. The default value is right;\nYou can use enum ${@link AUC_IDENTICON_POSITION}</p>\n",
                    "line": 80,
                    "type": "AucIdenticonPosition",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link label} - It's an `@Input()` parameter.\nText for the button label.\n",
                    "description": "<p>{@link label} - It&#39;s an <code>@Input()</code> parameter.\nText for the button label.</p>\n",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "leftIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link leftIcon} - It's an `@Input()` parameter.\nShows left icon if provided.\nYou can use supported icons from enum {@link AUC_WLC_ICON} or string;\nIf you want to use custom icon you need to provide url to the image as a string value.\nIt's an optional parameter.\n",
                    "description": "<p>{@link leftIcon} - It&#39;s an <code>@Input()</code> parameter.\nShows left icon if provided.\nYou can use supported icons from enum {@link AUC_WLC_ICON} or string;\nIf you want to use custom icon you need to provide url to the image as a string value.\nIt&#39;s an optional parameter.</p>\n",
                    "line": 91,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "pending",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link pending} - It's an `@Input()` parameter.\nWhether the button shows spinner.\nIt's an optional parameter. The default value is false.\n",
                    "description": "<p>{@link pending} - It&#39;s an <code>@Input()</code> parameter.\nWhether the button shows spinner.\nIt&#39;s an optional parameter. The default value is false.</p>\n",
                    "line": 125,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "rightIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link rightIcon} - It's an `@Input()` parameter.\nShows right icon if provided.\nYou can use supported icons from enum {@link AUC_WLC_ICON} or string;\nIf you want to use custom icon you need to provide url to the image as a string value.\nIt's an optional parameter.\n",
                    "description": "<p>{@link rightIcon} - It&#39;s an <code>@Input()</code> parameter.\nShows right icon if provided.\nYou can use supported icons from enum {@link AUC_WLC_ICON} or string;\nIf you want to use custom icon you need to provide url to the image as a string value.\nIt&#39;s an optional parameter.</p>\n",
                    "line": 101,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "transparent",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link transparent} - It's an `@Input()` parameter.\nWhether the button is transparent.\nIt's an optional parameter. The default value is false.\n",
                    "description": "<p>{@link transparent} - It&#39;s an <code>@Input()</code> parameter.\nWhether the button is transparent.\nIt&#39;s an optional parameter. The default value is false.</p>\n",
                    "line": 117,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link type} - It's an `@Input()` parameter.\nStandard HTMLButtonElement type {@link HTMLButtonElement.type}: 'button' | 'reset' | 'submit'.\nIt's an optional parameter. The default value is button.\n",
                    "description": "<p>{@link type} - It&#39;s an <code>@Input()</code> parameter.\nStandard HTMLButtonElement type {@link HTMLButtonElement.type}: &#39;button&#39; | &#39;reset&#39; | &#39;submit&#39;.\nIt&#39;s an optional parameter. The default value is button.</p>\n",
                    "line": 133,
                    "type": "\"button\" | \"reset\" | \"submit\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link onClickEmitter} - It's an `@Output()` parameter.\nEmits an action when button was clicked.\nEmitted value is native click value.\n",
                    "description": "<p>{@link onClickEmitter} - It&#39;s an <code>@Output()</code> parameter.\nEmits an action when button was clicked.\nEmitted value is native click value.</p>\n",
                    "line": 141,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "BUTTON_APPEARANCE",
                    "defaultValue": "AUC_BUTTON_APPEARANCE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 144,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "styleProperties",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucSetStyleProp[]",
                    "optional": false,
                    "description": "",
                    "line": 143,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output, } from '@angular/core';\n\nimport { AS_COLOR_GROUP, AsColorGroup, AsColorProperties, AsColors } from '@applicature/styles';\n\nimport { AucButtonAppearance } from './types';\nimport { AUC_BUTTON_APPEARANCE } from './enums';\nimport { AUC_IDENTICON_POSITION, AucIdenticonPosition, AucSetStyleProp } from '../directives';\n\n\n@Component({\n  selector: 'auc-button',\n  templateUrl: './button.component.html',\n  styleUrls: [ './button.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AucButtonComponent implements OnInit, OnChanges {\n  /**\n   * {@link label} - It's an `@Input()` parameter.\n   * Text for the button label.\n   */\n  @Input()\n  public label: string;\n\n  /**\n   * {@link borderRadius} - It's an `@Input()` parameter.\n   * Sets borderRadius of the button.\n   * It's an optional parameter. The default value is 8.\n   */\n  @Input()\n  public borderRadius: number = 8;\n\n  /**\n   * {@link color} - It's an `@Input()` parameter.\n   * Sets theme of the button.\n   * It's an optional parameter. The default value is blue.\n   * You can use enum {@link AS_COLOR_GROUP}.\n   */\n  @Input()\n  public color: AsColorGroup = AS_COLOR_GROUP.BLUE;\n\n  /**\n   * {@link disabled} - It's an `@Input()` parameter.\n   * Whether the button is disabled.\n   * It's an optional parameter. The default value is false.\n   */\n  @Input()\n  public disabled: boolean = false;\n\n  /**\n   * {@link adaptive} - It's an `@Input()` parameter.\n   * Whether the button is full width.\n   * It's an optional parameter. The default value is false.\n   */\n  @Input()\n  public adaptive: boolean = false;\n\n  /**\n   * {@link height} - It's an `@Input()` parameter.\n   * Sets height of the button.\n   * It's an optional parameter. The default value is 40.\n   */\n  @Input()\n  public height: number = 40;\n\n  /**\n   * {@link identicon} - It's an `@Input()` parameter.\n   * Shows identicon if provided.\n   * It's an optional parameter.\n   */\n  @Input()\n  public identicon: HTMLDivElement;\n\n  /**\n   * {@link identiconPosition} - It's an `@Input()` parameter.\n   * Controls identicon position.\n   * It's an optional parameter. The default value is right;\n   * You can use enum ${@link AUC_IDENTICON_POSITION}\n   */\n  @Input()\n  public identiconPosition: AucIdenticonPosition = AUC_IDENTICON_POSITION.RIGHT;\n\n  /**\n   * {@link leftIcon} - It's an `@Input()` parameter.\n   * Shows left icon if provided.\n   * You can use supported icons from enum {@link AUC_WLC_ICON} or string;\n   * If you want to use custom icon you need to provide url to the image as a string value.\n   * It's an optional parameter.\n   */\n\n  @Input()\n  public leftIcon: string;\n\n  /**\n   * {@link rightIcon} - It's an `@Input()` parameter.\n   * Shows right icon if provided.\n   * You can use supported icons from enum {@link AUC_WLC_ICON} or string;\n   * If you want to use custom icon you need to provide url to the image as a string value.\n   * It's an optional parameter.\n   */\n  @Input()\n  public rightIcon: string;\n\n  /**\n   * {@link appearance} - It's an `@Input()` parameter.\n   * It's an optional parameter. The default value is flat.\n   * You can use enum {@link AUC_BUTTON_APPEARANCE}.\n   */\n  @Input()\n  public appearance: AucButtonAppearance = AUC_BUTTON_APPEARANCE.FLAT;\n\n  /**\n   * {@link transparent} - It's an `@Input()` parameter.\n   * Whether the button is transparent.\n   * It's an optional parameter. The default value is false.\n   */\n  @Input()\n  public transparent: boolean = false;\n\n  /**\n   * {@link pending} - It's an `@Input()` parameter.\n   * Whether the button shows spinner.\n   * It's an optional parameter. The default value is false.\n   */\n  @Input()\n  public pending: boolean = false;\n\n  /**\n   * {@link type} - It's an `@Input()` parameter.\n   * Standard HTMLButtonElement type {@link HTMLButtonElement.type}: 'button' | 'reset' | 'submit'.\n   * It's an optional parameter. The default value is button.\n   */\n  @Input()\n  public type: 'button' | 'reset' | 'submit' = 'button';\n\n  /**\n   * {@link onClickEmitter} - It's an `@Output()` parameter.\n   * Emits an action when button was clicked.\n   * Emitted value is native click value.\n   */\n  @Output('onClick')\n  public onClickEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n  public styleProperties: AucSetStyleProp[] = [];\n  public BUTTON_APPEARANCE = AUC_BUTTON_APPEARANCE;\n\n  get iconColor(): string {\n    return this.color === AS_COLOR_GROUP.WHITE\n      ? AsColors[AS_COLOR_GROUP.GREY].base\n      : AsColors[AS_COLOR_GROUP.WHITE].base\n  }\n\n  public get classNames(): { [el: string]: boolean } {\n    return {\n      ['auc-button']: true,\n      [`auc-button-white`]: this.color === AS_COLOR_GROUP.WHITE,\n      ['auc-button-disabled']: this.disabled,\n      ['auc-button-adaptive']: this.adaptive,\n      ['auc-button-transparent']: this.transparent,\n      [`auc-button-${this.appearance}`]: true,\n    };\n  }\n\n  public ngOnInit(): void {\n    this.ngOnChanges();\n  }\n\n  public ngOnChanges(): void {\n    const colorProperties: AsColorProperties = AsColors[this.color || AS_COLOR_GROUP.BLUE];\n\n    const colorProps: AucSetStyleProp[] = Object.keys(colorProperties || {})\n      .map((prop: string) => {\n        return {\n          name: `--auc-button-${prop}`,\n          value: colorProperties[prop]\n        }\n      });\n\n    this.styleProperties = [\n      {\n        name: '--auc-button-radius',\n        value: `${this.borderRadius}px`\n      },\n      ...(colorProps || [])\n    ];\n  }\n\n  public onClick(event: any): void {\n    if (this.disabled) {\n      return;\n    }\n\n    this.onClickEmitter.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/src/lib/scss/variables\";\n@import \"../../../../styles/src/lib/scss/mixins\";\n\n:host {\n  display: inline-flex;\n}\n\n.auc-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 500;\n  font-size: 16px;\n  padding: 8px 14px;\n  position: relative;\n  cursor: pointer;\n  outline: none;\n  font-family: $as-font-family;\n  color: var(--auc-button-text);\n  border: 2px solid var(--auc-button-border);\n  border-radius: var(--auc-button-radius);\n  background: var(--auc-button-base);\n  @include transition;\n\n  &:hover {\n    background: var(--auc-button-hover);\n    border: 2px solid var(--auc-button-borderHover);\n  }\n\n  &:active:focus {\n    background: var(--auc-button-dark);\n    border: 2px solid var(--auc-button-borderFocus);\n  }\n\n  &.auc-button-disabled {\n    cursor: default;\n    pointer-events: none;\n    opacity: 0.7;\n  }\n\n  &.auc-button-icon {\n    padding: 10px 12px;\n  }\n\n  &.auc-button-adaptive {\n    width: 100%;\n  }\n\n  &.auc-button-transparent {\n    border: 2px solid transparent;\n    background: transparent;\n    @include transition;\n\n    &:hover {\n      background: transparent;\n      border: 2px solid var(--auc-button-borderHover);\n    }\n\n    &:active:focus {\n      background: transparent;\n      border: 2px solid var(--auc-button-borderFocus);\n    }\n  }\n\n  auc-icon {\n    &:not(.auc-button-icon) {\n      &.auc-button-left-icon {\n        margin-right: 8px;\n      }\n\n      &.auc-button-right-icon {\n        margin-left: 8px;\n      }\n    }\n  }\n\n  .auc-button-spinner {\n    margin-left: 8px;\n  }\n}\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "accessors": {
                "iconColor": {
                    "name": "iconColor",
                    "getSignature": {
                        "name": "iconColor",
                        "type": "string",
                        "returnType": "string",
                        "line": 146
                    }
                },
                "classNames": {
                    "name": "classNames",
                    "getSignature": {
                        "name": "classNames",
                        "type": "literal type",
                        "returnType": "literal type",
                        "line": 152
                    }
                }
            },
            "templateData": "<button [aucSetStyleProps]=\"styleProperties\"\n        [aucIdenticon]=\"identicon\"\n        [position]=\"identiconPosition\"\n        [type]=\"type\"\n        [style.height.px]=\"height\"\n        [disabled]=\"disabled\"\n        [ngClass]=\"classNames\"\n        (click)=\"onClick($event)\"\n>\n  <ng-container [ngSwitch]=\"appearance\">\n    <ng-container *ngSwitchCase=\"BUTTON_APPEARANCE.ICON\">\n      <auc-icon [icon]=\"leftIcon || rightIcon\"\n                        [color]=\"iconColor\"\n                        class=\"auc-button-icon\"\n      >\n      </auc-icon>\n    </ng-container>\n\n    <ng-container *ngSwitchDefault>\n      <auc-icon *ngIf=\"leftIcon\"\n                        [icon]=\"leftIcon\"\n                        [color]=\"iconColor\"\n                        class=\"auc-button-left-icon\"\n      >\n      </auc-icon>\n\n      <span class=\"auc-button-label\">{{ label }}</span>\n\n      <auc-icon *ngIf=\"!pending && rightIcon\"\n                        [icon]=\"rightIcon\"\n                        [color]=\"iconColor\"\n                        class=\"auc-button-right-icon\"\n      >\n      </auc-icon>\n\n      <auc-spinner *ngIf=\"pending\"\n                           [diameter]=\"20\"\n                           [width]=\"2\"\n                           class=\"auc-button-spinner\"\n      >\n      </auc-spinner>\n\n    </ng-container>\n  </ng-container>\n</button>\n"
        },
        {
            "name": "AucConnectWalletComponent",
            "id": "component-AucConnectWalletComponent-59d2c53833fa6fff9f084a1639e6f3f64bebfb31380ce63333df89567cb40422bf1c38705eac450aa706f6a1fc097ece6ba7068a224df092260bed06af224424",
            "file": "projects/applicature/components/src/lib/connect-wallet/connect-wallet.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-connect-wallet",
            "styleUrls": [
                "./connect-wallet.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./connect-wallet.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "account",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link account} - It's an `@Input()` parameter. <br>\nUser account related information. Needs for {@link AucAccountButtonComponent}. <br>\nThis is required parameter when appearance equals to {@link AUC_CONNECT_WALLET_APPEARANCE.ICON}\n",
                    "description": "<p>{@link account} - It&#39;s an <code>@Input()</code> parameter. <br>\nUser account related information. Needs for {@link AucAccountButtonComponent}. <br>\nThis is required parameter when appearance equals to {@link AUC_CONNECT_WALLET_APPEARANCE.ICON}</p>\n",
                    "line": 83,
                    "type": "AucAccountData",
                    "decorators": []
                },
                {
                    "name": "accountDropdownConfig",
                    "defaultValue": "{\n    overlay: {\n      transparent: true\n    },\n    position: {\n      vertical: AUC_POSITIONS.BELOW,\n      horizontal: AUC_POSITIONS.BEFORE\n    }\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link accountDropdownConfig} - It's an `@Input()` parameter. <br>\nYou can customize dropdown position and overlay. <br>\nThis is an optional parameter. <br>\nThe default value is: <br>\n{\n  overlay: {\n    transparent: true\n  },\n  position: {\n    vertical: AUC_POSITIONS.BELOW,\n    horizontal: AUC_POSITIONS.BEFORE\n  }\n}\n",
                    "description": "<p>{@link accountDropdownConfig} - It&#39;s an <code>@Input()</code> parameter. <br>\nYou can customize dropdown position and overlay. <br>\nThis is an optional parameter. <br>\nThe default value is: <br>\n{\n  overlay: {\n    transparent: true\n  },\n  position: {\n    vertical: AUC_POSITIONS.BELOW,\n    horizontal: AUC_POSITIONS.BEFORE\n  }\n}</p>\n",
                    "line": 108,
                    "type": "AucDropdownConfig",
                    "decorators": []
                },
                {
                    "name": "accountOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link accountOptions} - It's an `@Input()` parameter. <br>\nList of options in popover. Needs for {@link AucAccountButtonComponent}. <br>\nThis is an optional parameter, uses only with appearance {@link AUC_CONNECT_WALLET_APPEARANCE.ICON}\n",
                    "description": "<p>{@link accountOptions} - It&#39;s an <code>@Input()</code> parameter. <br>\nList of options in popover. Needs for {@link AucAccountButtonComponent}. <br>\nThis is an optional parameter, uses only with appearance {@link AUC_CONNECT_WALLET_APPEARANCE.ICON}</p>\n",
                    "line": 91,
                    "type": "AucAccountOption[]",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "AUC_CONNECT_WALLET_APPEARANCE.BUTTON",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link appearance} - It's an `@Input()` parameter. <br>\nAllows to control appearance components. Default is the button.\nIt's an optional parameter. The default value is {@link AUC_CONNECT_WALLET_APPEARANCE.BUTTON}. <br>\nYou can use enum {@link AUC_CONNECT_WALLET_APPEARANCE}.\n",
                    "description": "<p>{@link appearance} - It&#39;s an <code>@Input()</code> parameter. <br>\nAllows to control appearance components. Default is the button.\nIt&#39;s an optional parameter. The default value is {@link AUC_CONNECT_WALLET_APPEARANCE.BUTTON}. <br>\nYou can use enum {@link AUC_CONNECT_WALLET_APPEARANCE}.</p>\n",
                    "line": 43,
                    "type": "ConnectWalletAppearance",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link disabled} - It's an `@Input()` parameter. <br>\nWhether the button is disabled. <br>\nIt's an optional parameter. The default value is false.\n",
                    "description": "<p>{@link disabled} - It&#39;s an <code>@Input()</code> parameter. <br>\nWhether the button is disabled. <br>\nIt&#39;s an optional parameter. The default value is false.</p>\n",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "networkDropdownConfig",
                    "defaultValue": "{\n    overlay: {\n      transparent: true\n    },\n    position: {\n      vertical: AUC_POSITIONS.BELOW,\n      horizontal: AUC_POSITIONS.AFTER\n    }\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link networkDropdownConfig} - It's an `@Input()` parameter. <br>\nYou can customize dropdown position and overlay. <br>\nThis is an optional parameter. <br>\nThe default value is: <br>\n{\n  overlay: {\n    transparent: true\n  },\n  position: {\n    vertical: AUC_POSITIONS.BELOW,\n    horizontal: AUC_POSITIONS.AFTER\n  }\n}\n",
                    "description": "<p>{@link networkDropdownConfig} - It&#39;s an <code>@Input()</code> parameter. <br>\nYou can customize dropdown position and overlay. <br>\nThis is an optional parameter. <br>\nThe default value is: <br>\n{\n  overlay: {\n    transparent: true\n  },\n  position: {\n    vertical: AUC_POSITIONS.BELOW,\n    horizontal: AUC_POSITIONS.AFTER\n  }\n}</p>\n",
                    "line": 133,
                    "type": "AucDropdownConfig",
                    "decorators": []
                },
                {
                    "name": "showBalance",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link showBalance} - It's an `@Input()` parameter. <br>\nShow/hide account balance. <br>\nIt's an optional parameter. The default value is false.\n",
                    "description": "<p>{@link showBalance} - It&#39;s an <code>@Input()</code> parameter. <br>\nShow/hide account balance. <br>\nIt&#39;s an optional parameter. The default value is false.</p>\n",
                    "line": 59,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showNetworkOptions",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link showNetworkOptions} - It's an `@Input()` parameter. <br>\nShow/hide network options <br>\nIt's an optional parameter. The default value is false.\n",
                    "description": "<p>{@link showNetworkOptions} - It&#39;s an <code>@Input()</code> parameter. <br>\nShow/hide network options <br>\nIt&#39;s an optional parameter. The default value is false.</p>\n",
                    "line": 75,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showTransactions",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link showTransactions} - It's an `@Input()` parameter. <br>\nShow/hide Recent transactions button <br>\nIt's an optional parameter. The default value is false.\n",
                    "description": "<p>{@link showTransactions} - It&#39;s an <code>@Input()</code> parameter. <br>\nShow/hide Recent transactions button <br>\nIt&#39;s an optional parameter. The default value is false.</p>\n",
                    "line": 67,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onConnect",
                    "defaultValue": "new EventEmitter<AucConnectionState>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link onConnect} - It's an `@Output()` parameter. <br>\nEmits an action when wallet was connected.\n",
                    "description": "<p>{@link onConnect} - It&#39;s an <code>@Output()</code> parameter. <br>\nEmits an action when wallet was connected.</p>\n",
                    "line": 148,
                    "type": "EventEmitter<AucConnectionState>"
                },
                {
                    "name": "onDisconnect",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link onDisconnect} - It's an `@Output()` parameter. <br>\nEmits an action when wallet was disconnected.\n",
                    "description": "<p>{@link onDisconnect} - It&#39;s an <code>@Output()</code> parameter. <br>\nEmits an action when wallet was disconnected.</p>\n",
                    "line": 155,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_sub",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 167,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "accountAddress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 157,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "BALANCE_APPEARANCE",
                    "defaultValue": "AUC_BALANCE_APPEARANCE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 164,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "COLORS",
                    "defaultValue": "AS_COLOR_GROUP",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 163,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "CONNECT_WALLET_APPEARANCE",
                    "defaultValue": "AUC_CONNECT_WALLET_APPEARANCE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 165,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hasFailedTx",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 160,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hasPendingTx",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 161,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "identicon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLDivElement",
                    "optional": false,
                    "description": "",
                    "line": 158,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isConnected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 159,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "txCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 162,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 214,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 191,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onAccountButtonClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 220,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onConnectWalletClick",
                    "args": [
                        {
                            "name": "isDisconnect",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 250,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisconnect",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDisconnectWalletClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 261,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { AS_COLOR_GROUP } from '@applicature/styles';\n\nimport { AucAccountData, AucAccountOption } from '../account-button';\nimport { AUC_POSITIONS, AUC_TRANSACTION_STATUS } from '../enums';\nimport { AUC_VALUE_TYPES, aucCheckValueType, aucGenerateJazzicon } from '../helpers';\nimport { AucAccountModalComponent, AucAccountModalData } from '../modals';\nimport { AucConnectionState, AucWalletConnectService } from '../services';\nimport { AucDialogService } from '../dialog';\nimport { AucDropdownConfig } from '../dropdown-menu';\nimport { AUC_BALANCE_APPEARANCE } from '../account-balance';\nimport { ConnectWalletAppearance } from './types';\nimport { AUC_CONNECT_WALLET_APPEARANCE } from './enums';\nimport { AucTransactionService } from '../transactions';\n\n\n@Component({\n  selector: 'auc-connect-wallet',\n  templateUrl: './connect-wallet.component.html',\n  styleUrls: [ './connect-wallet.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AucConnectWalletComponent implements OnInit, OnDestroy {\n  /**\n   * {@link appearance} - It's an `@Input()` parameter. <br>\n   * Allows to control appearance components. Default is the button.\n   * It's an optional parameter. The default value is {@link AUC_CONNECT_WALLET_APPEARANCE.BUTTON}. <br>\n   * You can use enum {@link AUC_CONNECT_WALLET_APPEARANCE}.\n   */\n  @Input()\n  public appearance: ConnectWalletAppearance = AUC_CONNECT_WALLET_APPEARANCE.BUTTON;\n\n  /**\n   * {@link disabled} - It's an `@Input()` parameter. <br>\n   * Whether the button is disabled. <br>\n   * It's an optional parameter. The default value is false.\n   */\n  @Input()\n  public disabled: boolean = false;\n\n  /**\n   * {@link showBalance} - It's an `@Input()` parameter. <br>\n   * Show/hide account balance. <br>\n   * It's an optional parameter. The default value is false.\n   */\n  @Input()\n  public showBalance: boolean = false;\n\n  /**\n   * {@link showTransactions} - It's an `@Input()` parameter. <br>\n   * Show/hide Recent transactions button <br>\n   * It's an optional parameter. The default value is false.\n   */\n  @Input()\n  public showTransactions: boolean = false;\n\n  /**\n   * {@link showNetworkOptions} - It's an `@Input()` parameter. <br>\n   * Show/hide network options <br>\n   * It's an optional parameter. The default value is false.\n   */\n  @Input()\n  public showNetworkOptions: boolean = false;\n\n  /**\n   * {@link account} - It's an `@Input()` parameter. <br>\n   * User account related information. Needs for {@link AucAccountButtonComponent}. <br>\n   * This is required parameter when appearance equals to {@link AUC_CONNECT_WALLET_APPEARANCE.ICON}\n   */\n  @Input()\n  public account: AucAccountData;\n\n  /**\n   * {@link accountOptions} - It's an `@Input()` parameter. <br>\n   * List of options in popover. Needs for {@link AucAccountButtonComponent}. <br>\n   * This is an optional parameter, uses only with appearance {@link AUC_CONNECT_WALLET_APPEARANCE.ICON}\n   */\n  @Input()\n  public accountOptions?: AucAccountOption[];\n\n  /**\n   * {@link accountDropdownConfig} - It's an `@Input()` parameter. <br>\n   * You can customize dropdown position and overlay. <br>\n   * This is an optional parameter. <br>\n   * The default value is: <br>\n   * {\n   *   overlay: {\n   *     transparent: true\n   *   },\n   *   position: {\n   *     vertical: AUC_POSITIONS.BELOW,\n   *     horizontal: AUC_POSITIONS.BEFORE\n   *   }\n   * }\n   */\n  @Input() accountDropdownConfig: AucDropdownConfig = {\n    overlay: {\n      transparent: true\n    },\n    position: {\n      vertical: AUC_POSITIONS.BELOW,\n      horizontal: AUC_POSITIONS.BEFORE\n    }\n  }\n\n  /**\n   * {@link networkDropdownConfig} - It's an `@Input()` parameter. <br>\n   * You can customize dropdown position and overlay. <br>\n   * This is an optional parameter. <br>\n   * The default value is: <br>\n   * {\n   *   overlay: {\n   *     transparent: true\n   *   },\n   *   position: {\n   *     vertical: AUC_POSITIONS.BELOW,\n   *     horizontal: AUC_POSITIONS.AFTER\n   *   }\n   * }\n   */\n  @Input() networkDropdownConfig?: AucDropdownConfig = {\n    overlay: {\n      transparent: true\n    },\n    position: {\n      vertical: AUC_POSITIONS.BELOW,\n      horizontal: AUC_POSITIONS.AFTER\n    }\n  }\n\n  /**\n   * {@link onConnect} - It's an `@Output()` parameter. <br>\n   * Emits an action when wallet was connected.\n   */\n  @Output()\n  public onConnect: EventEmitter<AucConnectionState> = new EventEmitter<AucConnectionState>();\n\n  /**\n   * {@link onDisconnect} - It's an `@Output()` parameter. <br>\n   * Emits an action when wallet was disconnected.\n   */\n  @Output()\n  public onDisconnect: EventEmitter<void> = new EventEmitter<void>();\n\n  public accountAddress: string;\n  public identicon: HTMLDivElement;\n  public isConnected: boolean = false;\n  public hasFailedTx: boolean = false;\n  public hasPendingTx: boolean = false;\n  public txCount: number = 0;\n  public COLORS = AS_COLOR_GROUP;\n  public BALANCE_APPEARANCE = AUC_BALANCE_APPEARANCE;\n  public CONNECT_WALLET_APPEARANCE = AUC_CONNECT_WALLET_APPEARANCE;\n\n  private _sub: Subscription = new Subscription();\n\n  constructor(\n    private _dialogService: AucDialogService,\n    private _cdr: ChangeDetectorRef,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _transactionService: AucTransactionService,\n    private _walletConnectService: AucWalletConnectService,\n  ) {\n    this._sub.add(\n      this._walletConnectService.accountsChanged$\n        .subscribe((accounts) => {\n          this.accountAddress = accounts?.length && accounts[0];\n          this.isConnected = Boolean(this.accountAddress);\n\n          if (this.isConnected) {\n            this.identicon = aucGenerateJazzicon(this.accountAddress);\n          }\n\n          this._cdr.markForCheck();\n        }),\n    );\n  }\n\n  public ngOnInit(): void {\n    this._sub.add(\n      this._transactionService.transactionsChanged$\n        .subscribe((transactions) => {\n          this.txCount = transactions.filter((tx) => {\n            return tx.status === AUC_TRANSACTION_STATUS.FAIL && !tx.viewed;\n          }).length;\n\n          this.hasFailedTx = this.txCount > 0;\n\n          if (!this.hasFailedTx) {\n            this.txCount = transactions.filter((tx) => {\n              return tx.status === AUC_TRANSACTION_STATUS.PENDING;\n            }).length;\n\n            this.hasPendingTx = this.txCount > 0;\n          }\n\n          this._cdr.markForCheck();\n        }),\n    );\n  }\n\n  public ngOnDestroy(): void {\n    if (aucCheckValueType(this._sub.unsubscribe, AUC_VALUE_TYPES.FUNCTION)) {\n      this._sub.unsubscribe();\n    }\n  }\n\n  public onAccountButtonClick(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    const data: AucAccountModalData = {\n      header: 'Account',\n      change: () => {\n        modal.close();\n\n        this.onConnectWalletClick(true);\n      },\n      disconnect: () => {\n        this.onDisconnectWalletClick();\n\n        modal.close();\n      },\n    };\n\n    const modal = this._dialogService.open<AucAccountModalComponent, AucAccountModalData>(AucAccountModalComponent, {\n      data,\n      dialogClass: 'auc-account-dialog',\n      width: '420px',\n      maxWidth: '420px',\n      overlay: {\n        closeByClick: true\n      }\n    });\n  }\n\n  public onConnectWalletClick(isDisconnect: boolean = false): void {\n    if (this.disabled) {\n      return;\n    }\n\n    this._walletConnectService.connectWallet(isDisconnect)\n      .subscribe((connectionState: AucConnectionState) => {\n        this.onConnect.emit(connectionState);\n      })\n  }\n\n  public onDisconnectWalletClick(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    this._walletConnectService.disconnectWallet()\n      .subscribe(() => {\n        this.onDisconnect.emit();\n      });\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/src/lib/scss/variables\";\n\n:host {\n  display: inline-block;\n}\n\n.auc-connect-wallet {\n  display: flex;\n  align-items: center;\n  font-family: $as-font-family;\n}\n\n.auc-connect-wallet-container {\n  border-radius: 8px;\n  display: inline-flex;\n  align-items: center;\n}\n\n.auc-connect-wallet-account-balance,\n.auc-connect-wallet-transactions,\n.auc-connect-wallet-container,\n.auc-connect-wallet-networks {\n  margin-right: 12px;\n}\n",
                    "styleUrl": "./connect-wallet.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_dialogService",
                        "type": "AucDialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_transactionService",
                        "type": "AucTransactionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 167,
                "jsdoctags": [
                    {
                        "name": "_dialogService",
                        "type": "AucDialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_transactionService",
                        "type": "AucTransactionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"auc-connect-wallet\">\n  <ng-container *ngIf=\"isConnected else connectWallet\">\n    <ng-container [ngSwitch]=\"appearance\">\n      <ng-container *ngSwitchCase=\"CONNECT_WALLET_APPEARANCE.BUTTON\">\n        <ng-container *ngTemplateOutlet=\"networkOptionsRef\"></ng-container>\n\n        <div class=\"auc-connect-wallet-container\">\n          <auc-button *ngIf=\"(hasPendingTx || hasFailedTx) else acBallanceWithAddress\"\n                      (onClick)=\"onAccountButtonClick()\"\n                      [disabled]=\"disabled\"\n                      [label]=\"txCount + (hasPendingTx ? ' pending':  ' failing')\"\n                      [pending]=\"hasPendingTx\"\n                      [rightIcon]=\"!hasPendingTx && hasFailedTx ? 'wcl-icon-fail' : ''\"\n                      [color]=\"hasFailedTx ? COLORS.RED : COLORS.WHITE\">\n          </auc-button>\n\n          <ng-template #acBallanceWithAddress>\n            <auc-account-balance\n              [appearance]=\"BALANCE_APPEARANCE.TRANSLUCENT\"\n              [showAddress]=\"true\"\n              [addressConfig]=\"{\n                                  showIdenticon: true,\n                                  color: COLORS.WHITE\n                                }\"\n              (onAddressClick)=\"onAccountButtonClick()\"\n            >\n            </auc-account-balance>\n          </ng-template>\n        </div>\n      </ng-container>\n\n      <ng-container *ngSwitchCase=\"CONNECT_WALLET_APPEARANCE.ICON\">\n        <auc-account-balance [appearance]=\"BALANCE_APPEARANCE.TRANSPARENT\"\n                             class=\"auc-connect-wallet-account-balance\">\n        </auc-account-balance>\n\n        <auc-transactions-history *ngIf=\"showTransactions\"\n                                  class=\"auc-connect-wallet-transactions\">\n        </auc-transactions-history>\n\n        <ng-container *ngTemplateOutlet=\"networkOptionsRef\"></ng-container>\n\n        <div class=\"auc-connect-wallet-container\">\n          <auc-account-button [account]=\"account\"\n                              [options]=\"accountOptions\"\n                              [accountDropdownConfig]=\"accountDropdownConfig\"\n          >\n          </auc-account-button>\n        </div>\n      </ng-container>\n\n      <ng-container *ngSwitchDefault>\n        <auc-button (onClick)=\"onDisconnectWalletClick()\"\n                    [disabled]=\"disabled\"\n                    [color]=\"COLORS.RED\"\n                    label=\"Disconnect Wallet\"\n                    class=\"auc-connect-wallet-disconnect-btn\"\n        >\n        </auc-button>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n\n\n  <ng-template #connectWallet>\n    <auc-button (onClick)=\"onConnectWalletClick()\"\n                [disabled]=\"disabled\"\n                leftIcon=\"wcl-icon-wallet\"\n                label=\"Connect Wallet\"\n                class=\"auc-connect-wallet-btn\"\n    >\n    </auc-button>\n  </ng-template>\n</div>\n\n<ng-template #networkOptionsRef>\n  <auc-network-dropdown *ngIf=\"showNetworkOptions\"\n                        [networkDropdownConfig]=\"networkDropdownConfig\"\n                        class=\"auc-connect-wallet-networks\"\n  >\n  </auc-network-dropdown>\n</ng-template>\n"
        },
        {
            "name": "AucCopyToClipboardComponent",
            "id": "component-AucCopyToClipboardComponent-eb1587c319923c3cbb6c87d4ffc642dabd2e48fb52eef56f270ddfd3814faa9a6135e1ec23da4c9cb4c5f6fc508b54f52a565f69c3a1f9ebac0439d9c55be194",
            "file": "projects/applicature/components/src/lib/copy-to-clipboard/copy-to-clipboard.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-copy-to-clipboard",
            "styleUrls": [
                "./copy-to-clipboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./copy-to-clipboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link value} - It's an `@Input()` parameter.\nThe value which will be copied after click on copy btn.\nThis is required parameter.\n",
                    "description": "<p>{@link value} - It&#39;s an <code>@Input()</code> parameter.\nThe value which will be copied after click on copy btn.\nThis is required parameter.</p>\n",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'auc-copy-to-clipboard',\n  templateUrl: './copy-to-clipboard.component.html',\n  styleUrls: ['./copy-to-clipboard.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AucCopyToClipboardComponent {\n  /**\n   * {@link value} - It's an `@Input()` parameter.\n   * The value which will be copied after click on copy btn.\n   * This is required parameter.\n   */\n  @Input() value!: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/src/lib/scss/functions\";\n@import \"../../../../styles/src/lib/scss/mixins\";\n\n:host {\n  display: block;\n  width: 32px;\n  height: 32px;\n  color: getColor(grey, hover);\n  border-radius: 50%;\n  @include transition;\n\n  .auc-copy-to-clipboard-button {\n    width: 100%;\n    height: 100%;\n    font-size: 0;\n    line-height: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: inherit;\n    cursor: pointer;\n    border: none;\n    border-radius: inherit;\n\n    auc-icon {\n      width: 20px;\n      height: 20px;\n      font-size: 20px;\n    }\n  }\n\n  &:hover {\n    color: getColor(grey, base);\n  }\n}\n",
                    "styleUrl": "./copy-to-clipboard.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button type=\"button\"\n        class=\"auc-copy-to-clipboard-button\"\n        ngxClipboard\n        [cbContent]=\"value\"\n>\n  <auc-icon icon=\"wcl-icon-copy\"></auc-icon>\n</button>\n"
        },
        {
            "name": "AucDialogComponent",
            "id": "component-AucDialogComponent-e43ed11bc70d7b5b0da28655d7806cf6d6a4ac13c066023134b4a047b7448619191c59a932d11b2f5ae92aec3ad7dd5c6a393a51cafffeb8b7cf637eec180e48",
            "file": "projects/applicature/components/src/lib/dialog/dialog.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-dialog",
            "styleUrls": [
                "./dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_onClose",
                    "defaultValue": "new Subject<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        121,
                        144
                    ]
                },
                {
                    "name": "childComponentType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Type<any>",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "componentRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ComponentRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogConfig",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucCustomizeDialogConfig",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "insertionPoint",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucInsertionDirective",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "AucInsertionDirective"
                        }
                    ]
                },
                {
                    "name": "onClose",
                    "defaultValue": "this._onClose.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "overlayConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucOverlayCustomizationConfig",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "panelConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucCustomizeDialogConfig",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "loadChildComponent",
                    "args": [
                        {
                            "name": "componentType",
                            "type": "Type<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "componentType",
                            "type": "Type<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mapConfig",
                    "args": [
                        {
                            "name": "config",
                            "type": "AucDialogConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "AucDialogConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onOverlayClicked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  OnDestroy,\n  Type,\n  ViewChild\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { AucDialogConfig } from './dialog-config';\nimport { AucDialogRef } from './dialog-ref';\nimport { AucInsertionDirective } from './directives';\nimport { AucCustomizeDialogConfig } from './interfaces';\nimport { AucOverlayCustomizationConfig } from '../overlay';\nimport { AucBlockScrollHelperService } from '../helpers';\n\n\n@Component({\n  selector: 'auc-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: [ './dialog.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AucDialogComponent implements AfterViewInit, OnDestroy {\n  private readonly _onClose = new Subject<any>();\n\n  public componentRef: ComponentRef<any>;\n  public childComponentType: Type<any>;\n  public onClose = this._onClose.asObservable();\n  public panelConfig: AucCustomizeDialogConfig;\n  public overlayConfig: AucOverlayCustomizationConfig;\n  public dialogConfig: AucCustomizeDialogConfig = {};\n\n  @ViewChild(AucInsertionDirective) insertionPoint: AucInsertionDirective;\n\n  public get hasOverlay(): boolean {\n    return (this._config?.overlay?.hasOverlay ?? null) === null ? true : this._config.overlay.hasOverlay;\n  }\n\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _cdr: ChangeDetectorRef,\n              private _config: AucDialogConfig,\n              private _dialogRef: AucDialogRef,\n              private _blockScroll: AucBlockScrollHelperService) {\n    this.mapConfig(this._config);\n    this._blockScroll.lockScroll();\n  }\n\n  ngAfterViewInit(): void {\n    this.loadChildComponent(this.childComponentType);\n    this._dialogRef.open();\n    this._cdr.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    this._blockScroll.unlockScroll();\n\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n  }\n\n  private mapConfig(config: AucDialogConfig): void {\n    if (!config) {\n      return;\n    }\n\n    const { panel, overlay, width, height, minWidth, minHeight, maxWidth, maxHeight, position, dialogClass } = config;\n\n    if (panel?.panelClass) {\n      this.panelConfig = {\n        classes: panel.panelClass\n      };\n    }\n\n    if (overlay?.hasOverlay && (overlay?.overlayClass.length || overlay?.transparent)) {\n      this.overlayConfig = {\n        overlayClass: overlay.overlayClass,\n        transparent: overlay.transparent\n      };\n    }\n\n    if (width) {\n      this.dialogConfig.width = config.width;\n    }\n\n    if (height) {\n      this.dialogConfig.height = config.height;\n    }\n\n    if (minWidth) {\n      this.dialogConfig.minWidth = config.minWidth;\n    }\n\n    if (minHeight) {\n      this.dialogConfig.minHeight = config.minHeight;\n    }\n\n    if (maxWidth) {\n      this.dialogConfig.maxWidth = config.maxWidth;\n    }\n\n    if (maxHeight) {\n      this.dialogConfig.maxHeight = config.maxHeight;\n    }\n\n    if (position) {\n      this.dialogConfig.position = config.position;\n    }\n\n    if (dialogClass) {\n      this.dialogConfig.classes = config.dialogClass;\n    }\n\n    if (!Object.keys(this.dialogConfig).length) {\n      this.dialogConfig = null;\n    }\n\n    this._cdr.markForCheck();\n  }\n\n  public onOverlayClicked(): void {\n    if (this.hasOverlay && (this._config?.overlay?.closeByClick)) {\n      this._dialogRef.close();\n    }\n  }\n\n  public loadChildComponent(componentType: Type<any>): void {\n    let componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentType);\n    let viewContainerRef = this.insertionPoint.viewContainerRef;\n    viewContainerRef.clear();\n\n    this.componentRef = viewContainerRef.createComponent<any>(componentFactory);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/src/lib/scss/functions\";\n\n\n.auc-dialog-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: block;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n}\n\nauc-overlay,\n.auc-dialog {\n  z-index: 9999;\n}\n\n.auc-dialog {\n  width: auto;\n  height: auto;\n  min-width: 320px;\n  min-height: 100px;\n  max-width: 90vw;\n  max-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  background-color: getColor(white, base);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 20px;\n  border-radius: 12px;\n  overflow: hidden;\n\n  &.auc-account-dialog,\n  &.auc-recent-transactions-dialog {\n    padding: 0;\n  }\n\n  &.top {\n    top: 15px;\n    transform: translate(-50%, 0);\n  }\n\n  &.bottom {\n    top: unset;\n    bottom: 15px;\n    transform: translate(-50%, 0);\n  }\n\n  &.left {\n    left: 15px;\n    transform: translate(0, -50%);\n  }\n\n  &.right {\n    left: unset;\n    right: 15px;\n    transform: translate(0, -50%);\n  }\n\n  &.top-left {\n    left: 15px;\n    top: 15px;\n    transform: translate(0, 0);\n  }\n\n  &.top-right {\n    left: unset;\n    right: 15px;\n    top: 15px;\n    transform: translate(0, 0);\n  }\n\n  &.bottom-left {\n    left: 15px;\n    top: unset;\n    bottom: 15px;\n    transform: translate(0, 0);\n  }\n\n  &.bottom-right {\n    left: unset;\n    right: 15px;\n    top: unset;\n    bottom: 15px;\n    transform: translate(0, 0);\n  }\n}\n\n@media (max-width: 767px) {\n  .auc-dialog {\n    width: 100% !important;\n    min-width: 100% !important;\n    height: 100vh !important;\n    max-width: 100vw !important;\n    max-height: 100vh !important;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    transform: translate(0, 0);\n\n    &.top,\n    &.bottom,\n    &.left,\n    &.right,\n    &.top-left,\n    &.top-right,\n    &.bottom-left,\n    &.bottom-right {\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      transform: translate(0, 0);\n    }\n  }\n}\n",
                    "styleUrl": "./dialog.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_config",
                        "type": "AucDialogConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_dialogRef",
                        "type": "AucDialogRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_blockScroll",
                        "type": "AucBlockScrollHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "_componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_config",
                        "type": "AucDialogConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dialogRef",
                        "type": "AucDialogRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_blockScroll",
                        "type": "AucBlockScrollHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "accessors": {
                "hasOverlay": {
                    "name": "hasOverlay",
                    "getSignature": {
                        "name": "hasOverlay",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 40
                    }
                }
            },
            "templateData": "<div class=\"auc-dialog-container\"\n     aucCustomizeDialog\n     [config]=\"panelConfig\"\n>\n  <auc-overlay *ngIf=\"hasOverlay\"\n               [customize]=\"overlayConfig\"\n               (overlayClicked)=\"onOverlayClicked()\"\n  >\n  </auc-overlay>\n\n  <div class=\"auc-dialog\"\n       aucCustomizeDialog\n       [config]=\"dialogConfig\"\n  >\n    <ng-template aucInsertion></ng-template>\n  </div>\n</div>\n"
        },
        {
            "name": "AucDropdownMenuComponent",
            "id": "component-AucDropdownMenuComponent-fec98d2ee8318bd519840b6d46d64bd6b346f509b62221d3ed83a433c7d0a6e1195aa0bd43c7f084260f95f31bebbc3486f8085fb8bf90ef267739660ba511d8",
            "file": "projects/applicature/components/src/lib/dropdown-menu/dropdown-menu.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-dropdown-menu",
            "styleUrls": [
                "./dropdown-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdown-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "AucDropdownConfig",
                    "decorators": []
                },
                {
                    "name": "trigger",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "AucTriggerDirective",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "contentBody",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucContentBodyDirective",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "AucContentBodyDirective"
                        }
                    ]
                },
                {
                    "name": "dropdownRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dropdown', {read: ElementRef}"
                        }
                    ]
                },
                {
                    "name": "isAfter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isBelow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "positionStyles",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucDropdownPositionStyles",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getPositions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize'"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Input,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\n\nimport {\n  AucContentBodyDirective,\n  AucTriggerDirective\n} from '../directives';\nimport { AUC_POSITIONS } from '../enums';\nimport { AucDropdownConfig, AucDropdownPositionStyles } from './interfaces';\n\n\n@Component({\n  selector: 'auc-dropdown-menu',\n  templateUrl: './dropdown-menu.component.html',\n  styleUrls: [ './dropdown-menu.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AucDropdownMenuComponent implements AfterViewInit, OnDestroy {\n  @Input() config?: AucDropdownConfig;\n  @Input() trigger!: AucTriggerDirective;\n  @ViewChild(AucContentBodyDirective) contentBody: AucContentBodyDirective;\n  @ViewChild('dropdown', { read: ElementRef }) dropdownRef: ElementRef;\n\n  public positionStyles: AucDropdownPositionStyles = null;\n  public isBelow: boolean;\n  public isAfter: boolean;\n\n  constructor(private _cdr: ChangeDetectorRef) {\n  }\n\n  @HostListener('window:resize') onResize(): void {\n    this.getPositions();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.dropdownRef) {\n      this.getPositions();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n  }\n\n  public getPositions(): void {\n    const triggerRect: DOMRect = this.trigger.nativeElement.getBoundingClientRect();\n\n    if (!triggerRect) {\n      this.positionStyles = null;\n    }\n\n    const {\n      height: dropdownHeight = 0,\n      width: dropdownWidth = 0\n    } = this.dropdownRef?.nativeElement?.getBoundingClientRect() ?? {};\n    const { top, left, bottom, right } = triggerRect;\n    const { vertical, horizontal } = this.config?.position ?? {};\n    let isBelow: boolean = (vertical ?? AUC_POSITIONS.BELOW) === AUC_POSITIONS.BELOW;\n    let isAfter: boolean = (horizontal ?? AUC_POSITIONS.AFTER) === AUC_POSITIONS.AFTER;\n    let maxHeight: number = 0;\n    let maxWidth: number = 0;\n\n    if (this.dropdownRef?.nativeElement?.getBoundingClientRect()) {\n      const vw = window.innerWidth;\n      const vh = window.innerHeight;\n\n      const remainderBelowHeight = vh - bottom;\n      const remainderAboveHeight = top;\n      const isBelowReminderBigger = isBelow\n        ? remainderBelowHeight === remainderAboveHeight || remainderBelowHeight > remainderAboveHeight\n        : (remainderBelowHeight > remainderAboveHeight);\n      const remainderHeight = isBelow ? remainderBelowHeight : remainderAboveHeight;\n\n      if (remainderHeight < dropdownHeight) {\n        isBelow = !this.config?.minHeight\n          ? isBelowReminderBigger\n          : remainderHeight >= this.config?.minHeight ? isBelow : isBelowReminderBigger;\n        const maxH: number = isBelow ? remainderBelowHeight : remainderAboveHeight\n        maxHeight = dropdownHeight > maxH ? maxH : 0;\n      }\n\n      const remainderAfterWidth = vw - left;\n      const remainderBeforeWidth = right;\n      const isAfterReminderBigger = isAfter\n        ? remainderAfterWidth === remainderBeforeWidth || remainderAfterWidth > remainderBeforeWidth\n        : (remainderAfterWidth > remainderBeforeWidth);\n      const remainderWidth = isAfter ? remainderAfterWidth : remainderBeforeWidth;\n\n      if (dropdownWidth > remainderWidth) {\n        isAfter = !this.config?.minWidth\n          ? isAfterReminderBigger\n          : remainderWidth >= this.config?.minWidth ? isAfter : isAfterReminderBigger;\n        const maxW: number = isAfter ? remainderAfterWidth : remainderBeforeWidth\n        maxWidth = dropdownWidth > maxW ? maxW : 0;\n      }\n    }\n\n    let topPosition = isBelow\n      ? bottom\n      : top - (!maxHeight || dropdownHeight > maxHeight ? dropdownHeight : maxHeight);\n    let leftPosition = isAfter\n      ? left\n      : right - (!maxWidth || dropdownWidth > maxWidth ? dropdownWidth : maxWidth);\n\n    const styles: AucDropdownPositionStyles = {\n      top: `${topPosition <= 0 ? 0 : topPosition}px`,\n      left: `${leftPosition <= 0 ? 0 : leftPosition}px`\n    }\n\n    if (!!maxHeight) {\n      styles.maxHeight = `${maxHeight}px`\n    }\n\n    if (!!maxWidth) {\n      styles.maxWidth = `${maxWidth}px`\n    }\n\n    this.positionStyles = styles;\n    this.isBelow = isBelow;\n    this.isAfter = isAfter;\n\n    this._cdr.detectChanges();\n  }\n\n  public close(): void {\n    if (!this.contentBody) {\n      return;\n    }\n\n    this.trigger.showHide(false);\n\n    this.contentBody.destroy();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/src/lib/scss/functions\";\n\n:host {\n  display: block;\n  width: 100%;\n}\n\nauc-overlay,\n.auc-dropdown-menu {\n  z-index: 9999;\n}\n\n.auc-dropdown-menu {\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  width: auto;\n  height: auto;\n  min-width: 130px;\n  max-width: 400px;\n  max-height: 600px;\n  overflow: hidden;\n\n  &.below-after,\n  &.above-after {\n    padding: 12px 12px 12px 0;\n  }\n\n  &.below-before,\n  &.above-before {\n    padding: 12px 0 12px 12px;\n  }\n}\n\n.auc-dropdown-menu-content-container {\n  background-color: getColor(white, base);\n  box-shadow: 0 0 10px getColor(white, boxShadow);\n  border-radius: 8px;\n  width: auto;\n  height: auto;\n}\n\n.auc-dropdown-menu-content {\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  overflow-y: auto;\n  overflow-x: auto;\n}\n",
                    "styleUrl": "./dropdown-menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "templateData": "<ng-template [ngIf]=\"trigger?.opened$ | async\">\n  <ng-template #contentBody aucContentBody>\n    <div class=\"auc-dropdown-menu-container\">\n      <auc-overlay [customize]=\"config?.overlay\"\n                           (overlayClicked)=\"close()\"\n      >\n      </auc-overlay>\n\n      <div class=\"auc-dropdown-menu\"\n           #dropdown\n           [aucCustomClass]=\"config?.class\"\n           [ngStyle]=\"positionStyles\"\n           [ngClass]=\"{\n              'below-after': isBelow && isAfter,\n              'below-before': isBelow && !isAfter,\n              'above-after': !isBelow && isAfter,\n              'above-before': !isBelow && !isAfter\n           }\"\n      >\n        <div class=\"auc-dropdown-menu-content-container\">\n          <div class=\"auc-dropdown-menu-content\">\n            <ng-content></ng-content>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</ng-template>\n"
        },
        {
            "name": "AucIconComponent",
            "id": "component-AucIconComponent-952a6e685888d34ea15fb06328c0f2348d9cc68200687a647eb8d302d291da46e8475b2dffa36e17b81a22f67439bb4fd832c63c84843a96c21a4ec0ebfa299b",
            "file": "projects/applicature/components/src/lib/icon/icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-icon",
            "styleUrls": [
                "./icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link color} - It's an `@Input()` parameter.\nSets css style color;\nThis is an optional parameter.\n",
                    "description": "<p>{@link color} - It&#39;s an <code>@Input()</code> parameter.\nSets css style color;\nThis is an optional parameter.</p>\n",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 544,
                            "end": 699,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 338,
                            "tagName": {
                                "pos": 545,
                                "end": 550,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>type uses enum {@link AUC_WLC_ICON} or string;\nIf you want to use custom icon you need to provide url to the image as a string value.</p>\n",
                            "name": {
                                "pos": 551,
                                "end": 556,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "isNameFirst": true,
                            "isBracketed": false
                        }
                    ],
                    "rawdescription": "\n\n{@link icon} - It's an `@Input()` parameter.\nIf you want to use custom icon you need to provide url to the image as a string value.\n",
                    "description": "<p>{@link icon} - It&#39;s an <code>@Input()</code> parameter.\nIf you want to use custom icon you need to provide url to the image as a string value.</p>\n",
                    "line": 27,
                    "type": "AucWlcIcon",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isImage",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\n\nimport { AucWlcIcon } from './types';\n\n\n@Component({\n  selector: 'auc-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: [ './icon.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AucIconComponent {\n  /**\n   * {@link color} - It's an `@Input()` parameter.\n   * Sets css style color;\n   * This is an optional parameter.\n   */\n  @Input()\n  public color?: string;\n\n  /**\n   * {@link icon} - It's an `@Input()` parameter.\n   * @param value type uses enum {@link AUC_WLC_ICON} or string;\n   * If you want to use custom icon you need to provide url to the image as a string value.\n   */\n  @Input()\n  public set icon(value: AucWlcIcon) {\n    this.isImage = (/.+\\..+$/i).test(value);\n\n    this._icon = value;\n  }\n\n  public get icon(): string {\n    return this._icon;\n  }\n\n  private _icon!: string;\n\n  public isImage: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  color: inherit;\n  display: flex;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  font-size: 24px;\n}\n\n.auc-icon-container {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.auc-icon-img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.auc-icon-font {\n  line-height: 0;\n  color: inherit;\n}\n",
                    "styleUrl": "./icon.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "icon": {
                    "name": "icon",
                    "setSignature": {
                        "name": "icon",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "AucWlcIcon",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 27,
                        "rawdescription": "\n\n{@link icon} - It's an `@Input()` parameter.\nIf you want to use custom icon you need to provide url to the image as a string value.\n",
                        "description": "<p>{@link icon} - It&#39;s an <code>@Input()</code> parameter.\nIf you want to use custom icon you need to provide url to the image as a string value.</p>\n",
                        "jsdoctags": [
                            {
                                "name": {
                                    "pos": 551,
                                    "end": 556,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "value"
                                },
                                "type": "AucWlcIcon",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "pos": 545,
                                    "end": 550,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "param"
                                },
                                "comment": "<p>type uses enum {@link AUC_WLC_ICON} or string;\nIf you want to use custom icon you need to provide url to the image as a string value.</p>\n"
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "icon",
                        "type": "string",
                        "returnType": "string",
                        "line": 33
                    }
                }
            },
            "templateData": "<div class=\"auc-icon-container\" [style.color]=\"color ?? 'inherit'\">\n  <img class=\"auc-icon-img\" *ngIf=\"isImage else iconRef\" [src]=\"icon\" alt=\"\">\n\n  <ng-template #iconRef>\n    <span class=\"auc-icon-font {{ icon }}\"></span>\n  </ng-template>\n</div>\n"
        },
        {
            "name": "AucInputComponent",
            "id": "component-AucInputComponent-9da4ccd63d8aaae2b67ebf23914e07d98719ce14a1e113380a79dff59134da57e3e1ef08b922f75823ec097000dd4694f172726ab5197ab31a630233b7ae829f",
            "file": "projects/applicature/components/src/lib/input/input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "INPUT_FIELD_VALUE_ACCESSOR"
                }
            ],
            "selector": "auc-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "adaptive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link adaptive} - It's an `@Input()` parameter.\nWhether the form field is full width.\nIt's an optional parameter. The default value is false.\n",
                    "description": "<p>{@link adaptive} - It&#39;s an <code>@Input()</code> parameter.\nWhether the form field is full width.\nIt&#39;s an optional parameter. The default value is false.</p>\n",
                    "line": 71,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "decimal",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link decimal} - It's an `@Input()` parameter.\nAllows to input number with decimal point\n{@link decimal} = true - ignore non decimal symbols.\nThis is an optional parameter. The default value is true.\n",
                    "description": "<p>{@link decimal} - It&#39;s an <code>@Input()</code> parameter.\nAllows to input number with decimal point\n{@link decimal} = true - ignore non decimal symbols.\nThis is an optional parameter. The default value is true.</p>\n",
                    "line": 96,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link disabled} - It's an `@Input()` parameter.\nWhether the control is disabled.\nIt's an optional parameter. The default value is false.\n",
                    "description": "<p>{@link disabled} - It&#39;s an <code>@Input()</code> parameter.\nWhether the control is disabled.\nIt&#39;s an optional parameter. The default value is false.</p>\n",
                    "line": 55,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "errors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link errors} - It's an `@Input()` parameter.\nList of provided errors.\nIt's an optional parameter.\n",
                    "description": "<p>{@link errors} - It&#39;s an <code>@Input()</code> parameter.\nList of provided errors.\nIt&#39;s an optional parameter.</p>\n",
                    "line": 120,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "48",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link height} - It's an `@Input()` parameter.\nSets height of form field.\nIt's an optional parameter. The default value is 48.\n",
                    "description": "<p>{@link height} - It&#39;s an <code>@Input()</code> parameter.\nSets height of form field.\nIt&#39;s an optional parameter. The default value is 48.</p>\n",
                    "line": 63,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "hint",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link hint} - It's an `@Input()` parameter.\nSets hint for form field.\nIt's an optional parameter.\n",
                    "description": "<p>{@link hint} - It&#39;s an <code>@Input()</code> parameter.\nSets hint for form field.\nIt&#39;s an optional parameter.</p>\n",
                    "line": 112,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link label} - It's an `@Input()` parameter.\nText for the form field label.\nIt's required parameter.\n",
                    "description": "<p>{@link label} - It&#39;s an <code>@Input()</code> parameter.\nText for the form field label.\nIt&#39;s required parameter.</p>\n",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link max} - It's an `@Input()` parameter.\nSets max boundaries.\nIt's an optional parameter.\n",
                    "description": "<p>{@link max} - It&#39;s an <code>@Input()</code> parameter.\nSets max boundaries.\nIt&#39;s an optional parameter.</p>\n",
                    "line": 104,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link placeholder} - It's an `@Input()` parameter.\nText for the form field placeholder.\nIt's an optional parameter.\n",
                    "description": "<p>{@link placeholder} - It&#39;s an <code>@Input()</code> parameter.\nText for the form field placeholder.\nIt&#39;s an optional parameter.</p>\n",
                    "line": 47,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link prefix} - It's an `@Input()` parameter.\nText for the form field prefix.\nIt's an optional parameter.\n",
                    "description": "<p>{@link prefix} - It&#39;s an <code>@Input()</code> parameter.\nText for the form field prefix.\nIt&#39;s an optional parameter.</p>\n",
                    "line": 79,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link suffix} - It's an `@Input()` parameter.\nText for the form field suffix.\nIt's an optional parameter.\n",
                    "description": "<p>{@link suffix} - It&#39;s an <code>@Input()</code> parameter.\nText for the form field suffix.\nIt&#39;s an optional parameter.</p>\n",
                    "line": 87,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 191,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 194,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "focus",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "inputElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 123,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'inputElement', {static: true}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMaxClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 155,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 178,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 186,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  forwardRef,\n  ElementRef,\n  ViewChild,\n  Input,\n  ChangeDetectorRef,\n  OnChanges,\n  SimpleChanges,\n  OnInit,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { aucToBN } from '../helpers';\n\n\nexport const INPUT_FIELD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AucInputComponent),\n  multi: true,\n};\n\n\n@Component({\n  selector: 'auc-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [INPUT_FIELD_VALUE_ACCESSOR],\n})\nexport class AucInputComponent implements ControlValueAccessor, OnChanges, OnInit {\n  /**\n   * {@link label} - It's an `@Input()` parameter.\n   * Text for the form field label.\n   * It's required parameter.\n   */\n  @Input()\n  public label!: string;\n\n  /**\n   * {@link placeholder} - It's an `@Input()` parameter.\n   * Text for the form field placeholder.\n   * It's an optional parameter.\n   */\n  @Input()\n  public placeholder: string = '';\n\n  /**\n   * {@link disabled} - It's an `@Input()` parameter.\n   * Whether the control is disabled.\n   * It's an optional parameter. The default value is false.\n   */\n  @Input()\n  public disabled: boolean = false;\n\n  /**\n   * {@link height} - It's an `@Input()` parameter.\n   * Sets height of form field.\n   * It's an optional parameter. The default value is 48.\n   */\n  @Input()\n  public height: number = 48;\n\n  /**\n   * {@link adaptive} - It's an `@Input()` parameter.\n   * Whether the form field is full width.\n   * It's an optional parameter. The default value is false.\n   */\n  @Input()\n  public adaptive: boolean = false;\n\n  /**\n   * {@link prefix} - It's an `@Input()` parameter.\n   * Text for the form field prefix.\n   * It's an optional parameter.\n   */\n  @Input()\n  public prefix: string;\n\n  /**\n   * {@link suffix} - It's an `@Input()` parameter.\n   * Text for the form field suffix.\n   * It's an optional parameter.\n   */\n  @Input()\n  public suffix: string;\n\n  /**\n   * {@link decimal} - It's an `@Input()` parameter.\n   * Allows to input number with decimal point\n   * {@link decimal} = true - ignore non decimal symbols.\n   * This is an optional parameter. The default value is true.\n   */\n  @Input()\n  public decimal: boolean = true;\n\n  /**\n   * {@link max} - It's an `@Input()` parameter.\n   * Sets max boundaries.\n   * It's an optional parameter.\n   */\n  @Input()\n  public max: number;\n\n  /**\n   * {@link hint} - It's an `@Input()` parameter.\n   * Sets hint for form field.\n   * It's an optional parameter.\n   */\n  @Input()\n  public hint!: string;\n\n  /**\n   * {@link errors} - It's an `@Input()` parameter.\n   * List of provided errors.\n   * It's an optional parameter.\n   */\n  @Input()\n  public errors: string[];\n\n  @ViewChild('inputElement', { static: true })\n  public inputElement!: ElementRef<HTMLInputElement>;\n\n  public value!: string;\n  public focus: boolean = false;\n\n  public get classNames(): { [el: string]: boolean } {\n    return {\n      ['auc-input-container']: true,\n      ['auc-input-container-prefix']: !!this.prefix,\n      ['auc-input-container-suffix']: !!this.suffix,\n      ['auc-input-container-disabled']: this.disabled,\n      ['auc-input-container-focus']: this.focus,\n      ['auc-input-container-error']: this.errors?.length > 0,\n    };\n  }\n\n  constructor(\n    private _cdr: ChangeDetectorRef,\n    private _elementRef: ElementRef<HTMLElement>,\n  ) {\n  }\n\n  public ngOnInit(): void {\n    this.ngOnChanges();\n  }\n\n  public ngOnChanges(changes?: SimpleChanges): void {\n    const element = this._elementRef.nativeElement;\n\n    element.style.display = this.adaptive ? 'block' : 'inline-flex'\n  }\n\n  public onMaxClick(): void {\n    if (this.disabled || !this.max) {\n      return;\n    }\n\n    this.onChange(String(this.max));\n  }\n\n  public onChange(value: string): void {\n    this.value = String(aucToBN(value).gt(this.max) ? this.max : value);\n\n    if (this.inputElement?.nativeElement) {\n      const inputElement = this.inputElement.nativeElement;\n      inputElement.value = this.value || '';\n    }\n\n    this._onChange(this.value);\n  }\n\n  public registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  public writeValue(value: string): void {\n    this.value = value || '';\n    this._cdr.markForCheck();\n  }\n\n  private _onChange: (value: string) => void = () => {\n  };\n\n  private _onTouched: () => void = () => {\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/src/lib/scss/variables\";\n@import \"../../../../styles/src/lib/scss/functions\";\n@import \"../../../../styles/src/lib/scss/mixins\";\n\n:host {\n  display: inline-flex;\n}\n\n.auc-input {\n  display: flex;\n  flex-direction: column;\n  font-family: $as-font-family;\n}\n\n.auc-input-label {\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 20px;\n  margin-bottom: 8px;\n}\n\n.auc-input-wrapper {\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n\n.auc-input-hint,\n.auc-input-error {\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 16px;\n}\n\n.auc-input-label,\n.auc-input-hint {\n  color: getColor(grey, base);\n}\n\n.auc-input-hint {\n  margin-top: 8px;\n}\n\n.auc-input-error {\n  margin-top: 4px;\n  color: getColor(red, base);\n}\n\n.auc-input-container {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  height: 100%;\n  padding: 0 12px;\n  border: 1px solid getColor(grey, light);\n  border-radius: 8px;\n  @include transition;\n\n  &:not(.auc-input-container-disabled):not(.auc-input-container-error):not(.auc-input-container-focus):hover {\n    border: 1px solid getColor(grey, hover);\n  }\n}\n\n.auc-input-container-prefix {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n.auc-input-container-suffix {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n\n.auc-input-container-disabled {\n  cursor: default;\n  background: $grey-bg;\n  pointer-events: none;\n}\n\n.auc-input-container-focus {\n  border: 1px solid getColor(blue, base);\n}\n\n.auc-input-container-error {\n  border: 1px solid getColor(red, base);\n\n  .auc-input-max {\n    color: getColor(red, base);\n  }\n}\n\n.auc-input-field {\n  height: 100%;\n  width: 100%;\n  border: 0;\n  background-color: transparent;\n  font-family: $as-font-family;\n  outline: none;\n  min-width: 180px;\n  font-size: 14px;\n  font-weight: 500;\n  color: $black;\n\n  &::placeholder {\n    color: getColor(grey, hover);\n    font-family: $as-font-family;\n    font-size: 14px;\n    font-weight: 500;\n  }\n}\n\n.auc-input-prefix,\n.auc-input-suffix {\n  display: flex;\n  align-items: center;\n  padding: 0 12px;\n  background: $grey-bg;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 20px;\n  color: getColor(grey, base);\n  height: 100%;\n  border: 1px solid getColor(grey, light);\n}\n\n.auc-input-prefix {\n  border-right: 0;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n}\n\n.auc-input-suffix {\n  border-left: 0;\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n}\n\n.auc-input-max {\n  display: inline-block;\n  margin-left: 12px;\n  font-weight: 700;\n  font-size: 13px;\n  line-height: 16px;\n  color: getColor(blue, base);\n  @include transition;\n\n  &:hover {\n    cursor: pointer;\n    color: getColor(blue, hover);\n  }\n}\n",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 137,
                "jsdoctags": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "OnChanges",
                "OnInit"
            ],
            "accessors": {
                "classNames": {
                    "name": "classNames",
                    "getSignature": {
                        "name": "classNames",
                        "type": "literal type",
                        "returnType": "literal type",
                        "line": 128
                    }
                }
            },
            "templateData": "<div class=\"auc-input\">\n  <span *ngIf=\"label\" class=\"auc-input-label\">{{ label }}</span>\n\n  <div [style.height.px]=\"height\"\n       class=\"auc-input-wrapper\">\n    <div *ngIf=\"prefix\" class=\"auc-input-prefix\">{{ prefix }}</div>\n\n    <div [ngClass]=\"classNames\">\n      <input #inputElement\n             [placeholder]=\"placeholder\"\n             [disabled]=\"disabled\"\n             [ngModel]=\"value\"\n             (ngModelChange)=\"onChange($event)\"\n             (focus)=\"focus=true\"\n             (blur)=\"focus=false\"\n             [max]=\"max\"\n             [decimalSeparator]=\"'.'\"\n             [allowNegatives]=\"false\"\n             [decimal]=\"decimal\"\n             digitOnly\n             type=\"text\"\n             class=\"auc-input-field\">\n\n      <span *ngIf=\"max\"\n            (click)=\"onMaxClick()\"\n            class=\"auc-input-max\">MAX</span>\n    </div>\n\n    <div *ngIf=\"suffix\" class=\"auc-input-suffix\">{{ suffix }}</div>\n  </div>\n\n  <div *ngIf=\"hint\"\n       class=\"auc-input-hint\">{{ hint }}</div>\n\n  <div *ngFor=\"let error of errors\"\n       class=\"auc-input-error\">{{ errors }}</div>\n</div>\n"
        },
        {
            "name": "AucNetworkDropdownComponent",
            "id": "component-AucNetworkDropdownComponent-7b14d320eab1c25af020480377dd58e7ec1c90366e9db373fa25d347ec05089c307b410bcdfb560ec7480a7bf570108b42d12bba18c8383a265d5a84f560d7ce",
            "file": "projects/applicature/components/src/lib/network-dropdown/network-dropdown.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-network-dropdown",
            "styleUrls": [
                "./network-dropdown.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./network-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "networkDropdownConfig",
                    "defaultValue": "{\n    overlay: {\n      transparent: true\n    },\n    position: {\n      vertical: AUC_POSITIONS.BELOW,\n      horizontal: AUC_POSITIONS.AFTER\n    }\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link networkDropdownConfig} - It's an `@Input()` parameter.\nYou can customize dropdown position and overlay.\nThis is an optional parameter.\nThe default value is\n{\n  overlay: {\n    transparent: true\n  },\n  position: {\n    vertical: AUC_POSITIONS.BELOW,\n    horizontal: AUC_POSITIONS.AFTER\n  }\n}\n",
                    "description": "<p>{@link networkDropdownConfig} - It&#39;s an <code>@Input()</code> parameter.\nYou can customize dropdown position and overlay.\nThis is an optional parameter.\nThe default value is\n{\n  overlay: {\n    transparent: true\n  },\n  position: {\n    vertical: AUC_POSITIONS.BELOW,\n    horizontal: AUC_POSITIONS.AFTER\n  }\n}</p>\n",
                    "line": 37,
                    "type": "AucDropdownConfig",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_sub",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "COLORS",
                    "defaultValue": "AS_COLOR_GROUP",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentNetwork",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucNetworkOption",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isOptionsOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isWrongNetwork",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onNetworkOptionClick",
                    "args": [
                        {
                            "name": "option",
                            "type": "AucNetworkOption",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "AucNetworkOption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setOpened",
                    "args": [
                        {
                            "name": "opened",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "opened",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { AS_COLOR_GROUP } from '@applicature/styles';\n\nimport { AucNetworkOption } from '../interfaces';\nimport { AUC_POSITIONS } from '../enums';\nimport { AucDropdownConfig } from '../dropdown-menu';\nimport { AucWalletConnectService } from '../services';\nimport { AucDialogService } from '../dialog';\nimport { AucNoNetworkConfigComponent, AucNoNetworkConfigDialogDataI } from './no-network-config';\n\n\n@Component({\n  selector: 'auc-network-dropdown',\n  templateUrl: './network-dropdown.component.html',\n  styleUrls: [ './network-dropdown.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AucNetworkDropdownComponent implements OnInit {\n  /**\n   * {@link networkDropdownConfig} - It's an `@Input()` parameter.\n   * You can customize dropdown position and overlay.\n   * This is an optional parameter.\n   * The default value is\n   * {\n   *   overlay: {\n   *     transparent: true\n   *   },\n   *   position: {\n   *     vertical: AUC_POSITIONS.BELOW,\n   *     horizontal: AUC_POSITIONS.AFTER\n   *   }\n   * }\n   */\n  @Input()\n  public networkDropdownConfig: AucDropdownConfig = {\n    overlay: {\n      transparent: true\n    },\n    position: {\n      vertical: AUC_POSITIONS.BELOW,\n      horizontal: AUC_POSITIONS.AFTER\n    }\n  }\n\n  /**\n   * List of the supported networks. Gets from this._walletConnectService.supportedNetworks\n   */\n  public get networkOptions(): AucNetworkOption[] {\n    return this._walletConnectService.supportedNetworks;\n  };\n\n  public isWrongNetwork: boolean = false;\n  public isOptionsOpen: boolean = false;\n  public currentNetwork!: AucNetworkOption;\n  public COLORS = AS_COLOR_GROUP;\n\n  private _sub: Subscription = new Subscription();\n\n  constructor(\n    private _cdr: ChangeDetectorRef,\n    private _walletConnectService: AucWalletConnectService,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _dialogService: AucDialogService\n  ) {}\n\n  public ngOnInit(): void {\n    this._sub.add(\n      this._walletConnectService.selectedNetwork$\n        .subscribe((network: AucNetworkOption) => {\n          this.currentNetwork = network;\n          this.isWrongNetwork = !this.currentNetwork;\n          this.isOptionsOpen = false;\n\n          this._cdr.markForCheck();\n        })\n    );\n\n    this._sub.add(\n      this._walletConnectService.cantFindAddingNetwork$\n        .subscribe(() => {\n          this._dialogService.open<AucNoNetworkConfigComponent, AucNoNetworkConfigDialogDataI>(\n            AucNoNetworkConfigComponent,\n            {\n              data: {\n                title: `Metamask can't find this network.`,\n                text: `Please add this network by yourself.`\n              },\n              width: '100%',\n              maxWidth: '420px',\n              dialogClass: 'auc-no-network-config-dialog',\n              overlay: {\n                closeByClick: true,\n                overlayClass: 'auc-no-network-config-dialog-overlay',\n              },\n              panel: {\n                panelClass: 'auc-no-network-config-dialog-panel'\n              },\n            }\n          );\n        })\n    )\n  }\n\n  public setOpened(opened: boolean): void {\n    this.isOptionsOpen = opened;\n  }\n\n  public onNetworkOptionClick(option: AucNetworkOption): void {\n    this.setOpened(false);\n\n    if (!option?.chainId) {\n      console.error(`Cant find selected network`);\n\n      return;\n    }\n\n    this._sub.add(\n      this._walletConnectService.switchEthereumChain(option.chainId, option.chainParams)\n        .subscribe()\n    )\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/src/lib/scss/variables\";\n@import \"../../../../styles/src/lib/scss/functions\";\n@import \"../../../../styles/src/lib/scss/mixins\";\n\n:host {\n  display: inline-block;\n}\n\n.auc-network-options {\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  font-family: $as-font-family;\n  min-width: 180px;\n  padding: 8px 0;\n  background: $white;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(56, 64, 75, 0.1);\n  list-style-type: none;\n}\n\n.auc-network-options-header {\n  display: inline-block;\n  padding: 0 12px;\n  margin-top: 4px;\n  margin-bottom: 8px;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 20px;\n  color: getColor(grey, base);\n}\n\n.auc-network-options-item {\n  display: flex;\n  align-items: center;\n  height: 40px;\n  padding: 8px 12px;\n  @include transition;\n\n  &:hover {\n    cursor: pointer;\n    background: $grey-bg;\n  }\n\n  &.auc-network-options-item-disabled {\n    cursor: default;\n    opacity: .5;\n    pointer-events: none;\n  }\n}\n\n.auc-network-options-img {\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n\n  > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n}\n\n.auc-network-options-name {\n  display: inline-block;\n  margin-right: auto;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: $black;\n}\n",
                    "styleUrl": "./network-dropdown.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_dialogService",
                        "type": "AucDialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 59,
                "jsdoctags": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dialogService",
                        "type": "AucDialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "networkOptions": {
                    "name": "networkOptions",
                    "getSignature": {
                        "name": "networkOptions",
                        "type": "[]",
                        "returnType": "AucNetworkOption[]",
                        "line": 50,
                        "rawdescription": "\n\nList of the supported networks. Gets from this._walletConnectService.supportedNetworks\n",
                        "description": "<p>List of the supported networks. Gets from this._walletConnectService.supportedNetworks</p>\n"
                    }
                }
            },
            "templateData": "<auc-button class=\"auc-network-dropdown-btn\"\n            aucTrigger\n            #networkOptionsTrigger=\"aucTrigger\"\n            [label]=\"isWrongNetwork ? 'Wrong Network' : currentNetwork?.name\"\n            [color]=\"isWrongNetwork ? COLORS.RED : COLORS.WHITE\"\n            [leftIcon]=\"isWrongNetwork ? 'wcl-icon-wrong' : currentNetwork?.icon\"\n            [rightIcon]=\"isOptionsOpen ? 'wcl-icon-chevron-up' : 'wcl-icon-chevron-down'\"\n            (onShowHide)=\"setOpened($event)\">\n</auc-button>\n\n<auc-dropdown-menu *ngIf=\"isOptionsOpen\"\n                           [config]=\"networkDropdownConfig\"\n                           [trigger]=\"networkOptionsTrigger\"\n>\n  <ul class=\"auc-network-options\">\n    <li class=\"auc-network-options-header\">Select a Network</li>\n    <li *ngFor=\"let option of networkOptions\"\n        (click)=\"onNetworkOptionClick(option)\"\n        [class.auc-network-options__item--disabled]=\"option.disabled\"\n        class=\"auc-network-options-item\">\n      <div class=\"auc-network-options-img\">\n        <img [src]=\"option.icon\" [alt]=\"option.name\">\n      </div>\n\n      <span class=\"auc-network-options-name\">{{ option.name }}</span>\n\n      <i [class.wcl-icon-active]=\"option.isActive\"></i>\n    </li>\n  </ul>\n</auc-dropdown-menu>\n"
        },
        {
            "name": "AucNoNetworkConfigComponent",
            "id": "component-AucNoNetworkConfigComponent-f7aea5e0269237143c85f8d0372cb0768ca9ed5b4910508b962b3781490613a5d63d8ab04e19e8850c837ce77a64463a39de92a1539d2a0ebc2573a7b5d63bfc",
            "file": "projects/applicature/components/src/lib/network-dropdown/no-network-config/no-network-config.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-no-network-config",
            "styleUrls": [
                "./no-network-config.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./no-network-config.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucDialogConfig<AucNoNetworkConfigDialogDataI>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { AucNoNetworkConfigDialogDataI } from './interfaces';\nimport { AucDialogConfig, AucDialogRef } from '../../dialog';\n\n\n@Component({\n  selector: 'auc-no-network-config',\n  templateUrl: './no-network-config.component.html',\n  styleUrls: [ './no-network-config.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AucNoNetworkConfigComponent {\n\n  constructor(public config: AucDialogConfig<AucNoNetworkConfigDialogDataI>,\n              private _dialogRef: AucDialogRef) {\n  }\n\n  onClose(): void {\n    this._dialogRef.close();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../../styles/src/lib/scss/variables\";\n@import \"../../../../../styles/src/lib/scss/functions\";\n\n.auc-no-network-dialog-container {\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: center;\n  color: getColor(grey, base);\n}\n\n.auc-no-network-dialog-title {\n  margin: 8px 0;\n  text-align: center;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 24px;\n  color: $black;\n}\n\n.auc-no-network-dialog-text {\n  text-align: center;\n  margin: 15px 0;\n}\n\n.auc-no-network-dialog-actions {\n  margin-top: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.auc-no-network-dialog-action-btn {\n  width: 100%\n}\n",
                    "styleUrl": "./no-network-config.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "config",
                        "type": "AucDialogConfig<AucNoNetworkConfigDialogDataI>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_dialogRef",
                        "type": "AucDialogRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "config",
                        "type": "AucDialogConfig<AucNoNetworkConfigDialogDataI>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dialogRef",
                        "type": "AucDialogRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"auc-no-network-dialog-container\">\n  <h2 class=\"auc-no-network-dialog-title\">\n    {{config?.data?.title}}\n  </h2>\n\n  <p class=\"auc-no-network-dialog-text\">{{config?.data?.text}}</p>\n\n  <div class=\"auc-no-network-dialog-actions\">\n    <auc-button class=\"auc-no-network-dialog-action-btn\"\n                label=\"Ok\"\n                [adaptive]=\"true\"\n                [height]=\"48\"\n                (onClick)=\"onClose()\"\n    >\n    </auc-button>\n  </div>\n</div>\n"
        },
        {
            "name": "AucOverlayComponent",
            "id": "component-AucOverlayComponent-a21c7a6676e578894bd57ab47a6c037c1d2ddb65051b7426637f933cc5817133471cf195a14ae9a7b5cebaa45c64233f6214c66d87ac7463bc77475381971816",
            "file": "projects/applicature/components/src/lib/overlay/overlay.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-overlay",
            "styleUrls": [
                "./overlay.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./overlay.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "customize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link customize} - It's an `@Input()` parameter.\nYou can customize overlay.\nThis is an optional parameter.\n",
                    "description": "<p>{@link customize} - It&#39;s an <code>@Input()</code> parameter.\nYou can customize overlay.\nThis is an optional parameter.</p>\n",
                    "line": 18,
                    "type": "AucOverlayCustomizationConfig",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "overlayClicked",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link overlayClicked} - It's an `@Output()` parameter.\nEmits when overlay was clicked.\n",
                    "description": "<p>{@link overlayClicked} - It&#39;s an <code>@Output()</code> parameter.\nEmits when overlay was clicked.</p>\n",
                    "line": 24,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onOverlayClicked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, EventEmitter, Output, Input } from '@angular/core';\n\nimport { AucOverlayCustomizationConfig } from './interfaces';\n\n\n@Component({\n  selector: 'auc-overlay',\n  templateUrl: './overlay.component.html',\n  styleUrls: [ './overlay.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AucOverlayComponent {\n  /**\n   * {@link customize} - It's an `@Input()` parameter.\n   * You can customize overlay.\n   * This is an optional parameter.\n   */\n  @Input() customize?: AucOverlayCustomizationConfig\n\n  /**\n   * {@link overlayClicked} - It's an `@Output()` parameter.\n   * Emits when overlay was clicked.\n   */\n  @Output() overlayClicked: EventEmitter<void> = new EventEmitter<void>();\n\n  public onOverlayClicked(): void {\n    this.overlayClicked.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  z-index: 9999;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n}\n\n.auc-overlay {\n  width: 100%;\n  height: 100%;\n\n  &:not(.transparent) {\n    background-color: rgba(0, 0, 0, 0.32);\n  }\n}\n\n",
                    "styleUrl": "./overlay.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"auc-overlay\"\n     [aucCustomClass]=\"customize?.overlayClass\"\n     [class.transparent]=\"customize?.transparent\"\n     (click)=\"onOverlayClicked()\"\n>\n</div>\n"
        },
        {
            "name": "AucProgressBarComponent",
            "id": "component-AucProgressBarComponent-abfa82f6d21090c002a2670268693423f9032253f36492067eb09bf1bdd8cc6cb05bffbbd00a1f7507a02b822aeeb77e33808bc80bcbdf2386897e31d8401b16",
            "file": "projects/applicature/components/src/lib/progress-bar/progress-bar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-progress-bar",
            "styleUrls": [
                "./progress-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./progress-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "progress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link progress} - It's an `@Input()` parameter.\nSets progress value.\nThis is required parameter.\n",
                    "description": "<p>{@link progress} - It&#39;s an <code>@Input()</code> parameter.\nSets progress value.\nThis is required parameter.</p>\n",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "total",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link total} - It's an `@Input()` parameter.\nSets total value for the progress.\nYou might never use it.\nThis is an optional parameter. The default value is 100.\n",
                    "description": "<p>{@link total} - It&#39;s an <code>@Input()</code> parameter.\nSets total value for the progress.\nYou might never use it.\nThis is an optional parameter. The default value is 100.</p>\n",
                    "line": 24,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "calculateData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'auc-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: [ './progress-bar.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AucProgressBarComponent implements OnInit {\n  /**\n   * {@link progress} - It's an `@Input()` parameter.\n   * Sets progress value.\n   * This is required parameter.\n   */\n  @Input() progress!: number;\n\n  /**\n   * {@link total} - It's an `@Input()` parameter.\n   * Sets total value for the progress.\n   * You might never use it.\n   * This is an optional parameter. The default value is 100.\n   */\n  @Input() total: number = 100;\n\n  ngOnInit(): void {\n    this.calculateData();\n  }\n\n  private calculateData(): void {\n    if (!this.progress) {\n      this.progress = 0;\n    }\n\n    if (this.total === 0) {\n      this.total = this.progress;\n    } else if (!this.total) {\n      this.total = 100;\n    }\n\n    if (this.progress > this.total) {\n      this.progress = 100;\n      this.total = 100;\n    }\n\n    this.progress = (this.progress / this.total) * 100;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/src/lib/scss/functions\";\n\n.auc-progress-bar-container {\n  height: 8px;\n  width: 100%;\n  border-radius: 4px;\n  overflow: hidden;\n  background-color: getColor(grey, light);\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n}\n\n.auc-progress-bar {\n  width: 0;\n  height: 100%;\n  transition: all 0.25s;\n  background-color: getColor(blue, base);\n}\n",
                    "styleUrl": "./progress-bar.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"auc-progress-bar-container\">\n  <div class=\"auc-progress-bar\"\n       [ngStyle]=\"{'width': progress + '%'}\">\n  </div>\n</div>\n"
        },
        {
            "name": "AucSpinnerComponent",
            "id": "component-AucSpinnerComponent-4444d8bd22dbf9ab42bb393a58d7b97de7dc81b1ebb051524ff15e0c0e8815460393b394dcb908438afaef629ff86f13d8b8155b986ae5a5a9f178f8f022ccbe",
            "file": "projects/applicature/components/src/lib/spinner/spinner.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-spinner",
            "styleUrls": [
                "./spinner.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./spinner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "AsColors[AS_COLOR_GROUP.BLUE].border",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link color} - It's an `@Input()` parameter.\nSets theme of the spinner.\nIt's an optional parameter. The default value is #4678F0 - blue.\nYou can use constant {@link AsColors} or use other colors by yourself.\n",
                    "description": "<p>{@link color} - It&#39;s an <code>@Input()</code> parameter.\nSets theme of the spinner.\nIt&#39;s an optional parameter. The default value is #4678F0 - blue.\nYou can use constant {@link AsColors} or use other colors by yourself.</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "diameter",
                    "defaultValue": "40",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link diameter} - It's an `@Input()` parameter.\nSets diameter for the spinner.\nThis is an optional parameter. The default value is 40.\n",
                    "description": "<p>{@link diameter} - It&#39;s an <code>@Input()</code> parameter.\nSets diameter for the spinner.\nThis is an optional parameter. The default value is 40.</p>\n",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link width} - It's an `@Input()` parameter.\nВets the thickness of the spinnerю\nThis is an optional parameter. The default value is 4.\n",
                    "description": "<p>{@link width} - It&#39;s an <code>@Input()</code> parameter.\nВets the thickness of the spinnerю\nThis is an optional parameter. The default value is 4.</p>\n",
                    "line": 25,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "parts",
                    "defaultValue": "Array.from({ length: 4 }, () => undefined)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\n\nimport { AS_COLOR_GROUP, AsColors } from '@applicature/styles';\n\n\n@Component({\n  selector: 'auc-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: [ './spinner.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AucSpinnerComponent {\n  /**\n   * {@link diameter} - It's an `@Input()` parameter.\n   * Sets diameter for the spinner.\n   * This is an optional parameter. The default value is 40.\n   */\n  @Input() diameter?: number = 40;\n\n  /**\n   * {@link width} - It's an `@Input()` parameter.\n   * Вets the thickness of the spinnerю\n   * This is an optional parameter. The default value is 4.\n   */\n  @Input() width?: number = 4;\n\n  /**\n   * {@link color} - It's an `@Input()` parameter.\n   * Sets theme of the spinner.\n   * It's an optional parameter. The default value is #4678F0 - blue.\n   * You can use constant {@link AsColors} or use other colors by yourself.\n   */\n  @Input() color?: string = AsColors[AS_COLOR_GROUP.BLUE].border;\n\n  public parts = Array.from({ length: 4 }, () => undefined);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/src/lib/scss/functions\";\n\n:host {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  line-height: 0;\n}\n\n.auc-spinner {\n  position: relative;\n  width: 40px;\n  height: 40px;\n  line-height: 0;\n\n  div {\n    box-sizing: border-box;\n    display: block;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border-width: 4px;\n    border-style: solid;\n    border-color: getColor(blue, base) transparent transparent transparent;\n    border-radius: 50%;\n    animation: auc-spinner 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n\n    &:nth-child(1) {\n      animation-delay: -0.45s;\n    }\n\n    &:nth-child(2) {\n      animation-delay: -0.3s;\n    }\n\n    &:nth-child(3) {\n      animation-delay: -0.15s;\n    }\n  }\n}\n\n@keyframes auc-spinner {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n",
                    "styleUrl": "./spinner.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"auc-spinner\" [ngStyle]=\"{ width: diameter + 'px', height: diameter + 'px' }\">\n  <div *ngFor=\"let item of parts\" [ngStyle]=\"{ 'border-width': width + 'px', 'border-top-color': color }\"></div>\n</div>\n"
        },
        {
            "name": "AucTableComponent",
            "id": "component-AucTableComponent-495795cc9969e36c48701dc5c69ee78a58bd619c165146f67cc7f7a9d41065083d6717e3bd296b0bdc8614685fb91fdd222f120e0be2604d9095e7e7eb692e9a",
            "file": "projects/applicature/components/src/lib/table/table.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-table",
            "styleUrls": [
                "./table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "customClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link customize} - It's an `@Input()` parameter.\nSets custom class to the table container.\nThis is an optional parameter.\n",
                    "description": "<p>{@link customize} - It&#39;s an <code>@Input()</code> parameter.\nSets custom class to the table container.\nThis is an optional parameter.</p>\n",
                    "line": 44,
                    "type": "string | string[]",
                    "decorators": []
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link data} - It's an `@Input()` parameter.\nSets table data.\nThis is required parameter.\n",
                    "description": "<p>{@link data} - It&#39;s an <code>@Input()</code> parameter.\nSets table data.\nThis is required parameter.</p>\n",
                    "line": 30,
                    "type": "AucTableRow[]",
                    "decorators": []
                },
                {
                    "name": "isLoadMore",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link isLoadMore} - It's an `@Input()` parameter.\nIf true the Load more button will be visible.\nThis is an optional parameter. The default value is false\n",
                    "description": "<p>{@link isLoadMore} - It&#39;s an <code>@Input()</code> parameter.\nIf true the Load more button will be visible.\nThis is an optional parameter. The default value is false</p>\n",
                    "line": 37,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "tableHeaders",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link tableHeaders} - It's an `@Input()` parameter.\nSets table headers.\nThis is required parameter.\n",
                    "description": "<p>{@link tableHeaders} - It&#39;s an <code>@Input()</code> parameter.\nSets table headers.\nThis is required parameter.</p>\n",
                    "line": 20,
                    "type": "AucTableHeaderItem[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "loadMore",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link loadMore} - It's an `@Output()` parameter.\nEmits when load more button was clicked.\n",
                    "description": "<p>{@link loadMore} - It&#39;s an <code>@Output()</code> parameter.\nEmits when load more button was clicked.</p>\n",
                    "line": 50,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "sort",
                    "defaultValue": "new EventEmitter<AucSort>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link sort} - It's an `@Output()` parameter.\nEmits when sort was clicked.\n",
                    "description": "<p>{@link sort} - It&#39;s an <code>@Output()</code> parameter.\nEmits when sort was clicked.</p>\n",
                    "line": 56,
                    "type": "EventEmitter<AucSort>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "headers",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucTableHeaderItem[]",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "SORT_DIRECTION",
                    "defaultValue": "AUC_SORT_DIRECTION",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onLoadMore",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sortBy",
                    "args": [
                        {
                            "name": "sort",
                            "type": "AucSort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "columnIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "sort",
                            "type": "AucSort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "columnIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\n\nimport { AucTableHeaderItem, AucTableRow } from './interfaces';\nimport { AucSort } from '../interfaces';\nimport { AUC_SORT_DIRECTION } from '../enums';\n\n\n@Component({\n  selector: 'auc-table',\n  templateUrl: './table.component.html',\n  styleUrls: [ './table.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AucTableComponent {\n  /**\n   * {@link tableHeaders} - It's an `@Input()` parameter.\n   * Sets table headers.\n   * This is required parameter.\n   */\n  @Input() set tableHeaders(headers: AucTableHeaderItem[]) {\n    this.headers = headers.sort((a: AucTableHeaderItem, b: AucTableHeaderItem) =>\n      a.position - b.position);\n  };\n\n  /**\n   * {@link data} - It's an `@Input()` parameter.\n   * Sets table data.\n   * This is required parameter.\n   */\n  @Input() data: AucTableRow[] = [];\n\n  /**\n   * {@link isLoadMore} - It's an `@Input()` parameter.\n   * If true the Load more button will be visible.\n   * This is an optional parameter. The default value is false\n   */\n  @Input() isLoadMore: boolean = false;\n\n  /**\n   * {@link customize} - It's an `@Input()` parameter.\n   * Sets custom class to the table container.\n   * This is an optional parameter.\n   */\n  @Input() customClass?: string | string[];\n\n  /**\n   * {@link loadMore} - It's an `@Output()` parameter.\n   * Emits when load more button was clicked.\n   */\n  @Output() loadMore: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * {@link sort} - It's an `@Output()` parameter.\n   * Emits when sort was clicked.\n   */\n  @Output() sort: EventEmitter<AucSort> = new EventEmitter<AucSort>();\n\n  public headers: AucTableHeaderItem[] = [];\n  public SORT_DIRECTION = AUC_SORT_DIRECTION;\n\n  public onLoadMore(): void {\n    this.loadMore.emit();\n  }\n\n  public sortBy(sort: AucSort, columnIndex: number): void {\n    if (!sort || !this.headers[columnIndex]?.sort) {\n      return;\n    }\n\n    sort.sortDirection = sort.sortDirection === AUC_SORT_DIRECTION.ASC\n      ? AUC_SORT_DIRECTION.DESC\n      : AUC_SORT_DIRECTION.ASC;\n    this.headers[columnIndex].sort.sortDirection = sort.sortDirection;\n\n    this.sort.emit(sort);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/src/lib/scss/functions\";\n@import \"../../../../styles/src/lib/scss/mixins\";\n\n:host {\n  display: block;\n  width: 100%;\n  font-family: $as-font-family;\n  font-style: normal;\n  font-size: 14px;\n  line-height: 20px;\n  border-radius: 8px;\n  background-color: getColor(white, base);\n  overflow: hidden;\n}\n\n.auc-table-container {\n  width: 100%;\n  overflow: hidden;\n  overflow-x: auto;\n}\n\n.auc-table {\n  width: 100%;\n  border: none;\n  border-spacing: 0;\n  border-collapse: collapse;\n  overflow-x: auto;\n\n  tr {\n    & > th,\n    & > td {\n      text-align: left;\n    }\n\n    & > th {\n      padding: 18px 20px;\n      font-weight: bold;\n      color: getColor(grey, base);\n      border-bottom: 1px solid getColor(grey, light);\n    }\n\n    & > td {\n      padding: 14px 20px;\n      font-weight: 500;\n    }\n  }\n\n  tbody {\n    tr {\n      @include transition;\n\n      &:hover {\n        background-color: getColor(grey, background);\n      }\n    }\n  }\n}\n\n.auc-table-cell {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n\n  &.sortable {\n    color: getColor(blue, base);\n    cursor: pointer;\n    @include transition;\n\n    &:hover {\n      color: getColor(blue, hover);\n    }\n  }\n\n  & > *:not(:first-child) {\n    margin-left: 8px;\n  }\n\n  & > .auc-table-sort {\n    margin-left: 4px;\n    line-height: 0;\n  }\n}\n\n.auc-table-cell-value {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n\n  &.with-bg {\n    padding: 4px 8px;\n    border-radius: 4px;\n    background-color: getColor(grey, background);\n  }\n\n  auc-icon {\n    margin-right: 8px;\n  }\n}\n\n.auc-table-link {\n  color: getColor(blue, base);\n  text-decoration: none;\n  @include transition;\n\n  &:hover {\n    text-decoration: underline;\n  }\n}\n\n.auc-table-load-more {\n  border-top: 1px solid getColor(grey, light);\n  padding: 14px 20px;\n  color: getColor(grey, base);\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  @include transition;\n\n  &:hover {\n    background-color: getColor(white, hover);\n    color: getColor(white, text);\n  }\n}\n\n.auc-table-load-more-text {\n  padding-right: 8px;\n}\n",
                    "styleUrl": "./table.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "tableHeaders": {
                    "name": "tableHeaders",
                    "setSignature": {
                        "name": "tableHeaders",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "headers",
                                "type": "AucTableHeaderItem[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 20,
                        "rawdescription": "\n\n{@link tableHeaders} - It's an `@Input()` parameter.\nSets table headers.\nThis is required parameter.\n",
                        "description": "<p>{@link tableHeaders} - It&#39;s an <code>@Input()</code> parameter.\nSets table headers.\nThis is required parameter.</p>\n",
                        "jsdoctags": [
                            {
                                "name": "headers",
                                "type": "AucTableHeaderItem[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div class=\"auc-table-component\" [aucCustomClass]=\"customClass\">\n  <div class=\"auc-table-container\">\n    <table class=\"auc-table\">\n      <thead>\n      <tr>\n        <ng-container *ngFor=\"let header of headers; let i = index\">\n          <th>\n            <div class=\"auc-table-cell\" [class.sortable]=\"header.sort\" (click)=\"sortBy(header.sort, i)\">\n              <div>{{header.value}}</div>\n\n              <div *ngIf=\"header.sort\"\n                   class=\"auc-table-sort\"\n              >\n                <auc-icon\n                  [icon]=\"header.sort.sortDirection === SORT_DIRECTION.DESC? 'wcl-icon-arrow-down' : 'wcl-icon-arrow-up'\"></auc-icon>\n              </div>\n            </div>\n          </th>\n        </ng-container>\n      </tr>\n      </thead>\n\n      <tbody>\n      <tr *ngFor=\"let row of data; let i = index\">\n        <td *ngFor=\"let header of headers\">\n          <div class=\"auc-table-cell\">\n            <ng-container *ngFor=\"let item of [].concat(row[header.rowKey])\">\n              <a *ngIf=\"item.link; else other\"\n                 [href]=\"item.link\"\n                 class=\"auc-table-link\"\n                 target=\"_blank\"\n              >\n                <ng-container *ngTemplateOutlet=\"cellValueRef; context: {$implicit: item}\"></ng-container>\n              </a>\n\n              <ng-template #other>\n                <ng-container *ngTemplateOutlet=\"cellValueRef; context: {$implicit: item}\"></ng-container>\n              </ng-template>\n            </ng-container>\n          </div>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <div class=\"auc-table-load-more\"\n       *ngIf=\"isLoadMore\"\n       (click)=\"onLoadMore()\">\n    <span class=\"auc-table-load-more-text\">Load more</span>\n    <auc-icon icon=\"wcl-icon-chevron-down\"></auc-icon>\n  </div>\n\n  <ng-template #cellValueRef let-item>\n    <div class=\"auc-table-cell-value\" [class.with-bg]=\"item.withBg\">\n      <auc-icon *ngIf=\"item.icon as icon\" [icon]=\"icon\"></auc-icon>\n      {{item.value}}\n    </div>\n  </ng-template>\n</div>\n"
        },
        {
            "name": "AucTransactionsHistoryComponent",
            "id": "component-AucTransactionsHistoryComponent-295e3d3c98118068272e58ebea6387b196cec80ad6d631b4d208bd66cbce6a40cc0add26cfa3fd8ba490908f18fbe5fe14c8d3caf1e3f70e06f1a40a70519b33",
            "file": "projects/applicature/components/src/lib/transactions/components/transactions-history/transactions-history.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-transactions-history",
            "styleUrls": [
                "./transactions-history.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./transactions-history.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link disabled} - It's an `@Input()` parameter.\nWhether the button is disabled.\nThis is an optional parameter. The default value is false.\n",
                    "description": "<p>{@link disabled} - It&#39;s an <code>@Input()</code> parameter.\nWhether the button is disabled.\nThis is an optional parameter. The default value is false.</p>\n",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_sub",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "BTN_APPEARANCE",
                    "defaultValue": "AUC_BUTTON_APPEARANCE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "COLORS",
                    "defaultValue": "AS_COLOR_GROUP",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hasFailedTx",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hasPendingTx",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "txCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onTransactionsClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { AS_COLOR_GROUP } from '@applicature/styles';\n\nimport { AUC_TRANSACTION_STATUS } from '../../../enums';\nimport { AucDialogService } from '../../../dialog';\nimport { AUC_BUTTON_APPEARANCE } from '../../../button';\nimport { AucEtherscanTransactionLocalStorage } from '../../../interfaces';\nimport { AucRecentTransactionsModalData, AucTransactionsHistoryModalComponent } from '../transactions-history-modal';\nimport { AucTransactionService } from '../../services';\n\n\n@Component({\n  selector: 'auc-transactions-history',\n  templateUrl: './transactions-history.component.html',\n  styleUrls: [ './transactions-history.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AucTransactionsHistoryComponent implements OnInit {\n  /**\n   * {@link disabled} - It's an `@Input()` parameter.\n   * Whether the button is disabled.\n   * This is an optional parameter. The default value is false.\n   */\n  @Input()\n  public disabled: boolean = false;\n\n  public hasFailedTx: boolean = false;\n  public hasPendingTx: boolean = false;\n  public txCount: number = 0;\n  public COLORS = AS_COLOR_GROUP;\n  public BTN_APPEARANCE = AUC_BUTTON_APPEARANCE;\n\n  private _sub: Subscription = new Subscription();\n\n  constructor(\n    private _dialogService: AucDialogService,\n    private _cdr: ChangeDetectorRef,\n    private _transactionService: AucTransactionService\n  ) {\n  }\n\n  public ngOnInit(): void {\n    this._sub.add(\n      this._transactionService.transactionsChanged$\n        .subscribe((transactions: AucEtherscanTransactionLocalStorage[]) => {\n          this.txCount = transactions.filter((tx: AucEtherscanTransactionLocalStorage) => {\n            return tx.status === AUC_TRANSACTION_STATUS.FAIL && !tx.viewed;\n          }).length;\n\n          this.hasFailedTx = this.txCount > 0;\n\n          if (!this.hasFailedTx) {\n            this.txCount = transactions.filter((tx: AucEtherscanTransactionLocalStorage) => {\n              return tx.status === AUC_TRANSACTION_STATUS.PENDING;\n            }).length;\n\n            this.hasPendingTx = this.txCount > 0;\n          }\n\n          this._cdr.markForCheck();\n        })\n    );\n  }\n\n  public onTransactionsClick(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    const config = {\n      data: {\n        header: 'Recent transactions'\n      },\n      dialogClass: 'auc-recent-transactions-dialog',\n      width: '100%',\n      maxWidth: '372px',\n      overlay: {\n        closeByClick: true\n      }\n    };\n\n    this._dialogService.open<AucTransactionsHistoryModalComponent, AucRecentTransactionsModalData>(\n      AucTransactionsHistoryModalComponent,\n      config\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: inline-block;\n}\n",
                    "styleUrl": "./transactions-history.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_dialogService",
                        "type": "AucDialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_transactionService",
                        "type": "AucTransactionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "_dialogService",
                        "type": "AucDialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_transactionService",
                        "type": "AucTransactionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<auc-button class=\"auc-transaction-history-btn\"\n            *ngIf=\"!(hasFailedTx || hasPendingTx)\"\n            [color]=\"COLORS.WHITE\"\n            [appearance]=\"BTN_APPEARANCE.ICON\"\n            leftIcon=\"wcl-icon-recent\"\n            (onClick)=\"onTransactionsClick()\"\n>\n</auc-button>\n\n<auc-button class=\"auc-transaction-history-btn\"\n            *ngIf=\"hasFailedTx && !hasPendingTx\"\n            [label]=\"txCount + ' failing'\"\n            [color]=\"COLORS.RED\"\n            rightIcon=\"wcl-icon-fail\"\n            (onClick)=\"onTransactionsClick()\"\n>\n</auc-button>\n\n<auc-button class=\"auc-transaction-history-btn\"\n            *ngIf=\"hasPendingTx\"\n            [label]=\"txCount + ' pending'\"\n            [pending]=\"true\"\n            [color]=\"COLORS.WHITE\"\n            (onClick)=\"onTransactionsClick()\"\n>\n</auc-button>\n"
        },
        {
            "name": "AucTransactionsHistoryModalComponent",
            "id": "component-AucTransactionsHistoryModalComponent-f8c1ac58ca7ecfad69d6f87b5ef1f7801d49050a83b5da49be216ba5283dad8b8fec6c165ac160d1cfafe92f7f6a6e623e28ce8d04cfdd57b08b9bfda163fccc",
            "file": "projects/applicature/components/src/lib/transactions/components/transactions-history-modal/transactions-history-modal.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-transactions-history-modal",
            "styleUrls": [
                "./transactions-history-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./transactions-history-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucRecentTransactionsModalData",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "transactions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<AucEtherscanTransactionLocalStorage[]>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onCloseClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AucEtherscanTransactionLocalStorage } from '../../../interfaces';\nimport { AucDialogConfig, AucDialogRef } from '../../../dialog';\nimport { AucRecentTransactionsModalData } from './interfaces';\nimport { AucTransactionService } from '../../services';\n\n\n@Component({\n  selector: 'auc-transactions-history-modal',\n  templateUrl: './transactions-history-modal.component.html',\n  styleUrls: [ './transactions-history-modal.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AucTransactionsHistoryModalComponent implements OnDestroy {\n  public transactions$: Observable<AucEtherscanTransactionLocalStorage[]>;\n  public data: AucRecentTransactionsModalData;\n\n  constructor(\n    private _config: AucDialogConfig<AucRecentTransactionsModalData>,\n    private _dialogRef: AucDialogRef,\n    private _transactionService: AucTransactionService\n  ) {\n    this.data = this._config.data;\n    this.transactions$ = this._transactionService.transactionsChanged$;\n  }\n\n  public onCloseClick(): void {\n    this._dialogRef.close();\n  }\n\n  public ngOnDestroy(): void {\n    this._transactionService.markAsViewed();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../../../styles/src/lib/scss/variables\";\n@import \"../../../../../../styles/src/lib/scss/functions\";\n@import \"../../../../../../styles/src/lib/scss/mixins\";\n\n:host {\n  display: block;\n  height: 100%;\n}\n\n.auc-transactions-history {\n  display: flex;\n  flex-wrap: wrap;\n  font-family: $as-font-family;\n  padding: 20px 0;\n  height: 100%;\n  width: 100%;\n\n  & > *:not(.auc-dialog-header) {\n    width: 100%;\n  }\n}\n\n.auc-dialog-header {\n  margin-left: 20px;\n  margin-right: 20px;\n  width: calc(100% - 40px);\n}\n\n.auc-transactions-history-list {\n  display: block;\n  max-height: 392px;\n  overflow: hidden;\n  overflow-y: auto;\n  padding: 0 20px;\n}\n\n@media (max-width: 767px) {\n  .auc-transactions-history-list {\n    max-height: calc(100vh - 84px);\n  }\n}\n\n",
                    "styleUrl": "./transactions-history-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_config",
                        "type": "AucDialogConfig<AucRecentTransactionsModalData>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_dialogRef",
                        "type": "AucDialogRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_transactionService",
                        "type": "AucTransactionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "_config",
                        "type": "AucDialogConfig<AucRecentTransactionsModalData>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dialogRef",
                        "type": "AucDialogRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_transactionService",
                        "type": "AucTransactionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<div class=\"auc-transactions-history\">\n  <div class=\"auc-dialog-header\">\n    <h1>{{ data.header }}</h1>\n\n    <button type=\"button\" class=\"auc-close-btn\">\n      <auc-icon icon=\"wcl-icon-close\"\n                (click)=\"onCloseClick()\"\n      >\n      </auc-icon>\n    </button>\n  </div>\n\n  <ng-container *ngIf=\"(transactions$ | async) as transactions\">\n    <div class=\"auc-transactions-history-list\">\n      <auc-transactions-list [transactions]=\"transactions\"></auc-transactions-list>\n    </div>\n  </ng-container>\n</div>\n"
        },
        {
            "name": "AucTransactionsListComponent",
            "id": "component-AucTransactionsListComponent-5e150120035db863e460030580ad9873ffb91ef1e9fd62319e8a08f1f2246d8aa7a8207d624b7014cd79da2d8ccfc7b820ca45d1cf682ed85e5adebb11dcb30c",
            "file": "projects/applicature/components/src/lib/transactions/components/transactions-list/transactions-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-transactions-list",
            "styleUrls": [
                "./transactions-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./transactions-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "emptyText",
                    "defaultValue": "'Your transactions will appear here...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link emptyText} - It's an `@Input()` parameter. <br>\nSets text if no transactions. <br>\nThis is an optional parameter. The default value is \"Your transactions will appear here...\"\n",
                    "description": "<p>{@link emptyText} - It&#39;s an <code>@Input()</code> parameter. <br>\nSets text if no transactions. <br>\nThis is an optional parameter. The default value is &quot;Your transactions will appear here...&quot;</p>\n",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "transactions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n{@link transactions} - It's an `@Input()` parameter. <br>\nSets transactions list. <br>\nThis is required parameter.\n",
                    "description": "<p>{@link transactions} - It&#39;s an <code>@Input()</code> parameter. <br>\nSets transactions list. <br>\nThis is required parameter.</p>\n",
                    "line": 19,
                    "type": "AucEtherscanTransactionLocalStorage[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\n\nimport { AucEtherscanTransactionLocalStorage } from '../../../interfaces';\n\n\n@Component({\n  selector: 'auc-transactions-list',\n  templateUrl: './transactions-list.component.html',\n  styleUrls: [ './transactions-list.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AucTransactionsListComponent {\n  /**\n   * {@link transactions} - It's an `@Input()` parameter. <br>\n   * Sets transactions list. <br>\n   * This is required parameter.\n   */\n  @Input()\n  public transactions: AucEtherscanTransactionLocalStorage[];\n\n  /**\n   * {@link emptyText} - It's an `@Input()` parameter. <br>\n   * Sets text if no transactions. <br>\n   * This is an optional parameter. The default value is \"Your transactions will appear here...\"\n   */\n  @Input()\n  public emptyText?: string = 'Your transactions will appear here...';\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../../../styles/src/lib/scss/functions\";\n@import \"../../../../../../styles/src/lib/scss/mixins\";\n\n.auc-transactions-list {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: auto;\n}\n\n.auc-transactions-list-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 8px;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n\n  a {\n    color: getColor(blue, base);\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 20px;\n    text-decoration: none;\n    max-width: calc(100% - 25px);\n    @include transition;\n    @include text-overflow;\n\n    &:hover {\n      text-decoration: underline;\n    }\n\n    &.fail {\n      color: getColor(red, base);\n    }\n  }\n\n  .auc-transaction-status {\n    width: 20px;\n    height: 20px;\n    font-size: 20px;\n\n    &.auc-transaction-status-fail {\n      color: getColor(red, base);\n    }\n\n    &.auc-transaction-status-success {\n      color: getColor(green, base);\n    }\n  }\n}\n\n.auc-transaction-empty {\n  color: getColor(grey, base);\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 20px;\n  text-align: center;\n}\n",
                    "styleUrl": "./transactions-list.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div *ngIf=\"transactions?.length > 0 else emptyView\"\n     class=\"auc-transactions-list\">\n\n  <div class=\"auc-transactions-list-item\" *ngFor=\"let transaction of transactions\">\n    <a [href]=\"transaction.explorerUrl\"\n       [class.fail]=\"transaction.status==='fail'\"\n       target=\"_blank\"\n       rel=\"noopener noreferrer\"\n    >\n      <span class=\"auc-transactions-list-item-text\">\n      {{ transaction.name }} ↗\n    </span>\n    </a>\n\n    <ng-container [ngSwitch]=\"transaction.status\">\n      <auc-icon *ngSwitchCase=\"'fail'\"\n                icon=\"wcl-icon-fail\"\n                class=\"auc-transaction-status auc-transaction-status-fail\"\n      >\n      </auc-icon>\n\n      <auc-icon *ngSwitchCase=\"'success'\"\n                icon=\"wcl-icon-check\"\n                class=\"auc-transaction-status auc-transaction-status-success\"\n      >\n      </auc-icon>\n\n      <auc-spinner *ngSwitchCase=\"'pending'\"\n                   [diameter]=\"14\"\n                   [width]=\"2\"\n                   class=\"auc-transaction-status auc-transaction-status-pending\"\n      >\n      </auc-spinner>\n    </ng-container>\n  </div>\n</div>\n\n<ng-template #emptyView>\n  <div class=\"auc-transaction-empty\">{{emptyText}}</div>\n</ng-template>\n"
        },
        {
            "name": "AucTransferModalComponent",
            "id": "component-AucTransferModalComponent-ce92437a490293b6507ed0c1d4d250aacdf345e1da61ec9818d30b055ea128c67630fd5f8a4e9f6582a5ecdcc4dfc16cd46812ec93132bd3129a7dc6b919da36",
            "file": "projects/applicature/components/src/lib/modals/transfer-modal/transfer-modal.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-transfer-modal",
            "styleUrls": [
                "./transfer-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./transfer-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_currentStep",
                    "defaultValue": "AUC_TRANSFER_STEPS.APPROVE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucTransactionStep",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_sub",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "amountControl",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentAllowance",
                    "defaultValue": "'0'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucTransferModalData",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onApproveClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onCloseClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onConfirmClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { aucNormalizeBalance, aucToBN } from '../../helpers';\nimport { AucConnectionState, AucWalletConnectService } from '../../services';\nimport { AUC_TRANSFER_STEPS } from './enums';\nimport { AucTransferModalData } from './interfaces';\nimport { AucTransactionStep } from './types';\nimport { AucDialogConfig, AucDialogRef } from '../../dialog';\nimport { AucTransactionService } from '../../transactions';\n\n\n@Component({\n  selector: 'auc-transfer-modal',\n  templateUrl: './transfer-modal.component.html',\n  styleUrls: [ './transfer-modal.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AucTransferModalComponent implements OnInit, OnDestroy {\n  public amountControl: FormControl = new FormControl();\n  public currentAllowance: string = '0';\n  public data: AucTransferModalData;\n\n  public get currentStep(): AucTransactionStep {\n    return this._currentStep;\n  }\n\n  private _currentStep: AucTransactionStep = AUC_TRANSFER_STEPS.APPROVE;\n\n  private _sub: Subscription = new Subscription();\n\n  constructor(\n    private _config: AucDialogConfig<AucTransferModalData>,\n    private _dialogRef: AucDialogRef,\n    private _cdr: ChangeDetectorRef,\n    private _walletConnectService: AucWalletConnectService,\n    private _transactionService: AucTransactionService,\n  ) {\n    this.data = this._config.data;\n  }\n\n  public ngOnInit(): void {\n    const connectionState: AucConnectionState = this._walletConnectService.connectionState;\n    this.currentAllowance = aucNormalizeBalance(connectionState?.state?.network, this.data.allowance);\n\n    this.amountControl.valueChanges\n      .subscribe((value) => {\n        if (aucToBN(value).gt(0) && aucToBN(value).lte(this.currentAllowance)) {\n          this._currentStep = AUC_TRANSFER_STEPS.CONFIRM;\n        } else {\n          this._currentStep = AUC_TRANSFER_STEPS.APPROVE;\n        }\n\n        this._cdr.markForCheck();\n      });\n  }\n\n  public ngOnDestroy(): void {\n    this._sub.unsubscribe();\n  }\n\n  public onCloseClick(): void {\n    this._dialogRef.close();\n  }\n\n  public onApproveClick(): void {\n    this.data.approve().then(() => {\n      this.currentAllowance = this.amountControl.value;\n\n      this._currentStep = AUC_TRANSFER_STEPS.CONFIRM;\n\n      this._cdr.markForCheck();\n    });\n  }\n\n  public onConfirmClick(): void {\n    this.data.confirm().then(() => {\n      this._dialogRef.close();\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../../styles/src/lib/scss/variables\";\n@import \"../../../../../styles/src/lib/scss/functions\";\n\n:host {\n  display: block;\n  min-width: 372px;\n  max-width: 372px;\n}\n\n.auc-transfer {\n  display: flex;\n  flex-direction: column;\n  font-family: $as-font-family;\n}\n\n.auc-transfer-input {\n  margin-bottom: 16px;\n}\n\n.auc-transfer-progress {\n  background: getColor(grey, background);\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 24px;\n  color: $black;\n}\n\n.auc-transfer-steps {\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n}\n\n.auc-transfer-info {\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 20px;\n  color: $black;\n  margin: 0;\n\n  &:last-of-type {\n    margin-bottom: 16px;\n  }\n}\n\n",
                    "styleUrl": "./transfer-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_config",
                        "type": "AucDialogConfig<AucTransferModalData>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_dialogRef",
                        "type": "AucDialogRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_transactionService",
                        "type": "AucTransactionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "_config",
                        "type": "AucDialogConfig<AucTransferModalData>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dialogRef",
                        "type": "AucDialogRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_transactionService",
                        "type": "AucTransactionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "currentStep": {
                    "name": "currentStep",
                    "getSignature": {
                        "name": "currentStep",
                        "type": "",
                        "returnType": "AucTransactionStep",
                        "line": 25
                    }
                }
            },
            "templateData": "<div class=\"auc-transfer\">\n  <div class=\"auc-dialog-header\">\n    <h1>{{ data.header }}</h1>\n\n    <button type=\"button\" class=\"auc-close-btn\">\n      <auc-icon icon=\"wcl-icon-close\"\n                (click)=\"onCloseClick()\"\n      >\n      </auc-icon>\n    </button>\n  </div>\n\n  <auc-input [max]=\"data.max\"\n                     [suffix]=\"data.symbol\"\n                     [hint]=\"'Current allowance: ' + currentAllowance + ' ' + data.symbol\"\n                     [adaptive]=\"true\"\n                     [decimal]=\"true\"\n                     [formControl]=\"amountControl\"\n                     label=\"Amount\"\n                     placeholder=\"Enter amount\"\n                     class=\"auc-transfer-input\">\n  </auc-input>\n\n  <div class=\"auc-transfer-progress\">\n    <h3 class=\"auc-transfer-steps\">Step {{ currentStep }} of 2</h3>\n\n    <ng-container *ngIf=\"currentStep === 1 else secondView\">\n      <p class=\"auc-transfer-info\">Your allowance must be first increased.</p>\n      <p class=\"auc-transfer-info\">Please click Approve to increase your allowance.</p>\n    </ng-container>\n\n    <ng-template #secondView>\n      <p class=\"auc-transfer-info\">Now you can transfer funds.</p>\n      <p class=\"auc-transfer-info\">Please click Transfer.</p>\n    </ng-template>\n\n    <auc-progress-bar [progress]=\"50 * currentStep\"></auc-progress-bar>\n  </div>\n\n  <ng-container *ngIf=\"currentStep === 1 else transferButton\">\n    <auc-button [label]=\"data.approveButton\"\n                        [adaptive]=\"true\"\n                        [height]=\"48\"\n                        (onClick)=\"onApproveClick()\"></auc-button>\n  </ng-container>\n\n  <ng-template #transferButton>\n    <auc-button [label]=\"data.confirmButton\"\n                        [adaptive]=\"true\"\n                        [height]=\"48\"\n                        (onClick)=\"onConfirmClick()\"></auc-button>\n  </ng-template>\n</div>\n"
        },
        {
            "name": "AucWrongNetworkModalComponent",
            "id": "component-AucWrongNetworkModalComponent-1dfa9a6eb8944bff4c1fe7b84b2de81426a45f741fdbbc3fdcd19ec6b188134f3aac2cc8a566650dfeef3da058ab55fab999cdfd51345241b2f4ad19f03a9015",
            "file": "projects/applicature/components/src/lib/modals/wrong-network-modal/wrong-network-modal.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "auc-wrong-network-modal",
            "styleUrls": [
                "./wrong-network-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./wrong-network-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucWrongNetworkModalData",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "disconnectBtnColor",
                    "defaultValue": "AS_COLOR_GROUP.RED",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AsColorGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onCloseClick",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDisconnectClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onSwitchNetworkClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { AS_COLOR_GROUP, AsColorGroup } from '@applicature/styles';\n\nimport { AucWalletConnectService } from '../../services';\nimport { AucWrongNetworkModalData } from './interfaces';\nimport { AucDialogConfig, AucDialogRef } from '../../dialog';\n\n\n@Component({\n  selector: 'auc-wrong-network-modal',\n  templateUrl: './wrong-network-modal.component.html',\n  styleUrls: [ './wrong-network-modal.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AucWrongNetworkModalComponent {\n  public data: AucWrongNetworkModalData;\n  public disconnectBtnColor: AsColorGroup = AS_COLOR_GROUP.RED;\n\n  constructor(\n    private _config: AucDialogConfig<AucWrongNetworkModalData>,\n    private _dialogRef: AucDialogRef,\n    private _walletConnectService: AucWalletConnectService\n  ) {\n    this.data = this._config.data;\n  }\n\n  public onCloseClick(value: boolean = false): void {\n    this._dialogRef.close(value);\n  }\n\n  public onSwitchNetworkClick(): void {\n    this.onCloseClick(true);\n  }\n\n  public onDisconnectClick(): void {\n    this._walletConnectService.disconnectWallet()\n      .subscribe();\n\n    this.onCloseClick(false);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../../styles/src/lib/scss/variables\";\n@import \"../../../../../styles/src/lib/scss/functions\";\n\n:host {\n  display: block;\n  width: 100%;\n}\n\n.auc-wrong-network {\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 40px;\n  font-family: $as-font-family;\n}\n\n.auc-wrong-network-header {\n  justify-content: flex-end;\n}\n\n.auc-wrong-network-fail {\n  margin-top: 23px;\n  font-size: 77px;\n  line-height: 61px;\n  color: getColor(red, base);\n}\n\n.auc-wrong-network-title {\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 1;\n  color: $black;\n  margin: 26px 0 0;\n}\n\n.auc-wrong-network-message {\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: center;\n  color: getColor(grey, base);\n  padding: 0 24px;\n  margin-top: 8px\n}\n\n.auc-wrong-network-fail,\n.auc-wrong-network-title{\n  align-self: center;\n}\n\n.auc-wrong-network-action {\n  margin-top: 16px;\n  align-self: center;\n\n  &.auc-switch-network-btn {\n    min-width: 170px;\n  }\n\n  &.auc-disconnect-btn {\n    min-width: 119px;\n  }\n}\n",
                    "styleUrl": "./wrong-network-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_config",
                        "type": "AucDialogConfig<AucWrongNetworkModalData>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_dialogRef",
                        "type": "AucDialogRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "_config",
                        "type": "AucDialogConfig<AucWrongNetworkModalData>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dialogRef",
                        "type": "AucDialogRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"auc-wrong-network\">\n  <div class=\"auc-dialog-header auc-wrong-network-header\">\n    <button type=\"button\" class=\"auc-close-btn\">\n      <auc-icon icon=\"wcl-icon-close\"\n                (click)=\"onCloseClick()\"\n      >\n      </auc-icon>\n    </button>\n  </div>\n\n\n  <auc-icon icon=\"wcl-icon-fail\"\n            class=\"auc-wrong-network-fail\"\n            (click)=\"onCloseClick()\"\n  >\n  </auc-icon>\n\n  <h1 class=\"auc-wrong-network-title\">{{ data.header }}</h1>\n\n  <div class=\"auc-wrong-network-message\">{{ data.message }}</div>\n\n  <ng-container [ngSwitch]=\"data.appearance\">\n    <ng-container *ngSwitchCase=\"'switch'\">\n      <auc-button [label]=\"data.switchLabel\"\n                          (onClick)=\"onSwitchNetworkClick()\"\n                          [adaptive]=\"true\"\n                          class=\"auc-wrong-network-action auc-switch-network-btn\"\n      >\n      </auc-button>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'disconnect'\">\n      <auc-button label=\"Disconnect\"\n                          [color]=\"disconnectBtnColor\"\n                          [adaptive]=\"true\"\n                          (onClick)=\"onDisconnectClick()\"\n                          class=\"auc-wrong-network-action auc-disconnect-btn\"\n      >\n      </auc-button>\n    </ng-container>\n  </ng-container>\n</div>\n"
        },
        {
            "name": "ButtonDemoComponent",
            "id": "component-ButtonDemoComponent-76142b75462ac9611af2c06e3a17c3b96063b796a6cf32f7e8e243074aecb513423464511a56850022237f0c29d6e612c0bd6d928640c3395b7df2335a5da712",
            "file": "projects/components-demo/src/app/modules/button-demo/button-demo.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "demo-button-demo",
            "styleUrls": [
                "./button-demo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-demo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "buttonDemo",
                    "defaultValue": "buttonDemo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "testCode",
                    "defaultValue": "testCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "evt",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "evt",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\nimport { buttonDemo, testCode } from '../examples/btn-example';\n\n\n@Component({\n  selector: 'demo-button-demo',\n  templateUrl: './button-demo.component.html',\n  styleUrls: [ './button-demo.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ButtonDemoComponent {\n  public buttonDemo: any = buttonDemo;\n  public testCode: any = testCode;\n\n  public onClick(evt): void {\n    console.log('Btn example clicked: ', evt);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button-demo.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<demo-example-view\n  exampleTitle=\"Just a Button Demo\"\n  [code]=\"buttonDemo\"\n  [testCode]=\"testCode\"\n  [components]=\"['AucButtonComponent']\"\n>\n  <auc-button label=\"Button\" (onClick)=\"onClick($event)\"></auc-button>\n</demo-example-view>`\n"
        },
        {
            "name": "CustomDropdownMenuComponent",
            "id": "component-CustomDropdownMenuComponent-ab385c58ee5425f69bd0a51b8293282fd5e40b326f7249376efa89d5eff9b51b2fe01fad6aba18f64d5d73dde7775a8106be4a65743095fc15ff3300a19a016c",
            "file": "projects/demo/src/app/examples/example-dropdown-menu/components/custom-dropdown-menu/custom-dropdown-menu.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-custom-dropdown-menu",
            "styleUrls": [
                "./custom-dropdown-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./custom-dropdown-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customDropdownConfig",
                    "defaultValue": "{\n    overlay: {\n      transparent: true,\n      overlayClass: 'app-custom-dropdown-overlay'\n    },\n    position: {\n      vertical: AUC_POSITIONS.ABOVE,\n      horizontal: AUC_POSITIONS.AFTER\n    },\n    class: 'custom-dropdown-menu'\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucDropdownConfig",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isOpenedCustomDropdownMenu",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "showCustomDropdownMenu",
                    "args": [
                        {
                            "name": "isOpen",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isOpen",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport {\n  AucDropdownConfig,\n  AUC_POSITIONS\n} from '@applicature/components';\n\n\n@Component({\n  selector: 'app-custom-dropdown-menu',\n  templateUrl: './custom-dropdown-menu.component.html',\n  styleUrls: [ './custom-dropdown-menu.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomDropdownMenuComponent {\n  public isOpenedCustomDropdownMenu = false;\n\n  public customDropdownConfig: AucDropdownConfig = {\n    overlay: {\n      transparent: true,\n      overlayClass: 'app-custom-dropdown-overlay'\n    },\n    position: {\n      vertical: AUC_POSITIONS.ABOVE,\n      horizontal: AUC_POSITIONS.AFTER\n    },\n    class: 'custom-dropdown-menu'\n  }\n\n  showCustomDropdownMenu(isOpen: boolean): void {\n    this.isOpenedCustomDropdownMenu = isOpen;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import './projects/applicature/styles/src/lib/scss/styles';\n\n.custom-dropdown-container {\n  padding: 0\n}\n\n.custom-dropdown-item {\n  margin: 0;\n  padding: 15px 10px;\n  cursor: pointer;\n  @include transition(background-color, 0.3s);\n\n  &:hover {\n    background-color: #F3F5FB;\n  }\n}\n",
                    "styleUrl": "./custom-dropdown-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<auc-button (onShowHide)=\"showCustomDropdownMenu($event)\"\n                    label=\"Custom Dropdown Menu\"\n                    aucTrigger\n                    #customMenuTrigger=\"aucTrigger\"\n>\n</auc-button>\n\n<auc-dropdown-menu *ngIf=\"isOpenedCustomDropdownMenu\"\n                           [config]=\"customDropdownConfig\"\n                           [trigger]=\"customMenuTrigger\"\n>\n  <div class=\"custom-dropdown-container\">\n    <div class=\"custom-dropdown-item\" (click)=\"showCustomDropdownMenu(false)\">Dropdown item 1</div>\n    <div class=\"custom-dropdown-item\" (click)=\"showCustomDropdownMenu(false)\">Dropdown item 2</div>\n    <div class=\"custom-dropdown-item\" (click)=\"showCustomDropdownMenu(false)\">Dropdown item 3</div>\n    <div class=\"custom-dropdown-item\" (click)=\"showCustomDropdownMenu(false)\">Dropdown item 4</div>\n    <div class=\"custom-dropdown-item\" (click)=\"showCustomDropdownMenu(false)\">Dropdown item 5</div>\n    <div class=\"custom-dropdown-item\" (click)=\"showCustomDropdownMenu(false)\">Dropdown item 6</div>\n    <div class=\"custom-dropdown-item\" (click)=\"showCustomDropdownMenu(false)\">Dropdown item 7</div>\n    <div class=\"custom-dropdown-item\" (click)=\"showCustomDropdownMenu(false)\">Dropdown item 8</div>\n    <div class=\"custom-dropdown-item\" (click)=\"showCustomDropdownMenu(false)\">Dropdown item 9</div>\n    <div class=\"custom-dropdown-item\" (click)=\"showCustomDropdownMenu(false)\">Dropdown item 10</div>\n    <div class=\"custom-dropdown-item\" (click)=\"showCustomDropdownMenu(false)\">Dropdown item 11</div>\n    <div class=\"custom-dropdown-item\" (click)=\"showCustomDropdownMenu(false)\">Dropdown item 12</div>\n    <div class=\"custom-dropdown-item\" (click)=\"showCustomDropdownMenu(false)\">Dropdown item 13</div>\n    <div class=\"custom-dropdown-item\" (click)=\"showCustomDropdownMenu(false)\">Dropdown item 14</div>\n    <div class=\"custom-dropdown-item\" (click)=\"showCustomDropdownMenu(false)\">Dropdown item 15</div>\n    <div class=\"custom-dropdown-item\" (click)=\"showCustomDropdownMenu(false)\">Dropdown item 16</div>\n    <div class=\"custom-dropdown-item\" (click)=\"showCustomDropdownMenu(false)\">Dropdown item 17</div>\n    <div class=\"custom-dropdown-item\" (click)=\"showCustomDropdownMenu(false)\">Dropdown item 18</div>\n    <div class=\"custom-dropdown-item\" (click)=\"showCustomDropdownMenu(false)\">Dropdown item 19</div>\n  </div>\n</auc-dropdown-menu>\n"
        },
        {
            "name": "DialogTestComponent",
            "id": "component-DialogTestComponent-8d1aabe818284755de2d6d02876b12b97904853084247686e48e70614e56d4caddefd7205ff02ad0171b3f1c6032f004052520bd0aeb60b590755c835d1c5d04",
            "file": "projects/demo/src/app/examples/example-dialogs/components/dialog-test/dialog-test.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dialog-test",
            "styleUrls": [
                "./dialog-test.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dialog-test.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "COLORS",
                    "defaultValue": "AS_COLOR_GROUP",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucDialogConfig",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onClose",
                    "args": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { AucDialogConfig, AucDialogRef } from '@applicature/components';\nimport { AS_COLOR_GROUP } from '@applicature/styles';\n\n\n@Component({\n  selector: 'app-dialog-test',\n  templateUrl: './dialog-test.component.html',\n  styleUrls: ['./dialog-test.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DialogTestComponent {\n  public COLORS = AS_COLOR_GROUP;\n\n  constructor(public config: AucDialogConfig, private _dialogRef: AucDialogRef<string>) {\n  }\n\n  onClose(val: any): void {\n    this._dialogRef.close(val);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  font-size: 64px;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n}\n\n.text-wrapper {\n  display: flex;\n  flex: 1;\n  align-content: center;\n  justify-content: center;\n  text-align: center;\n}\n\n.actions {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n\n  & > * {\n    width: calc(50% - 7px);\n\n    &:not(:last-child) {\n      margin-right: 14px;\n    }\n  }\n}\n",
                    "styleUrl": "./dialog-test.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "config",
                        "type": "AucDialogConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_dialogRef",
                        "type": "AucDialogRef<string>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "config",
                        "type": "AucDialogConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dialogRef",
                        "type": "AucDialogRef<string>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"text-wrapper\"><p>{{config.data.message}}</p></div>\n\n<div class=\"actions\">\n  <auc-button (onClick)=\"onClose('cancel')\"\n                      label=\"Cancel\"\n                      [color]=\"COLORS.RED\"\n                      [adaptive]=\"true\"\n  >\n  </auc-button>\n\n  <auc-button (onClick)=\"onClose('ok')\"\n                      label=\"Ok\"\n                      [adaptive]=\"true\"\n  >\n  </auc-button>\n</div>\n"
        },
        {
            "name": "DocViewComponent",
            "id": "component-DocViewComponent-1031ace5110f07a33245fad6f19ec2730cbf7b7e853322943647baefc3a584cbe7f117f1b3ff6f2ce345937cfcd93d4842b8b9726b492e7337ba946dcba37221",
            "file": "projects/components-demo/src/app/modules/example-view/components/doc-view/doc-view.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "demo-doc-view",
            "styleUrls": [
                "./doc-view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./doc-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "components",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nThe component the documentation should be visualized for.",
                    "description": "<p>The component the documentation should be visualized for.</p>\n",
                    "line": 70,
                    "type": "Array<string>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "componentsDocs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<ComponentDoc>",
                    "optional": false,
                    "description": "<p>Array containing all the docs of the components input.</p>\n",
                    "line": 73,
                    "rawdescription": "\nArray containing all the docs of the components input.",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "documentationParserService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DocumentationParserService",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "wasLoaded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Flag to indicate if some data could be loaded - otherwise the message to run &quot;yarn doc&quot; first will occur</p>\n",
                    "line": 76,
                    "rawdescription": "\nFlag to indicate if some data could be loaded - otherwise the message to run \"yarn doc\" first will occur",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "arraySetup",
                    "args": [
                        {
                            "name": "docFather",
                            "type": "DocFather",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "title",
                            "type": "DocGroupTitle",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Array<DocFather>",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets up the array identified by title.\n\n",
                    "description": "<p>Sets up the array identified by title.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "docFather",
                            "type": "DocFather",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": {
                                "pos": 5390,
                                "end": 5395,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "title"
                            },
                            "type": "DocGroupTitle",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5384,
                                "end": 5389,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The title of the component doc snippets to save into the array.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "findKeys",
                    "args": [
                        {
                            "name": "inspectedObject",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "keyName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIterates through the object, searches for the keyName\nand returns an array of results matching the keyName.\n\n",
                    "description": "<p>Iterates through the object, searches for the keyName\nand returns an array of results matching the keyName.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4726,
                                "end": 4741,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "inspectedObject"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4720,
                                "end": 4725,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The object to get inspected</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 4784,
                                "end": 4791,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "keyName"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4778,
                                "end": 4783,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The name of the key to be found</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "getAccessorsParameters",
                    "args": [
                        {
                            "name": "docFather",
                            "type": "DocFather",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns the first accessor parameter.\n\n",
                    "description": "<p>Returns the first accessor parameter.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4203,
                                "end": 4212,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "docFather"
                            },
                            "type": "DocFather",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4197,
                                "end": 4202,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The DocFather to be searched for the accessor parameters</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInits the componentsDocs array by calling the documentationParserService and\nfiltering for those components given by the components input.\n",
                    "description": "<p>Inits the componentsDocs array by calling the documentationParserService and\nfiltering for those components given by the components input.</p>\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input, AfterContentInit, ChangeDetectorRef } from \"@angular/core\";\n\n// import { DocFather, DocFathers, DocGroupTitle } from \"../sharedDataTypes\";\nimport { take } from \"rxjs/operators\";\nimport { DocumentationParserService } from '../../services';\n\ntype DocFather = any;\ntype DocFathers = any;\ntype DocGroupTitle = any;\n\ninterface ComponentDoc {\n  component: string;\n  docFather: DocFather;\n  constructors?: DocFathers;\n  properties?: DocFathers;\n  accessors?: DocFathers;\n  methods?: DocFathers;\n  functions?: DocFathers;\n}\n\n/**\n * Sorts DocFathers by decorator -> Input > Output > HostBinding > other > alphabetical.\n *\n * @param docFather1 - The first element to compare.\n * @param docFather2 - The second element to be compared with.\n * @param decorator  - The Decorator by which to sort in this iteration.\n */\nfunction sortByDecorator(\n  docFather1: DocFather,\n  docFather2: DocFather,\n  decorator: \"Input\" | \"Output\" | \"HostBinding\" = \"Input\"\n): number {\n  if (docFather1.decorators) {\n    // Element1 has decorators.\n    if (!docFather2.decorators) {\n      return -1;\n    }\n\n    const decoratorsElement1 = docFather1.decorators.map(dec => dec.name);\n    const decoratorsElement2 = docFather2.decorators.map(dec => dec.name);\n\n    if (decoratorsElement1.includes(decorator) && decoratorsElement2.includes(decorator)) {\n      return decoratorsElement1.indexOf(decorator) - decoratorsElement2.indexOf(decorator);\n    }\n\n    if (decoratorsElement1.includes(decorator)) {\n      return -1;\n    } else if (decoratorsElement2.includes(decorator)) {\n      return 1;\n    } else {\n      return sortByDecorator(docFather1, docFather2, decorator === \"Input\" ? \"Output\" : \"HostBinding\");\n    }\n\n  } else if (docFather2.decorators) {\n    return -sortByDecorator(docFather2, docFather1);\n  } else {\n    return docFather1.name.localeCompare(docFather2.name);\n  }\n}\n\n@Component({\n  selector: 'demo-doc-view',\n  templateUrl: './doc-view.component.html',\n  styleUrls: ['./doc-view.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DocViewComponent implements AfterContentInit {\n  /** The component the documentation should be visualized for. */\n  @Input()\n  public components!: Array<string>;\n\n  /** Array containing all the docs of the components input. */\n  public componentsDocs: Array<ComponentDoc> = [];\n\n  /** Flag to indicate if some data could be loaded - otherwise the message to run \"yarn doc\" first will occur */\n  public wasLoaded = false;\n\n  constructor(\n    public documentationParserService: DocumentationParserService,\n    private readonly cd: ChangeDetectorRef\n  ) { }\n\n  /**\n   * Inits the componentsDocs array by calling the documentationParserService and\n   * filtering for those components given by the components input.\n   */\n  public ngAfterContentInit(): void {\n    if (!this.components) {\n      return;\n    }\n    this.documentationParserService.onDataLoaded$\n      .pipe(take(1))\n      .subscribe(wasLoaded => {\n        this.wasLoaded = !!wasLoaded;\n        if (wasLoaded) {\n          this.componentsDocs = [];\n          this.components.forEach(component => {\n            const docFather = this.documentationParserService.find(component);\n            if (!docFather) {\n              return;\n            }\n            const componentDoc: ComponentDoc = {component, docFather};\n            componentDoc.constructors = this.arraySetup(componentDoc.docFather, \"Constructors\");\n            componentDoc.accessors = this.arraySetup(componentDoc.docFather, \"Accessors\");\n            componentDoc.methods = this.arraySetup(componentDoc.docFather, \"Methods\");\n            componentDoc.functions = this.arraySetup(componentDoc.docFather, \"Functions\");\n            componentDoc.properties = this.arraySetup(componentDoc.docFather, \"Properties\")\n              .filter(child =>\n                (child.flags.isProtected || child.flags.isPublic) && !child.flags.isConstructorProperty\n              )\n              .sort(sortByDecorator);\n            this.componentsDocs.push(componentDoc);\n          });\n          this.cd.markForCheck();\n        }\n      });\n  }\n\n  /**\n   * Returns the first accessor parameter.\n   *\n   * @param docFather - The DocFather to be searched for the accessor parameters\n   */\n  public getAccessorsParameters(docFather: DocFather): string {\n    for (const keyName of [ \"bindingPropertyName\", \"hostPropertyName\", \"type.name\", \"type.types\" ]) {\n      const keys = this.findKeys(docFather, keyName);\n      if (keys.length > 0) {\n        return keys[0];\n      }\n    }\n    return \"\";\n  }\n\n  /**\n   * Iterates through the object, searches for the keyName\n   * and returns an array of results matching the keyName.\n   *\n   * @param inspectedObject - The object to get inspected\n   * @param keyName         - The name of the key to be found\n   */\n  private findKeys(inspectedObject: any, keyName: string): string[] {\n    const results = [];\n    if (typeof inspectedObject === \"object\") {\n      if (inspectedObject.hasOwnProperty(keyName)) {\n        return [inspectedObject[keyName].toString()];\n      } else {\n        for (const key in inspectedObject) {\n          if (inspectedObject[key]) {\n            results.push(...this.findKeys(inspectedObject[key], keyName));\n          }\n        }\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Sets up the array identified by title.\n   *\n   * @param title - The title of the component doc snippets to save into the array.\n   */\n  private arraySetup(docFather: DocFather, title: DocGroupTitle): Array<DocFather> {\n    if (!docFather) {\n      return [];\n    }\n    const group = docFather.groups.find(group => group.title === title);\n    if (group) {\n      return docFather.children.filter(child => group.children.includes(child.id));\n    } else {\n      return [];\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".property.table {\n  border: 1px solid gray;\n  border-radius: 8px;\n  padding: 15px;\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n}\n",
                    "styleUrl": "./doc-view.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "documentationParserService",
                        "type": "DocumentationParserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 76,
                "jsdoctags": [
                    {
                        "name": "documentationParserService",
                        "type": "DocumentationParserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterContentInit"
            ],
            "templateData": "<div *ngFor=\"let componentDoc of componentsDocs\">\n  <h2 class=\"componentDivider\">\n    {{componentDoc.component}}\n  </h2>\n  <div *ngIf=\"componentDoc.properties?.length > 0\">\n    <h2>Properties</h2>\n    <div class=\"section\">\n      <div *ngFor=\"let property of componentDoc.properties\" class=\"property table\">\n        <div class=\"code\">\n          <code *ngFor=\"let decorator of property.decorators\">\n            @{{decorator.name}}({{decorator?.arguments?.hostPropertyName || decorator?.arguments?.bindingPropertyName}})\n          </code>\n          <code>{{property.flags?.isPrivate ? \"private \" : property.flags?.isProtected ? \"protected \": \"public\"}}\n            {{property.name}}: {{property.type.name}}\n          </code>\n        </div>\n        <div class=\"description\" *ngIf=\"property.comment?.shortText\">\n          {{property.comment?.shortText}}\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <div *ngIf=\"componentDoc.accessors?.length > 0\">\n    <h2>Accessors</h2>\n    <div class=\"section\">\n      <div *ngFor=\"let accessor of componentDoc.accessors\" class=\"property\">\n        <code *ngFor=\"let decorator of accessor.decorators\">\n          @{{decorator.name}}({{getAccessorsParameters(accessor)}})\n        </code>\n        <code>{{accessor.name}}: <em>TODO SHOW TYPE</em></code>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"componentDoc.methods?.length > 0\">\n    <h2>Methods</h2>\n    <div *ngFor=\"let method of componentDoc.methods\" class=\"section\">\n      <div *ngFor=\"let signature of method.signatures\">\n        <div class=\"sectionHeadline\">{{method.name}}</div>\n        <div *ngIf=\"signature.comment?.shortText\" class=\"comment\">\n          {{signature.comment.shortText}}\n        </div>\n        <p *ngIf=\"signature.parameters\" class=\"sectionDivider\">\n          Parameters\n        </p>\n\n        <div *ngFor=\"let parameter of signature.parameters\" class=\"property\">\n          <p class=\"label\">{{parameter.name}}</p>\n          <code>{{parameter.type.name}}</code>\n        </div>\n        <div *ngIf=\"signature.type\">\n          <p class=\"sectionDivider\">Returns</p>\n          <div class=\"property\">\n            <code>{{signature.type.name}}</code>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n<code *ngIf=\"!wasLoaded\" style=\"white-space: normal;\">\n  Please run \"yarn doc\" first and restart the Dev-Server, to show the api-documentation.\n</code>\n"
        },
        {
            "name": "ExampleAccountBalanceComponent",
            "id": "component-ExampleAccountBalanceComponent-c8e6093b7c78d229fbff06187d5421138957a73cf0502220b3fd215419342b41ff1f8d2a1731b695e8783213efdad5d76035a78f2b5ca4ba47e4d29d5a1d56cc",
            "file": "projects/demo/src/app/examples/example-account-balance/example-account-balance.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example-account-balance",
            "styleUrls": [
                "./example-account-balance.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./example-account-balance.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "BALANCE_APPEARANCE",
                    "defaultValue": "AUC_BALANCE_APPEARANCE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "COLORS",
                    "defaultValue": "AS_COLOR_GROUP",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "IDENTICON_POSITION",
                    "defaultValue": "AUC_IDENTICON_POSITION",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onAddressClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\nimport { AUC_BALANCE_APPEARANCE, AUC_IDENTICON_POSITION } from '@applicature/components';\nimport { AS_COLOR_GROUP } from '@applicature/styles';\n\n\n@Component({\n  selector: 'app-example-account-balance',\n  templateUrl: './example-account-balance.component.html',\n  styleUrls: [ './example-account-balance.component.scss' ]\n})\nexport class ExampleAccountBalanceComponent {\n  public BALANCE_APPEARANCE = AUC_BALANCE_APPEARANCE;\n  public COLORS = AS_COLOR_GROUP;\n  public IDENTICON_POSITION = AUC_IDENTICON_POSITION;\n\n  onAddressClick() {\n    console.log('Address button was clicked');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./example-account-balance.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h2>With Icon:</h2>\n\n<auc-account-balance\n  [isCurrency]=\"true\"\n></auc-account-balance>\n\n<br>\n<br>\n\n<h2>Icon + color:</h2>\n\n<auc-account-balance\n  [isCurrency]=\"true\"\n  [color]=\"COLORS.BLUE\"\n></auc-account-balance>\n\n<br>\n<br>\n\n<h2>Icon + appearance transparent</h2>\n\n<auc-account-balance\n  [isCurrency]=\"true\"\n  [appearance]=\"BALANCE_APPEARANCE.TRANSPARENT\"\n></auc-account-balance>\n\n<br>\n<br>\n\n<h2>Icon + appearance translucent</h2>\n\n<auc-account-balance\n  [isCurrency]=\"true\"\n  [appearance]=\"BALANCE_APPEARANCE.TRANSLUCENT\"\n></auc-account-balance>\n\n<br>\n<br>\n\n<h2>Icon + appearance translucent + color</h2>\n\n<auc-account-balance\n  [isCurrency]=\"true\"\n  [appearance]=\"BALANCE_APPEARANCE.TRANSLUCENT\"\n  [color]=\"COLORS.GREY\"\n></auc-account-balance>\n\n<br>\n<br>\n\n\n\n\n\n\n\n\n\n\n\n<h2>Without Icon:</h2>\n\n<auc-account-balance></auc-account-balance>\n\n<br>\n<br>\n\n<h2>Without Icon + color:</h2>\n\n<auc-account-balance\n  [color]=\"COLORS.BLUE\"\n></auc-account-balance>\n\n<br>\n<br>\n\n<h2>Without Icon + appearance transparent</h2>\n\n<auc-account-balance\n  [appearance]=\"BALANCE_APPEARANCE.TRANSPARENT\"\n></auc-account-balance>\n\n<br>\n<br>\n\n<h2>Without Icon + appearance translucent</h2>\n\n<auc-account-balance\n  [appearance]=\"BALANCE_APPEARANCE.TRANSLUCENT\"\n></auc-account-balance>\n\n<br>\n<br>\n\n<h2>Without Icon + appearance translucent + color</h2>\n\n<auc-account-balance\n  [appearance]=\"BALANCE_APPEARANCE.TRANSLUCENT\"\n  [color]=\"COLORS.GREY\"\n></auc-account-balance>\n\n<br>\n<br>\n\n\n\n\n\n\n\n<h2>With Icon + adderss:</h2>\n\n<auc-account-balance\n  [isCurrency]=\"true\"\n  [showAddress]=\"true\"\n  (onAddressClick)=\"onAddressClick()\"\n></auc-account-balance>\n\n<br>\n<br>\n\n<h2>Icon + color + adderss:</h2>\n\n<auc-account-balance\n  [isCurrency]=\"true\"\n  [color]=\"COLORS.BLUE\"\n  [showAddress]=\"true\"\n  (onAddressClick)=\"onAddressClick()\"\n></auc-account-balance>\n\n<br>\n<br>\n\n<h2>Icon + appearance transparent + adderss</h2>\n\n<auc-account-balance\n  [isCurrency]=\"true\"\n  [appearance]=\"BALANCE_APPEARANCE.TRANSPARENT\"\n  [showAddress]=\"true\"\n  (onAddressClick)=\"onAddressClick()\"\n></auc-account-balance>\n\n<br>\n<br>\n\n<h2>Icon + appearance translucent + adderss</h2>\n\n<auc-account-balance\n  [isCurrency]=\"true\"\n  [appearance]=\"BALANCE_APPEARANCE.TRANSLUCENT\"\n  [showAddress]=\"true\"\n  (onAddressClick)=\"onAddressClick()\"\n></auc-account-balance>\n\n<br>\n<br>\n\n<h2>Icon + appearance translucent + color + adderss</h2>\n\n<auc-account-balance\n  [isCurrency]=\"true\"\n  [appearance]=\"BALANCE_APPEARANCE.TRANSLUCENT\"\n  [color]=\"COLORS.GREY\"\n  [showAddress]=\"true\"\n  (onAddressClick)=\"onAddressClick()\"\n></auc-account-balance>\n\n<br>\n<br>\n\n<h2>Icon + appearance translucent + adderss + address idenciton</h2>\n\n<auc-account-balance\n  [isCurrency]=\"true\"\n  [appearance]=\"BALANCE_APPEARANCE.TRANSLUCENT\"\n  [showAddress]=\"true\"\n  [addressConfig]=\"{\n    showIdenticon: true\n  }\"\n  (onAddressClick)=\"onAddressClick()\"\n></auc-account-balance>\n\n<h2>Icon + appearance translucent + adderss + address idenciton + identicon position left + address color</h2>\n\n<auc-account-balance\n  [isCurrency]=\"true\"\n  [appearance]=\"BALANCE_APPEARANCE.TRANSLUCENT\"\n  [showAddress]=\"true\"\n  [addressConfig]=\"{\n    showIdenticon: true,\n    identiconPosition: IDENTICON_POSITION.LEFT,\n    color: COLORS.BLUE\n  }\"\n  (onAddressClick)=\"onAddressClick()\"\n></auc-account-balance>\n\n<h2>Without Icon + appearance translucent + adderss + address idenciton + identicon position left + address color + address disabled</h2>\n\n<auc-account-balance\n  [appearance]=\"BALANCE_APPEARANCE.TRANSLUCENT\"\n  [showAddress]=\"true\"\n  [addressConfig]=\"{\n    showIdenticon: true,\n    identiconPosition: IDENTICON_POSITION.LEFT,\n    color: COLORS.BLUE,\n    disabled: true\n  }\"\n  (onAddressClick)=\"onAddressClick()\"\n></auc-account-balance>\n"
        },
        {
            "name": "ExampleDialogsComponent",
            "id": "component-ExampleDialogsComponent-1645a570c2c891a8192fff478e3ab2f8c754f521b7ccefdf8d69ca62b10827b9c67053b96e9fa0f9cc0cd27864edef0b922afdca40c44d079e3dfd3fe6acec83",
            "file": "projects/demo/src/app/examples/example-dialogs/example-dialogs.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example-dialogs",
            "styleUrls": [
                "./example-dialogs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./example-dialogs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onOpenTransferModalClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onOpenWrongNetworkModalClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showCustomModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport {\n  AUC_DIALOG_POSITIONS,\n  AucTransferModalComponent,\n  AucTransferModalData,\n  AUC_WRONG_NETWORK_APPEARANCE,\n  AucWrongNetworkModalComponent,\n  AucWrongNetworkModalData,\n  AucDialogService\n} from '@applicature/components';\n\nimport { DialogTestComponent } from './components/dialog-test/dialog-test.component';\n\n\n@Component({\n  selector: 'app-example-dialogs',\n  templateUrl: './example-dialogs.component.html',\n  styleUrls: [ './example-dialogs.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleDialogsComponent {\n\n  constructor(private _dialogService: AucDialogService) {\n  }\n\n  public showCustomModal(): void {\n    const ref = this._dialogService.open<DialogTestComponent, { message: string }, number>(\n      DialogTestComponent,\n      {\n        data: {message: 'I am a dynamic component!'},\n        width: '400px',\n        height: '500px',\n        minWidth: '320px',\n        minHeight: '320px',\n        maxWidth: '600px',\n        maxHeight: '700px',\n        position: AUC_DIALOG_POSITIONS.TOP_RIGHT,\n        dialogClass: 'dialog-class-test',\n        panel: {\n          panelClass: 'panel-class-test'\n        },\n        overlay: {\n          hasOverlay: true,\n          closeByClick: true,\n          overlayClass: [ 'test-overlay-class1', 'test-overlay-class2' ],\n          transparent: true\n        }\n      });\n\n    ref.afterClosed.subscribe(result => {\n      console.log('Dialog closed', result);\n    });\n\n    ref.afterOpened.subscribe(result => {\n      console.log('Dialog opened', result);\n    });\n  }\n\n  public onOpenTransferModalClick(): void {\n    const data: AucTransferModalData = {\n      header: 'Transfer',\n      symbol: 'USDT',\n      allowance: '1000000000000000000',\n      max: '10000000000000000000',\n      approveButton: 'Approve',\n      approvingButton: 'Approving...',\n      confirmButton: 'Transfer',\n      approve: () => {\n        return Promise.resolve();\n      },\n      confirm: () => {\n        return Promise.resolve();\n      }\n    };\n\n    const ref = this._dialogService.open<AucTransferModalComponent, AucTransferModalData>(AucTransferModalComponent, {\n      data,\n      dialogClass: 'transfer-dialog',\n    });\n\n    ref.afterClosed.subscribe(result => {\n      console.log('Transfer Dialog closed: ', result);\n    });\n  }\n\n  public onOpenWrongNetworkModalClick(): void {\n    const data: AucWrongNetworkModalData = {\n      header: 'WRONG NETWORK',\n      message: 'Looks like you connected to unsupported network. Change network to Mainnet.',\n      chainId: '156',\n      switchLabel: 'Switch label',\n      appearance: AUC_WRONG_NETWORK_APPEARANCE.SWITCH\n    };\n\n    const ref = this._dialogService.open<AucWrongNetworkModalComponent, AucWrongNetworkModalData>(\n      AucWrongNetworkModalComponent,\n      {\n        data,\n        width: '100%',\n        maxWidth: \"420px\",\n        dialogClass: 'wrong-network-dialog',\n      }\n    );\n\n    ref.afterClosed.subscribe(result => {\n      console.log('Transfer Dialog closed: ', result);\n    });\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-card {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n}\n",
                    "styleUrl": "./example-dialogs.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_dialogService",
                        "type": "AucDialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "_dialogService",
                        "type": "AucDialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"example-card\">\n  <auc-button (onClick)=\"showCustomModal()\"\n                      label=\"Open Test Applicature Modal\"\n  >\n  </auc-button>\n</div>\n\n<br>\n<br>\n\n<div class=\"example-card\">\n  <auc-button (onClick)=\"onOpenTransferModalClick()\"\n                      label=\"Open Transfer Modal\"\n  >\n  </auc-button>\n</div>\n\n<br>\n<br>\n\n<div class=\"example-card\">\n  <auc-button (onClick)=\"onOpenWrongNetworkModalClick()\"\n                      label=\"Open Wrong Network Modal\"\n  >\n  </auc-button>\n</div>\n"
        },
        {
            "name": "ExampleTableComponent",
            "id": "component-ExampleTableComponent-e0032d8b605e110c333ca5330191592ddf8191008462bb8c2a3786c6aad605d0d69ee5100c1f0df3891dd3f035f12e1289549b791fc3658bb20b60b1135e2a77",
            "file": "projects/demo/src/app/examples/example-table/example-table.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example-table",
            "styleUrls": [
                "./example-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./example-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isLoadMore",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 138,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tableData",
                    "defaultValue": "[...TableData]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucTableRow[]",
                    "optional": false,
                    "description": "",
                    "line": 136,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tableHeaders",
                    "defaultValue": "[\n    {\n      position: 1,\n      rowKey: 'action',\n      value: 'Action',\n    },\n    {\n      position: 2,\n      rowKey: 'tokens',\n      value: 'Tokens',\n    },\n    {\n      position: 3,\n      rowKey: 'value',\n      value: 'Value',\n    },\n    {\n      position: 4,\n      rowKey: 'time',\n      value: 'Time',\n      sort: {\n        sortBy: 'time',\n        sortDirection: AUC_SORT_DIRECTION.DESC\n      }\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucTableHeaderItem[]",
                    "optional": false,
                    "description": "",
                    "line": 110,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "loadMoreTable",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "tableSort",
                    "args": [
                        {
                            "name": "sort",
                            "type": "AucSort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "sort",
                            "type": "AucSort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  AucTableHeaderItem,\n  AucTableRow,\n  AucSort,\n  AUC_SORT_DIRECTION\n} from '@applicature/components';\n\nconst TableData: AucTableRow[] = [\n  {\n    action: {\n      value: 'Withdraw',\n      icon: 'assets/svg/icons/minus-red.svg'\n    },\n    tokens: [\n      {\n        value: '1.240123',\n        icon: 'assets/svg/network/eth.svg',\n        withBg: true\n      },\n      {\n        value: '5.2k',\n        icon: 'assets/svg/coin/usdt.svg',\n        withBg: true\n      }\n    ],\n    value: {\n      value: '$10.4k',\n    },\n    time: {\n      value: 'about 6 hours ago ↗',\n      link: 'https://www.google.com/'\n    }\n  },\n  {\n    action: {\n      value: 'Withdraw',\n      icon: 'assets/svg/icons/minus-red.svg'\n    },\n    tokens: [\n      {\n        value: '1.0...01234',\n        icon: 'assets/svg/network/eth.svg',\n        withBg: true\n      }\n    ],\n    value: {\n      value: '$4.2k',\n    },\n    time: {\n      value: 'about 6 hours ago ↗',\n      link: 'https://www.google.com/'\n    }\n  },\n  {\n    action: {\n      value: 'Invest',\n      icon: 'assets/svg/icons/plus-green.svg'\n    },\n    tokens: [\n      {\n        value: '500',\n        icon: 'assets/svg/coin/usdt.svg',\n        withBg: true\n      }\n    ],\n    value: {\n      value: '$500',\n    },\n    time: {\n      value: 'about 6 hours ago ↗',\n      link: 'https://www.google.com/'\n    }\n  },\n  {\n    action: {\n      value: 'Invest',\n      icon: 'assets/svg/icons/plus-green.svg'\n    },\n    tokens: [\n      {\n        value: '1.240123',\n        icon: 'assets/svg/network/eth.svg',\n        withBg: true\n      },\n      {\n        value: '5.2k',\n        icon: 'assets/svg/coin/usdt.svg',\n        withBg: true\n      }\n    ],\n    value: {\n      value: '$10.4k',\n    },\n    time: {\n      value: 'about 6 hours ago ↗',\n      link: 'https://www.google.com/'\n    }\n  },\n];\n\n\n@Component({\n  selector: 'app-example-table',\n  templateUrl: './example-table.component.html',\n  styleUrls: ['./example-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleTableComponent {\n  public tableHeaders: AucTableHeaderItem[] = [\n    {\n      position: 1,\n      rowKey: 'action',\n      value: 'Action',\n    },\n    {\n      position: 2,\n      rowKey: 'tokens',\n      value: 'Tokens',\n    },\n    {\n      position: 3,\n      rowKey: 'value',\n      value: 'Value',\n    },\n    {\n      position: 4,\n      rowKey: 'time',\n      value: 'Time',\n      sort: {\n        sortBy: 'time',\n        sortDirection: AUC_SORT_DIRECTION.DESC\n      }\n    }\n  ];\n  public tableData: AucTableRow[] = [...TableData];\n\n  public isLoadMore: boolean = true;\n\n  loadMoreTable(): void {\n    console.log('LOAD MORE TABLE EVENT');\n\n    this.isLoadMore = false;\n    this.tableData = [\n      ...this.tableData,\n      {\n        ...TableData[1],\n        time: {\n          value: 'about 6 hours ago ↗',\n          link: 'https://www.google.com/'\n        }\n      }\n    ]\n  }\n\n  tableSort(sort: AucSort): void {\n    console.log('TABLE SORT ACTION: ', sort);\n\n    this.tableData = this.tableData.reverse();\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./example-table.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<auc-table [tableHeaders]=\"tableHeaders\"\n           [data]=\"tableData\"\n           [isLoadMore]=\"isLoadMore\"\n           customClass=\"table-custom-class\"\n           (loadMore)=\"loadMoreTable()\"\n           (sort)=\"tableSort($event)\"\n>\n</auc-table>\n"
        },
        {
            "name": "ExampleViewComponent",
            "id": "component-ExampleViewComponent-8bd69e1a6cdc79bbd35199105e11cd7602b19ca88c7ebe95967c5e00838e5fa7780f179f05c0d8426ca2e5472327834643f7505109f863b87c3cea677b4847a5",
            "file": "projects/components-demo/src/app/modules/example-view/example-view.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "demo-example-view",
            "styleUrls": [
                "./example-view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./example-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "code",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe code to show as an example.\n",
                    "description": "<p>The code to show as an example.</p>\n",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "components",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe name of the component to show an example for.\n",
                    "description": "<p>The name of the component to show an example for.</p>\n",
                    "line": 36,
                    "type": "Array<string> | undefined",
                    "decorators": []
                },
                {
                    "name": "exampleTitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe title of the example snippet.\n",
                    "description": "<p>The title of the example snippet.</p>\n",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "lang",
                    "defaultValue": "'HTML'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe language of the code.\nPreset is HTML.\n",
                    "description": "<p>The language of the code.\nPreset is HTML.</p>\n",
                    "line": 43,
                    "type": "\"HTML\" | \"js\"",
                    "decorators": []
                },
                {
                    "name": "tabsToShow",
                    "defaultValue": "[ 'example', 'code' ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nArray the tabs to be shown.\n",
                    "description": "<p>Array the tabs to be shown.</p>\n",
                    "line": 49,
                    "type": "Array<string>",
                    "decorators": []
                },
                {
                    "name": "testCode",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPrettyPrints as soon as the content is initialized and adds the api tab if needed.\n",
                    "description": "<p>PrettyPrints as soon as the content is initialized and adds the api tab if needed.</p>\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "prettyPrint",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPretty prints the example text again.\n",
                    "description": "<p>Pretty prints the example text again.</p>\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterContentInit, AfterViewInit, ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport 'code-prettify/loader/run_prettify';\nimport { DocumentationParserService } from './services';\n// import { sleep } from '../helpers';\n\ndeclare const window: Window & { PR: any };\n\n@Component({\n  selector: 'demo-example-view',\n  templateUrl: './example-view.component.html',\n  styleUrls: [ './example-view.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExampleViewComponent implements AfterViewInit {\n\n  /**\n   * The title of the example snippet.\n   */\n  @Input()\n  public exampleTitle = '';\n\n  /**\n   * The code to show as an example.\n   */\n  @Input()\n  public code = '';\n\n  @Input()\n  public testCode = '';\n\n  /**\n   * The name of the component to show an example for.\n   */\n  @Input()\n  public components: Array<string> | undefined;\n\n  /**\n   * The language of the code.\n   * Preset is HTML.\n   */\n  @Input()\n  public lang: 'HTML' | 'js' = 'HTML';\n\n  /**\n   * Array the tabs to be shown.\n   */\n  @Input()\n  public tabsToShow: Array<string> = [ 'example', 'code' ];\n\n\n  constructor(private documentationParserService: DocumentationParserService) {\n  }\n\n  /**\n   * PrettyPrints as soon as the content is initialized and adds the api tab if needed.\n   */\n  public ngAfterViewInit(): void {\n    if (this.components && this.components.length > 0 && !this.tabsToShow.includes('api')) {\n      this.tabsToShow.push('api');\n    }\n\n    this.prettyPrint();\n  }\n\n  /**\n   * Pretty prints the example text again.\n   */\n  public prettyPrint(): void {\n    window.PR?.prettyPrint();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n  height: auto;\n}\n\npre {\n  margin: 10px 0;\n  border: 1px solid #666;\n  border-radius: 4px;\n  overflow: auto;\n  padding: 8px;\n}\n\n.content-wrapper {\n  padding: 10px 0;\n}\n\n.tabGroup {\n  padding: 10px 0;\n}\n",
                    "styleUrl": "./example-view.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "documentationParserService",
                        "type": "DocumentationParserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 49,
                "jsdoctags": [
                    {
                        "name": "documentationParserService",
                        "type": "DocumentationParserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<h2>{{exampleTitle}}</h2>\n\n<div class=\"content-wrapper\">\n  <ng-content></ng-content>\n</div>\n\n<div class=\"code-wrapper\">\n  <h6>HTML</h6>\n  <pre class=\"prettyprint\" [ngClass]=\"'lang-' + lang\" [innerText]=\"code\"></pre>\n  <h6>TS</h6>\n  <pre class=\"prettyprint\" [ngClass]=\"'lang-' + 'js'\" [innerText]=\"testCode\"></pre>\n</div>\n\n<demo-doc-view *ngIf=\"components\" [components]=\"components\"></demo-doc-view>\n\n<!--<ui-tab-group selectedTabKey=\"example\" class=\"tabGroup\">-->\n<!--  <ui-tab key=\"example\" label=\"Example\">-->\n<!--    <div example class=\"content-wrapper\">-->\n<!--      <ng-content></ng-content>-->\n<!--    </div>-->\n<!--  </ui-tab>-->\n<!--  <ui-tab key=\"code\" label=\"Code\" (onSelect)=\"prettyPrint()\">-->\n<!--    <pre class=\"prettyprint\" code [ngClass]=\"'lang-' + lang\" [innerText]=\"code\"></pre>-->\n<!--  </ui-tab>-->\n<!--  <ui-tab key=\"api\" label=\"API\">-->\n<!--    <app-doc-view *ngIf=\"components\" [components]=\"components\"></app-doc-view>-->\n<!--  </ui-tab>-->\n<!--</ui-tab-group>-->\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-590d393c2a074886682c4881f969b12e915f3ec7a8ce851f6b2b7e1021044bca309dab9d9b39c1fa75e40062004500ad7afc835b44baea75546eb214289299b0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/components-demo/src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ButtonDemoModule } from './modules/button-demo/button-demo.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ButtonDemoModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "ButtonDemoModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-5d1dfc3179e0391d72d7626240d125ac7e9055cabb25e8a66678001fbec46871875120631b34923507ce1b960d9a139065ba3846797ad1886b32515fc012bd3f-1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/demo/src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { Observable } from 'rxjs';\n\nimport { WalletInitOptions, WalletModule } from 'bnc-onboard/dist/src/interfaces';\nimport {\n  AucAlertModule,\n  AucDropdownMenuModule,\n  AucAvatarModule,\n  AucButtonModule,\n  AucInputModule,\n  AucConnectModule,\n  AucWalletConnectService,\n  AucNetworkOption,\n  AUC_CHAIN_ID,\n  AUC_CHAIN_ID_NUM,\n  aucGetChainParams,\n  AucBlockExplorerUrls,\n  AucConnectWalletModule,\n  AucNativeCurrencies,\n  AucBlockExplorerApiUrl\n} from '@applicature/components';\n\nimport { AppComponent } from './app.component';\nimport { ExampleDialogsModule } from './examples/example-dialogs/example-dialogs.module';\nimport { ExampleTableModule } from './examples/example-table/example-table.module';\nimport { ExampleDropdownMenuModule } from './examples/example-dropdown-menu/example-dropdown-menu.module';\nimport { ExampleAccountBalanceModule } from './examples/example-account-balance/example-account-balance.module';\n\nconst wallets: Array<WalletModule | WalletInitOptions> = [\n  {\n    walletName: 'metamask',\n    preferred: true\n  },\n  {\n    walletName: 'walletConnect',\n    infuraKey: '${YOUR_INFURA_KEY}',\n    preferred: true\n  }\n];\n\nconst networks = {\n  eth: 1,\n  kovanTestnet: AUC_CHAIN_ID_NUM.KOVAN_TESTNET,\n  // ...\n};\n\nconst supportedNetworks: AucNetworkOption[] = [\n  {\n    icon: 'assets/svg/network/eth.svg',\n    name: 'Ethereum',\n    chainId: AUC_CHAIN_ID.RINKEBY_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.RINKEBY_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.RINKEBY_TESTNET][0],\n    isActive: false\n  },\n  {\n    icon: 'assets/svg/network/eth.svg',\n    name: 'Kovan',\n    chainId: AUC_CHAIN_ID.KOVAN_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.KOVAN_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.KOVAN_TESTNET][0],\n    isActive: false\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'BSC',\n    chainId: '0x61',\n    symbol: 'BNB',\n    blockExplorerUrl: 'https://testnet.bscscan.com',\n    blockExplorerApiUrl: 'https://api-testnet.bscscan.com/api',\n    isActive: false,\n    chainParams: { // Custom Chain params\n      chainId: '0x61',\n      chainName: 'Binance Smart Chain Testnet',\n      nativeCurrency: {\n        name: 'BNB',\n        symbol: 'bnb',\n        decimals: 18\n      },\n      rpcUrls: [ 'https://data-seed-prebsc-1-s1.binance.org:8545' ],\n      blockExplorerUrls: [ 'https://testnet.bscscan.com' ]\n    }\n  },\n  {\n    icon: 'assets/svg/network/avax.svg',\n    name: 'Avalanche',\n    chainId: AUC_CHAIN_ID.AVALANCH_TESTNET,\n    isActive: false,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.AVALANCH_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.AVALANCH_TESTNET][0],\n    blockExplorerApiUrl: AucBlockExplorerApiUrl[AUC_CHAIN_ID.AVALANCH_TESTNET],\n    chainParams: { // modify existing Chain params\n      ...(aucGetChainParams(AUC_CHAIN_ID.AVALANCH_TESTNET)),\n      chainName: 'Avalanche TestNet'\n    }\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Arbitrum',\n    chainId: AUC_CHAIN_ID.ARBITRUM_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.ARBITRUM_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.ARBITRUM_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Astar',\n    chainId: AUC_CHAIN_ID.ASTAR_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.ASTAR_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.ASTAR_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Fantom',\n    chainId: AUC_CHAIN_ID.FANTOM_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.FANTOM_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.FANTOM_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Goreli',\n    chainId: AUC_CHAIN_ID.GOERLI_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.GOERLI_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.GOERLI_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Optimistic',\n    chainId: AUC_CHAIN_ID.OPTIMISTIC_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.OPTIMISTIC_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.OPTIMISTIC_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Polygon',\n    chainId: AUC_CHAIN_ID.POLYGON_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.POLYGON_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.POLYGON_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Ropsten',\n    chainId: AUC_CHAIN_ID.ROPSTEN_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.ROPSTEN_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.ROPSTEN_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Shiden',\n    chainId: AUC_CHAIN_ID.SHIDEN_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.SHIDEN_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.SHIDEN_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Theta',\n    chainId: AUC_CHAIN_ID.THETA_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.THETA_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.THETA_TESTNET][0],\n    isActive: false,\n  }\n];\n\nexport function initWalletServiceFactory(\n  walletConnectService: AucWalletConnectService\n): () => Observable<void> {\n  return () => walletConnectService.initialize({\n    networkId: networks.eth,\n    walletSelect: { wallets }\n  }, supportedNetworks);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AucAlertModule,\n    AucAvatarModule,\n    AucButtonModule,\n    AucInputModule,\n    AucConnectModule.forRoot(),\n    ExampleDialogsModule,\n    ExampleTableModule,\n    AucDropdownMenuModule,\n    ExampleDropdownMenuModule,\n    ExampleAccountBalanceModule,\n    AucConnectWalletModule\n  ],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initWalletServiceFactory,\n      deps: [ AucWalletConnectService ],\n      multi: true\n    }\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucAlertModule"
                        },
                        {
                            "name": "AucAvatarModule"
                        },
                        {
                            "name": "AucButtonModule"
                        },
                        {
                            "name": "AucConnectModule"
                        },
                        {
                            "name": "AucConnectWalletModule"
                        },
                        {
                            "name": "AucDropdownMenuModule"
                        },
                        {
                            "name": "AucInputModule"
                        },
                        {
                            "name": "ExampleAccountBalanceModule"
                        },
                        {
                            "name": "ExampleDialogsModule"
                        },
                        {
                            "name": "ExampleDropdownMenuModule"
                        },
                        {
                            "name": "ExampleTableModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-78922b3ae99d2c5249b333980bd5afde1b120b2cc6fedfd41b8b2cc90f279797cb4b22e183bf7e1d1dfab8c6100e77e7812c110234d81f866f544f28a3e18b15",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/components-demo/src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucAccountBalanceModule",
            "id": "module-AucAccountBalanceModule-f257600c6af269dc0790c1109159ac6f5c30e67c2c456eb04400f5e6227bb128cf9060cfd1433bcb79745d240bf15c186b2240739ba974dec4f6ab975d1db5b8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/account-balance/account-balance.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AucPipesModule } from '../pipes';\nimport { AucAccountBalanceComponent } from './account-balance.component';\nimport { AucIconModule } from '../icon';\nimport { AucButtonModule } from '../button';\nimport { AucDirectivesModule } from '../directives';\n\n\n@NgModule({\n  declarations: [\n    AucAccountBalanceComponent,\n  ],\n  exports: [\n    AucAccountBalanceComponent,\n  ],\n  imports: [\n    CommonModule,\n    AucPipesModule,\n    AucIconModule,\n    AucButtonModule,\n    AucDirectivesModule,\n  ]\n})\nexport class AucAccountBalanceModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucAccountBalanceComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucButtonModule"
                        },
                        {
                            "name": "AucDirectivesModule"
                        },
                        {
                            "name": "AucIconModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucAccountBalanceComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucAccountButtonModule",
            "id": "module-AucAccountButtonModule-f6a9ea3bbcae54356650e7fbce0af1793d48ded1629cfae77ddc1826cb8d9d375f167a2a2eac9092c5f2604e24161a701a9e11b2f6465174bf380c3f1903c498",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/account-button/account-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AucAvatarModule } from '../avatar';\nimport { AucButtonModule } from '../button';\nimport { AucPipesModule } from '../pipes';\nimport { AucAccountButtonComponent } from './account-button.component';\nimport { AucCopyToClipboardModule } from '../copy-to-clipboard';\nimport { AucDirectivesModule } from '../directives';\nimport { AucDropdownMenuModule } from '../dropdown-menu';\n\n\n@NgModule({\n  declarations: [\n    AucAccountButtonComponent\n  ],\n  exports: [\n    AucAccountButtonComponent\n  ],\n  imports: [\n    CommonModule,\n    AucAvatarModule,\n    AucPipesModule,\n    AucButtonModule,\n    AucCopyToClipboardModule,\n    AucDirectivesModule,\n    AucDropdownMenuModule,\n  ]\n})\nexport class AucAccountButtonModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucAccountButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucAvatarModule"
                        },
                        {
                            "name": "AucButtonModule"
                        },
                        {
                            "name": "AucCopyToClipboardModule"
                        },
                        {
                            "name": "AucDirectivesModule"
                        },
                        {
                            "name": "AucDropdownMenuModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucAccountButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucAlertModule",
            "id": "module-AucAlertModule-2988949c0a5108485c234578618dc2fd509c5a445dfd53808aa2aecad9de224a447572c2667eb45f47e722d7833d49596b6437481cd3fcca5e5f007762114ec4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/alert/alert.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AucAlertComponent } from './alert.component';\nimport { AucDirectivesModule } from '../directives';\n\n\n@NgModule({\n  declarations: [\n    AucAlertComponent,\n  ],\n  exports: [\n    AucAlertComponent,\n  ],\n  imports: [\n    CommonModule,\n    AucDirectivesModule,\n  ]\n})\nexport class AucAlertModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucAlertComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucDirectivesModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucAlertComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucAvatarModule",
            "id": "module-AucAvatarModule-6c0d95418a3993138425c236fab1967789802954fff4d063f3d44665dfad6492dce960fb64f749b32d44a6f859a7d8fbd23fa83f7d0087108f175ec1ccfd0c57",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/avatar/avatar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AucAvatarComponent } from './avatar.component';\nimport { AucIconModule } from '../icon';\nimport { AucDirectivesModule } from '../directives';\n\n\n@NgModule({\n  declarations: [\n    AucAvatarComponent,\n  ],\n  exports: [\n    AucAvatarComponent,\n  ],\n  imports: [\n    CommonModule,\n    AucIconModule,\n    AucDirectivesModule,\n  ]\n})\nexport class AucAvatarModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucAvatarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucDirectivesModule"
                        },
                        {
                            "name": "AucIconModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucAvatarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucButtonModule",
            "id": "module-AucButtonModule-c9e224001afb6ef6e4624fc6ef5c1f7b7a8bf8d4f8382d2b460c5bb323ce38fee95cd7e94eb9133917e6dacb3362b3211ccc0ef528ba78fd49072821ed6fb20d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/button/button.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { AucSpinnerModule } from '../spinner';\nimport { AucIconModule } from '../icon';\nimport { AucButtonComponent } from './button.component';\nimport { AucDirectivesModule } from '../directives';\n\n@NgModule({\n  declarations: [\n    AucButtonComponent\n  ],\n  exports: [\n    AucButtonComponent\n  ],\n  imports: [\n    CommonModule,\n    AucIconModule,\n    AucDirectivesModule,\n    AucSpinnerModule\n  ]\n})\nexport class AucButtonModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucDirectivesModule"
                        },
                        {
                            "name": "AucIconModule"
                        },
                        {
                            "name": "AucSpinnerModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucConnectModule",
            "id": "module-AucConnectModule-afc257fef74c65242263cd2835abf28200fdea32b6b43159a60fda9a79b1bff23680860815ea5fd883789a617d9d898f04b4e1cfa8369fdb4a622a0f0698db42",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/connect.module.ts",
            "methods": [
                {
                    "name": "forRoot",
                    "args": [],
                    "optional": false,
                    "returnType": "ModuleWithProviders<AucConnectModule>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "sourceCode": "import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\n\nimport { AucWalletConnectService } from './services';\n\n\n@NgModule({\n  imports: []\n})\nexport class AucConnectModule {\n  constructor(@Optional() @SkipSelf() parentModule: AucConnectModule) {\n    if (parentModule) {\n      throw new Error('AucConnectModule is already loaded. Import it in the AppModule only!');\n    }\n  }\n\n  public static forRoot(): ModuleWithProviders<AucConnectModule> {\n    return {\n      ngModule: AucConnectModule,\n      providers: [\n        AucWalletConnectService\n      ]\n    };\n  }\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucConnectWalletModule",
            "id": "module-AucConnectWalletModule-9704df70f8c82a0463599da02ae99325a9b1f24a24540081a6fc4eb879384d4cd1cb42d5f39766f21975d1bf6b7334fce209eff40db2430dbaf34a24745a4d4e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/connect-wallet/connect-wallet.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AucAccountBalanceModule } from '../account-balance';\nimport { AucAccountButtonModule } from '../account-button';\nimport { AucButtonModule } from '../button';\nimport { AucNetworkDropdownModule } from '../network-dropdown';\nimport { AucPipesModule } from '../pipes';\nimport { AucConnectWalletComponent } from './connect-wallet.component';\nimport { AucDialogModule } from '../dialog';\nimport { AucTransactionsModule } from '../transactions';\n\n@NgModule({\n  declarations: [\n    AucConnectWalletComponent\n  ],\n  exports: [\n    AucConnectWalletComponent\n  ],\n  imports: [\n    CommonModule,\n    AucButtonModule,\n    AucPipesModule,\n    AucNetworkDropdownModule,\n    AucAccountButtonModule,\n    AucAccountBalanceModule,\n    AucDialogModule,\n    AucTransactionsModule\n  ],\n})\nexport class AucConnectWalletModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucConnectWalletComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucAccountBalanceModule"
                        },
                        {
                            "name": "AucAccountButtonModule"
                        },
                        {
                            "name": "AucButtonModule"
                        },
                        {
                            "name": "AucDialogModule"
                        },
                        {
                            "name": "AucNetworkDropdownModule"
                        },
                        {
                            "name": "AucTransactionsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucConnectWalletComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucCopyToClipboardModule",
            "id": "module-AucCopyToClipboardModule-ee4ba7f4ce7288027ecc0bedac2b078ed8d7570c126205dcfc6f6963ddbf7db3c779071110fd799786c1ebd81d4d75be4bbed6218f3566baa651035ff034a94c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/copy-to-clipboard/copy-to-clipboard.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ClipboardModule } from 'ngx-clipboard';\n\nimport { AucIconModule } from '../icon';\nimport { AucCopyToClipboardComponent } from './copy-to-clipboard.component';\n\n\n@NgModule({\n  declarations: [\n    AucCopyToClipboardComponent,\n  ],\n  exports: [\n    AucCopyToClipboardComponent\n  ],\n  imports: [\n    CommonModule,\n    AucIconModule,\n    ClipboardModule\n  ]\n})\nexport class AucCopyToClipboardModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucCopyToClipboardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucIconModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucCopyToClipboardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucDialogModule",
            "id": "module-AucDialogModule-50b1ca7864704da46c3a3d1e969b3e7dfd719d0a988c6e934abd8ad48777e756a5117ffd9b2444dd1efdb78167b4390dad072b85aad1e2c4a82aca3d1fa42c77",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/dialog/dialog.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AucDialogComponent } from './dialog.component';\nimport { AucCustomizeDialogDirective, AucInsertionDirective } from './directives';\nimport { AucDialogService } from './services';\nimport { AucOverlayModule } from '../overlay';\nimport { AucBlockScrollHelperService } from '../helpers';\n\n\n@NgModule({\n  declarations: [\n    AucDialogComponent,\n    AucInsertionDirective,\n    AucCustomizeDialogDirective\n  ],\n  entryComponents: [\n    AucDialogComponent\n  ],\n  providers: [\n    AucDialogService,\n    AucBlockScrollHelperService\n  ],\n  imports: [\n    CommonModule,\n    AucOverlayModule\n  ]\n})\nexport class AucDialogModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AucBlockScrollHelperService"
                        },
                        {
                            "name": "AucDialogService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucCustomizeDialogDirective"
                        },
                        {
                            "name": "AucDialogComponent"
                        },
                        {
                            "name": "AucInsertionDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucOverlayModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucDirectivesModule",
            "id": "module-AucDirectivesModule-432e4def4fef375b9fa9be4434a23d2a5645e7db199a559918c0d639a6e3932e4bf0cffecaf2fae0f0fe900b0efc73cd79c8ba0f405f6add1b52f52fbec369c3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/directives/directives.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AucContentBodyDirective } from './content-body';\nimport { AucCustomClassDirective } from './custom-class';\nimport { AucIdenticonDirective } from './identicon';\nimport { AucSetStylePropsDirective } from './set-style-props';\nimport { AucTriggerDirective } from './trigger';\n\n\nconst directives = [\n  AucContentBodyDirective,\n  AucCustomClassDirective,\n  AucIdenticonDirective,\n  AucSetStylePropsDirective,\n  AucTriggerDirective\n];\n\n@NgModule({\n  declarations: [\n    ...directives\n  ],\n  exports: [\n    ...directives\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class AucDirectivesModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucContentBodyDirective"
                        },
                        {
                            "name": "AucCustomClassDirective"
                        },
                        {
                            "name": "AucIdenticonDirective"
                        },
                        {
                            "name": "AucSetStylePropsDirective"
                        },
                        {
                            "name": "AucTriggerDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucContentBodyDirective"
                        },
                        {
                            "name": "AucCustomClassDirective"
                        },
                        {
                            "name": "AucIdenticonDirective"
                        },
                        {
                            "name": "AucSetStylePropsDirective"
                        },
                        {
                            "name": "AucTriggerDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucDropdownMenuModule",
            "id": "module-AucDropdownMenuModule-0986f89f672340bc0767e8002b6da9eb7c801090c62c2c515fb04c9f7a1f4ba14b6fc744be0a143ff9d3ff8ad6b3720f5c2b44a5c6652598d67da675e0ee6698",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/dropdown-menu/dropdown-menu.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AucDropdownMenuDirective } from './directives';\nimport { AucDropdownMenuComponent } from './dropdown-menu.component';\nimport { AucOverlayModule } from '../overlay';\nimport { AucDirectivesModule } from '../directives';\n\n\n@NgModule({\n  declarations: [\n    AucDropdownMenuDirective,\n    AucDropdownMenuComponent\n  ],\n  exports: [\n    AucDropdownMenuDirective,\n    AucDropdownMenuComponent\n  ],\n  imports: [\n    CommonModule,\n    AucOverlayModule,\n    AucDirectivesModule\n  ]\n})\nexport class AucDropdownMenuModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucDropdownMenuComponent"
                        },
                        {
                            "name": "AucDropdownMenuDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucDirectivesModule"
                        },
                        {
                            "name": "AucOverlayModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucDropdownMenuComponent"
                        },
                        {
                            "name": "AucDropdownMenuDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucIconModule",
            "id": "module-AucIconModule-b0c80567b51bc3a5c29f17bc84ca8242a5aa69c430b12ad108f0c3b7d80938c924e1cd5b8f24a510daf145f94993f86549c061d7d40304de5960f54a0e342eb5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/icon/icon.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AucIconComponent } from './icon.component';\n\n\n@NgModule({\n  declarations: [\n    AucIconComponent\n  ],\n  exports: [\n    AucIconComponent\n  ],\n  imports: [\n    CommonModule,\n  ]\n})\nexport class AucIconModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucIconComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucIconComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucInputModule",
            "id": "module-AucInputModule-3d73569de75687efe03eaab777fbcc965e1543640db3797d9aecb7cbe985529e021e3be724874bbfb5b8f4506b7f7622d5d57f4ce7be757c7e8a0303c183240f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/input/input.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { DigitOnlyModule } from '@uiowa/digit-only';\n\nimport { AucInputComponent } from './input.component';\n\n\n@NgModule({\n  declarations: [\n    AucInputComponent,\n  ],\n  exports: [\n    AucInputComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    DigitOnlyModule,\n  ]\n})\nexport class AucInputModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucInputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucInputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucNetworkDropdownModule",
            "id": "module-AucNetworkDropdownModule-2f65296a8e55c38661c6726dc538880bcb5baaa4ad36158700a313dd1163c94200d0893a4c31373b884e437e51e40a43481df0e01a546f4f1fd5b24fe5890b00",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/network-dropdown/network-dropdown.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AucButtonModule } from '../button';\nimport { AucPipesModule } from '../pipes';\nimport { AucNetworkDropdownComponent } from './network-dropdown.component';\nimport { AucDropdownMenuModule } from '../dropdown-menu';\nimport { AucDirectivesModule } from '../directives';\nimport { AucNoNetworkConfigComponent } from './no-network-config';\n\n\n@NgModule({\n  declarations: [\n    AucNetworkDropdownComponent,\n    AucNoNetworkConfigComponent\n  ],\n  exports: [\n    AucNetworkDropdownComponent,\n    AucNoNetworkConfigComponent\n  ],\n  imports: [\n    CommonModule,\n    AucButtonModule,\n    AucPipesModule,\n    AucDropdownMenuModule,\n    AucDirectivesModule,\n  ]\n})\nexport class AucNetworkDropdownModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucNetworkDropdownComponent"
                        },
                        {
                            "name": "AucNoNetworkConfigComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucButtonModule"
                        },
                        {
                            "name": "AucDirectivesModule"
                        },
                        {
                            "name": "AucDropdownMenuModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucNetworkDropdownComponent"
                        },
                        {
                            "name": "AucNoNetworkConfigComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucOverlayModule",
            "id": "module-AucOverlayModule-b42a2fc61a333cb3a91cb4e5ac40e39c3e1b65671af341ed0aac1f16aab37449f65534944517ed67d8f2772d942c542cb59a830a76c942458593dc69a06f1cf2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/overlay/overlay.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AucOverlayComponent } from './overlay.component';\nimport { AucDirectivesModule } from '../directives';\n\n\n@NgModule({\n  declarations: [\n    AucOverlayComponent\n  ],\n  exports: [\n    AucOverlayComponent\n  ],\n  imports: [\n    CommonModule,\n    AucDirectivesModule\n  ]\n})\nexport class AucOverlayModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucOverlayComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucDirectivesModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucOverlayComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucPipesModule",
            "id": "module-AucPipesModule-3064722d154109ed385657726c665e4b30b5215eddf03a2ce45d053ecec6b9ac78817803a03d2bfbd75c9f68afe1df9be017123561a86a45ff542300e28204c3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/pipes/pipes.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AucShortAddressPipe } from './short-address.pipe';\n\n@NgModule({\n  declarations: [\n    AucShortAddressPipe,\n  ],\n  exports: [\n    AucShortAddressPipe,\n  ],\n  imports: [\n    CommonModule,\n  ]\n})\nexport class AucPipesModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucShortAddressPipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucShortAddressPipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucProgressBarModule",
            "id": "module-AucProgressBarModule-a44008e730afcb69edbb4e6118611a3bb969079e93760bc648e01243dd4db24954fde2d02dd12fea2764396994e356c0da1eae91520518f2d103ad0788a108b2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/progress-bar/progress-bar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AucProgressBarComponent } from './progress-bar.component';\n\n\n@NgModule({\n  declarations: [\n    AucProgressBarComponent\n  ],\n  exports: [\n    AucProgressBarComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class AucProgressBarModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucProgressBarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucProgressBarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucRippleModule",
            "id": "module-AucRippleModule-cdb0e4178f5047d935db06bebc01e08e398a9a8c3b3c57ae8f434aed242ad9e297a98b54eb40d5daba95646a6a59e7b38d912bdf87a02ca75ed28e0445b8ece2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/ripple/ripple.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { AucRippleDirective } from './directives';\n\n\n@NgModule({\n  declarations: [\n    AucRippleDirective\n  ],\n  exports: [\n    AucRippleDirective\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class AucRippleModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucRippleDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucRippleDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucSpinnerModule",
            "id": "module-AucSpinnerModule-2c8eeaf919b10d773c06e4748b21ba938345fc32e86d4c8217c4a9d966eb4f269dae40eec9dcd143f5b8c1db2aadaee6439388a45d09a8168993df6e970b0bb3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/spinner/spinner.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AucSpinnerComponent } from './spinner.component';\n\n\n@NgModule({\n  declarations: [\n    AucSpinnerComponent\n  ],\n  exports: [\n    AucSpinnerComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class AucSpinnerModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucSpinnerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucSpinnerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucTableModule",
            "id": "module-AucTableModule-4d3d79092f124daaf99f2c190fd6f7a97723d481818e61f5653b9b0da49fa8248d6d541d39e907bc4fa18ce1d4cfbdeba2186304f40f9e985aed8b431ccaf5f1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/table/table.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AucIconModule } from '../icon';\nimport { AucTableComponent } from './table.component';\nimport { AucDirectivesModule } from '../directives';\n\n\n@NgModule({\n  declarations: [\n    AucTableComponent\n  ],\n  exports: [\n    AucTableComponent\n  ],\n  imports: [\n    CommonModule,\n    AucIconModule,\n    AucDirectivesModule\n  ]\n})\nexport class AucTableModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucTableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucDirectivesModule"
                        },
                        {
                            "name": "AucIconModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucTableComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AucTransactionsModule",
            "id": "module-AucTransactionsModule-69955cff675fbbda25a053921ef368fca3e7aa19a25c0ad48f1616317b7330bd936679751a3449ab3ab4a05e9ac4cbbfce6eb9a893b45931720de367a8ccc829",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/transactions/transactions.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AucSpinnerModule } from '../spinner';\nimport {\n  AucTransactionsHistoryComponent,\n  AucTransactionsHistoryModalComponent,\n  AucTransactionsListComponent\n} from './components';\nimport { AucIconModule } from '../icon';\nimport { AucButtonModule } from '../button';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AucTransactionService } from './services';\n\n\n@NgModule({\n  declarations: [\n    AucTransactionsHistoryComponent,\n    AucTransactionsHistoryModalComponent,\n    AucTransactionsListComponent\n  ],\n  exports: [\n    AucTransactionsHistoryComponent,\n    AucTransactionsHistoryModalComponent,\n    AucTransactionsListComponent\n  ],\n  providers: [AucTransactionService],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    AucSpinnerModule,\n    AucIconModule,\n    AucButtonModule\n  ]\n})\nexport class AucTransactionsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AucTransactionService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucTransactionsHistoryComponent"
                        },
                        {
                            "name": "AucTransactionsHistoryModalComponent"
                        },
                        {
                            "name": "AucTransactionsListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucButtonModule"
                        },
                        {
                            "name": "AucIconModule"
                        },
                        {
                            "name": "AucSpinnerModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucTransactionsHistoryComponent"
                        },
                        {
                            "name": "AucTransactionsHistoryModalComponent"
                        },
                        {
                            "name": "AucTransactionsListComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonDemoModule",
            "id": "module-ButtonDemoModule-087ab945dd2dd184408ee7cad24ebbf14137eb8698f5cdb4b4457d01be2c32b61b4026a2bbfb3fff689836185d0fd494735d3f4f0282dab62152c339e88021be",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/components-demo/src/app/modules/button-demo/button-demo.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonDemoComponent } from './button-demo.component';\nimport { ExampleViewModule } from '../example-view/example-view.module';\nimport { AucButtonModule } from '@applicature/components';\n\n\n\n@NgModule({\n  declarations: [\n    ButtonDemoComponent\n  ],\n  exports: [\n    ButtonDemoComponent\n  ],\n  imports: [\n    CommonModule,\n    ExampleViewModule,\n    AucButtonModule\n  ]\n})\nexport class ButtonDemoModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonDemoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucButtonModule"
                        },
                        {
                            "name": "ExampleViewModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonDemoComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ExampleAccountBalanceModule",
            "id": "module-ExampleAccountBalanceModule-492ca3aa54daa2529134d9afdccaba4932ed7e9a2d2931798f671e4de9c64cdd0d926cd5187548b3c94aa0d48ed27f874ba6ed5d24668678060bb5fbd6af140b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/demo/src/app/examples/example-account-balance/example-account-balance.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ExampleAccountBalanceComponent } from './example-account-balance.component';\nimport { AucAccountBalanceModule } from '@applicature/components';\n\n\n\n@NgModule({\n  declarations: [\n    ExampleAccountBalanceComponent\n  ],\n  exports: [\n    ExampleAccountBalanceComponent\n  ],\n  imports: [\n    CommonModule,\n    AucAccountBalanceModule\n  ]\n})\nexport class ExampleAccountBalanceModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ExampleAccountBalanceComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucAccountBalanceModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ExampleAccountBalanceComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ExampleDialogsModule",
            "id": "module-ExampleDialogsModule-0be88fd2e1dead7e26d6742cb8b3a9646dab61eef5b8d0fd6f048432fa894afc78417f053d057ae44c6c7bb489978a6f6c41f07f01852edc9221fad0b2641ae5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/demo/src/app/examples/example-dialogs/example-dialogs.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AucButtonModule, AucDialogModule } from '@applicature/components';\n\nimport { ExampleDialogsComponent } from './example-dialogs.component';\nimport { DialogTestComponent } from './components/dialog-test/dialog-test.component';\n\n\n@NgModule({\n  declarations: [\n    ExampleDialogsComponent,\n    DialogTestComponent\n  ],\n  exports: [\n    ExampleDialogsComponent\n  ],\n  imports: [\n    CommonModule,\n    AucDialogModule,\n    AucButtonModule\n  ],\n  entryComponents: [\n    DialogTestComponent\n  ]\n})\nexport class ExampleDialogsModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DialogTestComponent"
                        },
                        {
                            "name": "ExampleDialogsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucButtonModule"
                        },
                        {
                            "name": "AucDialogModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ExampleDialogsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ExampleDropdownMenuModule",
            "id": "module-ExampleDropdownMenuModule-61f53a3c99a7beabef850791716d59e8ecc0a5ba6e2e7c4f85e2b49efafccb21d92c967195e3da669936615f036a1cb36e6eec2ab4ca828e083d86b46f9938ac",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/demo/src/app/examples/example-dropdown-menu/example-dropdown-menu.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AucButtonModule, AucDropdownMenuModule, AucDirectivesModule } from '@applicature/components';\n\nimport { CustomDropdownMenuComponent } from './components';\n\n\n@NgModule({\n  declarations: [\n    CustomDropdownMenuComponent\n  ],\n  exports: [\n    CustomDropdownMenuComponent\n  ],\n  imports: [\n    CommonModule,\n    AucButtonModule,\n    AucDropdownMenuModule,\n    AucDirectivesModule\n  ]\n})\nexport class ExampleDropdownMenuModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CustomDropdownMenuComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucButtonModule"
                        },
                        {
                            "name": "AucDirectivesModule"
                        },
                        {
                            "name": "AucDropdownMenuModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CustomDropdownMenuComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ExampleTableModule",
            "id": "module-ExampleTableModule-8d2b7051500cd38fa6fb574d892bd97678e7925340f2484fb6faea1bcd9997b1302e46ec4af9623bb209fd32e0e1ed339ad6ca466f0192fd1c46d75c07cd573a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/demo/src/app/examples/example-table/example-table.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AucTableModule } from '@applicature/components';\n\nimport { ExampleTableComponent } from './example-table.component';\n\n\n@NgModule({\n  declarations: [\n    ExampleTableComponent\n  ],\n  exports: [\n    ExampleTableComponent\n  ],\n  imports: [\n    CommonModule,\n    AucTableModule\n  ]\n})\nexport class ExampleTableModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ExampleTableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucTableModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ExampleTableComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ExampleViewModule",
            "id": "module-ExampleViewModule-f97721b4fab4f722fb950348181b65db65dd350614a3aca8fc3c6c7e5b70843d76f65ecc2c078984f7b2db2981c461debb3200bf227fe76e68955604acc0e0df",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/components-demo/src/app/modules/example-view/example-view.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ExampleViewComponent } from './example-view.component';\nimport { DocViewComponent } from './components/doc-view/doc-view.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DocumentationParserService } from './services';\n\n\n@NgModule({\n  declarations: [\n    ExampleViewComponent,\n    DocViewComponent,\n  ],\n  exports: [\n    ExampleViewComponent\n  ],\n  providers: [DocumentationParserService],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ]\n})\nexport class ExampleViewModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "DocumentationParserService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DocViewComponent"
                        },
                        {
                            "name": "ExampleViewComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ExampleViewComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ModalsModule",
            "id": "module-ModalsModule-3d1333b3035173a61afbb086bcd4d07e14d261492662ec54612193b1239e5a5bd78627fe98f8058db1418b3fafcea435adc3e8d5d561baef6b3f422094b8d298",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/applicature/components/src/lib/modals/modals.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from 'ngx-clipboard';\n\nimport { AucProgressBarModule } from '../progress-bar';\nimport { AucRippleModule } from '../ripple';\nimport { AucSpinnerModule } from '../spinner';\nimport { AucButtonModule } from '../button';\nimport { AucInputModule } from '../input';\nimport { AucPipesModule } from '../pipes';\nimport { AucAccountModalComponent } from './account-modal';\nimport { AucTransferModalComponent } from './transfer-modal';\nimport { AucWrongNetworkModalComponent } from './wrong-network-modal';\nimport { AucIconModule } from '../icon';\nimport { AucDirectivesModule } from '../directives';\nimport { AucTransactionsModule } from '../transactions';\n\nconst components = [\n  AucAccountModalComponent,\n  AucTransferModalComponent,\n  AucWrongNetworkModalComponent\n];\n\n@NgModule({\n  declarations: [\n    ...components\n  ],\n  exports: [\n    ...components\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AucPipesModule,\n    AucButtonModule,\n    AucInputModule,\n    AucRippleModule,\n    AucSpinnerModule,\n    AucProgressBarModule,\n    ClipboardModule,\n    AucIconModule,\n    AucDirectivesModule,\n    AucTransactionsModule\n  ]\n})\nexport class ModalsModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AucAccountModalComponent"
                        },
                        {
                            "name": "AucTransferModalComponent"
                        },
                        {
                            "name": "AucWrongNetworkModalComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AucButtonModule"
                        },
                        {
                            "name": "AucDirectivesModule"
                        },
                        {
                            "name": "AucIconModule"
                        },
                        {
                            "name": "AucInputModule"
                        },
                        {
                            "name": "AucProgressBarModule"
                        },
                        {
                            "name": "AucRippleModule"
                        },
                        {
                            "name": "AucSpinnerModule"
                        },
                        {
                            "name": "AucTransactionsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AucAccountModalComponent"
                        },
                        {
                            "name": "AucTransferModalComponent"
                        },
                        {
                            "name": "AucWrongNetworkModalComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "AsColors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/styles/src/lib/colors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\n  [AS_COLOR_GROUP.BLUE]: {\n    base: '#4678F0',\n    hover: '#608BF2',\n    light: '#8CABF6',\n    dark: '#3F67C7',\n    text: '#FFFFFF',\n    border: '#4678F0',\n    borderHover: '#608BF2',\n    borderFocus: '#3F67C7',\n  },\n  [AS_COLOR_GROUP.RED]: {\n    base: '#E84142',\n    hover: '#EA5C5E',\n    light: '#F0898B',\n    dark: '#C03B3C',\n    text: '#FFFFFF',\n    border: '#E84142',\n    borderHover: '#EA5C5E',\n    borderFocus: '#C03B3C',\n  },\n  [AS_COLOR_GROUP.GREEN]: {\n    base: '#37CA34',\n    hover: '#6BD66B',\n    light: '#94E194',\n    dark: '#33A830',\n    text: '#FFFFFF',\n    border: '#37CA34',\n    borderHover: '#6BD66B',\n    borderFocus: '#33A830',\n  },\n  [AS_COLOR_GROUP.ORANGE]: {\n    base: '#F09643',\n    hover: '#F2A45B',\n    light: '#F6BE8A',\n    dark: '#C77F3C',\n    text: '#FFFFFF',\n    border: '#F09643',\n    borderHover: '#F2A45B',\n    borderFocus: '#C77F3C',\n  },\n  [AS_COLOR_GROUP.GREY]: {\n    base: '#6D87AC',\n    hover: '#BBC7D9',\n    light: '#DDE3EC',\n    dark: '#5F7492',\n    text: '#FFFFFF',\n    border: '#6D87AC',\n    borderHover: '#BBC7D9',\n    borderFocus: '#5F7492',\n  },\n  [AS_COLOR_GROUP.WHITE]: {\n    base: '#FFFFFF',\n    hover: '#FFFFFF',\n    light: '#FFFFFF',\n    dark: '#FFFFFF',\n    text: '#222222',\n    border: '#FFFFFF',\n    borderHover: '#DDE3EC',\n    borderFocus: '#608BF2',\n  },\n}"
            },
            {
                "name": "AUC_CONNECTED_WALLET_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/lib/services/wallet-connect/wallet-connect.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'AUC_CONNECTED_WALLET_NAME'"
            },
            {
                "name": "AUC_ETHERSCAN_INTERVAL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/lib/transactions/services/transaction/transaction.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "10000"
            },
            {
                "name": "AUC_ETHERSCAN_TRANSACTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/lib/transactions/services/transaction/transaction.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'AUC_ETHERSCAN_TRANSACTIONS'"
            },
            {
                "name": "AucBlockExplorerApiUrl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/lib/constants/block-explorer-api-url.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\n  [AUC_CHAIN_ID.ARBITRUM_MAINNET]: 'https://api.arbiscan.io/api',\n  [AUC_CHAIN_ID.ARBITRUM_TESTNET]: 'https://api-testnet.arbiscan.io/api',\n  [AUC_CHAIN_ID.OPTIMISTIC_MAINNET]: 'https://api-optimistic.etherscan.io/api',\n  [AUC_CHAIN_ID.OPTIMISTIC_TESTNET]: 'https://api-kovan-optimistic.etherscan.io/api',\n  [AUC_CHAIN_ID.BSC_MAINNET]: 'https://api.bscscan.com/api',\n  [AUC_CHAIN_ID.BSC_TESTNET]: 'https://api-testnet.bscscan.com/api',\n  [AUC_CHAIN_ID.POLYGON_MAINNET]: 'https://api.polygonscan.com/api',\n  [AUC_CHAIN_ID.POLYGON_TESTNET]: 'https://api-testnet.polygonscan.com/api',\n  [AUC_CHAIN_ID.ASTAR_MAINNET]: null, // Doesn't support\n  [AUC_CHAIN_ID.ASTAR_TESTNET]: null,  // Doesn't support\n  [AUC_CHAIN_ID.SHIDEN_MAINNET]: null,  // Doesn't support\n  [AUC_CHAIN_ID.SHIDEN_TESTNET]: null,  // Doesn't support\n  [AUC_CHAIN_ID.AVALANCH_MAINNET]: 'https://api.snowtrace.io/api',\n  [AUC_CHAIN_ID.AVALANCH_TESTNET]: 'https://api-testnet.snowtrace.io/api',\n  [AUC_CHAIN_ID.FANTOM_MAINNET]: 'https://api.ftmscan.com/api',\n  [AUC_CHAIN_ID.FANTOM_TESTNET]: 'https://api-testnet.ftmscan.com/api',\n  [AUC_CHAIN_ID.THETA_MAINNET]: null,  // Doesn't support\n  [AUC_CHAIN_ID.THETA_TESTNET]: null,  // Doesn't support\n  [AUC_CHAIN_ID.ETHEREUM_MAINNET]: 'https://api.etherscan.io/api',\n  [AUC_CHAIN_ID.RINKEBY_TESTNET]: 'https://api-rinkeby.etherscan.io/api',\n  [AUC_CHAIN_ID.ROPSTEN_TESTNET]: 'https://api-ropsten.etherscan.io/api',\n  [AUC_CHAIN_ID.GOERLI_TESTNET]: 'https://api-goerli.etherscan.io/api',\n  [AUC_CHAIN_ID.KOVAN_TESTNET]: 'https://api-kovan.etherscan.io/api',\n}"
            },
            {
                "name": "AucBlockExplorerUrls",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/lib/constants/block-eplorer-urls.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\n  [AUC_CHAIN_ID.ARBITRUM_MAINNET]: [ 'https://arbiscan.io' ],\n  [AUC_CHAIN_ID.ARBITRUM_TESTNET]: [ 'https://rinkeby-explorer.arbitrum.io/#/' ],\n  [AUC_CHAIN_ID.OPTIMISTIC_MAINNET]: [ 'https://optimistic.etherscan.io' ],\n  [AUC_CHAIN_ID.OPTIMISTIC_TESTNET]: [ 'https://kovan-optimistic.etherscan.io' ],\n  [AUC_CHAIN_ID.BSC_MAINNET]: [ 'https://bscscan.com' ],\n  [AUC_CHAIN_ID.BSC_TESTNET]: [ 'https://testnet.bscscan.com' ],\n  [AUC_CHAIN_ID.POLYGON_MAINNET]: [ 'https://explorer.matic.network' ],\n  [AUC_CHAIN_ID.POLYGON_TESTNET]: [ 'https://mumbai.polygonscan.com' ],\n  [AUC_CHAIN_ID.ASTAR_MAINNET]: [ 'https://astar.subscan.io' ],\n  [AUC_CHAIN_ID.ASTAR_TESTNET]: [ 'https://shibuya.subscan.io' ],\n  [AUC_CHAIN_ID.SHIDEN_MAINNET]: [ 'https://shiden.subscan.io' ],\n  [AUC_CHAIN_ID.SHIDEN_TESTNET]: [ 'https://shibuya.subscan.io' ],\n  [AUC_CHAIN_ID.AVALANCH_MAINNET]: [ 'https://snowtrace.io' ],\n  [AUC_CHAIN_ID.AVALANCH_TESTNET]: [ 'https://testnet.snowtrace.io' ],\n  [AUC_CHAIN_ID.FANTOM_MAINNET]: [ 'https://ftmscan.com' ],\n  [AUC_CHAIN_ID.FANTOM_TESTNET]: [ 'https://testnet.ftmscan.com' ],\n  [AUC_CHAIN_ID.THETA_MAINNET]: [ 'https://explorer.thetatoken.org' ],\n  [AUC_CHAIN_ID.THETA_TESTNET]: [ 'https://testnet-explorer.thetatoken.org' ],\n  [AUC_CHAIN_ID.ETHEREUM_MAINNET]: [ 'https://etherscan.io' ],\n  [AUC_CHAIN_ID.RINKEBY_TESTNET]: [ 'https://rinkeby.etherscan.io' ],\n  [AUC_CHAIN_ID.ROPSTEN_TESTNET]: [ 'https://ropsten.etherscan.io' ],\n  [AUC_CHAIN_ID.GOERLI_TESTNET]: [ 'https://goerli.etherscan.io' ],\n  [AUC_CHAIN_ID.KOVAN_TESTNET]: [ 'https://kovan.etherscan.io' ]\n}"
            },
            {
                "name": "aucBn10PowLookupMap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Map<number, BigNumber>",
                "defaultValue": "new Map<number, BigNumber>([])"
            },
            {
                "name": "AucChainName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/lib/constants/chain-name.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\n  [AUC_CHAIN_ID.ARBITRUM_MAINNET]: 'Arbitrum Mainnet',\n  [AUC_CHAIN_ID.ARBITRUM_TESTNET]: 'Arbitrum Rinkeby Testnet',\n  [AUC_CHAIN_ID.ASTAR_MAINNET]: 'Astar Network Mainnet',\n  [AUC_CHAIN_ID.ASTAR_TESTNET]: 'Shibuya Testnet',\n  [AUC_CHAIN_ID.AVALANCH_MAINNET]: 'Avalanche Network Mainnet',\n  [AUC_CHAIN_ID.AVALANCH_TESTNET]: 'Fuji Testnet',\n  [AUC_CHAIN_ID.BSC_MAINNET]: 'Binance Smart Chain Mainnet',\n  [AUC_CHAIN_ID.BSC_TESTNET]: 'Binance Smart Chain Testnet',\n  [AUC_CHAIN_ID.ETHEREUM_MAINNET]: 'Ethereum Mainnet',\n  [AUC_CHAIN_ID.FANTOM_MAINNET]: 'Fantom Opera',\n  [AUC_CHAIN_ID.FANTOM_TESTNET]: 'Fantom Testnet',\n  [AUC_CHAIN_ID.GOERLI_TESTNET]: 'Goreli Testnet',\n  [AUC_CHAIN_ID.KOVAN_TESTNET]: 'Kovan Testnet',\n  [AUC_CHAIN_ID.OPTIMISTIC_MAINNET]: 'Optimistic Ethereum Mainnet',\n  [AUC_CHAIN_ID.OPTIMISTIC_TESTNET]: 'Optimistic Ethereum Kovan Testnet',\n  [AUC_CHAIN_ID.POLYGON_MAINNET]: 'Polygon Mainnet',\n  [AUC_CHAIN_ID.POLYGON_TESTNET]: 'Mumbai Testnet',\n  [AUC_CHAIN_ID.RINKEBY_TESTNET]: 'Rinkeby Testnet',\n  [AUC_CHAIN_ID.SHIDEN_MAINNET]: 'Shiden Network Mainnet',\n  [AUC_CHAIN_ID.SHIDEN_TESTNET]: 'Shibuya Testnet',\n  [AUC_CHAIN_ID.THETA_MAINNET]: 'Theta Mainnet',\n  [AUC_CHAIN_ID.THETA_TESTNET]: 'Theta Testnet',\n}"
            },
            {
                "name": "AucNativeCurrencies",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/lib/constants/native-currencies.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\n  [AUC_CHAIN_ID.ARBITRUM_MAINNET]: {\n    name: 'ETH',\n    symbol: 'eth',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.ARBITRUM_TESTNET]: {\n    name: 'ETH',\n    symbol: 'eth',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.ASTAR_MAINNET]: {\n    name: 'ASTR',\n    symbol: 'astr',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.ASTAR_TESTNET]: {\n    name: 'SBY',\n    symbol: 'sby',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.AVALANCH_MAINNET]: {\n    name: 'AVAX',\n    symbol: 'avax',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.AVALANCH_TESTNET]: {\n    name: 'AVAX',\n    symbol: 'avax',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.BSC_MAINNET]: {\n    name: 'BNB',\n    symbol: 'bnb',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.BSC_TESTNET]: {\n    name: 'BNB',\n    symbol: 'bnb',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.ETHEREUM_MAINNET]: {\n    name: 'ETH',\n    symbol: 'eth',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.FANTOM_MAINNET]: {\n    name: 'FTM',\n    symbol: 'ftm',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.FANTOM_TESTNET]: {\n    name: 'FTM',\n    symbol: 'ftm',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.GOERLI_TESTNET]: {\n    name: 'ETH',\n    symbol: 'eth',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.KOVAN_TESTNET]: {\n    name: 'ETH',\n    symbol: 'eth',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.OPTIMISTIC_MAINNET]: {\n    name: 'ETH',\n    symbol: 'eth',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.OPTIMISTIC_TESTNET]: {\n    name: 'ETH',\n    symbol: 'eth',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.POLYGON_MAINNET]: {\n    name: 'MATIC',\n    symbol: 'matic',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.POLYGON_TESTNET]: {\n    name: 'MATIC',\n    symbol: 'matic',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.RINKEBY_TESTNET]: {\n    name: 'ETH',\n    symbol: 'eth',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.ROPSTEN_TESTNET]: {\n    name: 'ETH',\n    symbol: 'eth',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.SHIDEN_MAINNET]: {\n    name: 'SDN',\n    symbol: 'sdn',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.SHIDEN_TESTNET]: {\n    name: 'SBY',\n    symbol: 'sby',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.THETA_MAINNET]: {\n    name: 'TFUEL',\n    symbol: 'tfuel',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.THETA_TESTNET]: {\n    name: 'TFUEL',\n    symbol: 'tfuel',\n    decimals: 18,\n  }\n}"
            },
            {
                "name": "AucRpcUrls",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/lib/constants/rpc-urls.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\n  [AUC_CHAIN_ID.ARBITRUM_MAINNET]: [ 'https://arb1.arbitrum.io/rpc' ],\n  [AUC_CHAIN_ID.ARBITRUM_TESTNET]: [ 'https://rinkeby.arbitrum.io/rpc' ],\n  [AUC_CHAIN_ID.OPTIMISTIC_MAINNET]: [ 'https://mainnet.optimism.io' ],\n  [AUC_CHAIN_ID.OPTIMISTIC_TESTNET]: [ 'https://kovan.optimism.io' ],\n  [AUC_CHAIN_ID.BSC_MAINNET]: [ 'https://bsc-dataseed.binance.org' ],\n  [AUC_CHAIN_ID.BSC_TESTNET]: [ 'https://data-seed-prebsc-1-s1.binance.org:8545' ],\n  [AUC_CHAIN_ID.POLYGON_MAINNET]: [ 'https://rpc-mainnet.maticvigil.com' ],\n  [AUC_CHAIN_ID.POLYGON_TESTNET]: [ 'https://rpc-mumbai.maticvigil.com' ],\n  [AUC_CHAIN_ID.ASTAR_MAINNET]: [ 'https://rpc.astar.network:8545' ],\n  [AUC_CHAIN_ID.ASTAR_TESTNET]: [ 'https://rpc.shibuya.astar.network:8545' ],\n  [AUC_CHAIN_ID.SHIDEN_MAINNET]: [ 'https://rpc.shiden.astar.network:8545' ],\n  [AUC_CHAIN_ID.SHIDEN_TESTNET]: [ 'https://rpc.shibuya.astar.network:8545' ],\n  [AUC_CHAIN_ID.AVALANCH_MAINNET]: [ 'https://api.avax.network/ext/bc/C/rpc' ],\n  [AUC_CHAIN_ID.AVALANCH_TESTNET]: [ 'https://api.avax-test.network/ext/bc/C/rpc' ],\n  [AUC_CHAIN_ID.FANTOM_MAINNET]: [ 'https://rpc.ftm.tools' ],\n  [AUC_CHAIN_ID.FANTOM_TESTNET]: [ 'https://rpc.testnet.fantom.network' ],\n  [AUC_CHAIN_ID.THETA_MAINNET]: [ 'https://eth-rpc-api.thetatoken.org/rpc' ],\n  [AUC_CHAIN_ID.THETA_TESTNET]: [ 'https://eth-rpc-api-testnet.thetatoken.org/rpc' ]\n}"
            },
            {
                "name": "Blue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "buttonDemo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/components-demo/src/app/modules/examples/btn-example.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TemplateStringsArray",
                "defaultValue": "html`<auc-button label=\"Button\"></auc-button>`"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/lib/modals/modals.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  AucAccountModalComponent,\n  AucTransferModalComponent,\n  AucWrongNetworkModalComponent\n]"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/components-demo/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/demo/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/styles/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "directives",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/lib/directives/directives.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  AucContentBodyDirective,\n  AucCustomClassDirective,\n  AucIdenticonDirective,\n  AucSetStylePropsDirective,\n  AucTriggerDirective\n]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/components-demo/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/components-demo/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/demo/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/demo/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Green",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Grey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "INPUT_FIELD_VALUE_ACCESSOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/lib/input/input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AucInputComponent),\n  multi: true,\n}"
            },
            {
                "name": "networks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/demo/src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  eth: 1,\n  kovanTestnet: AUC_CHAIN_ID_NUM.KOVAN_TESTNET,\n  // ...\n}"
            },
            {
                "name": "Orange",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Red",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/components-demo/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/demo/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/styles/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "supportedNetworks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/demo/src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AucNetworkOption[]",
                "defaultValue": "[\n  {\n    icon: 'assets/svg/network/eth.svg',\n    name: 'Ethereum',\n    chainId: AUC_CHAIN_ID.RINKEBY_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.RINKEBY_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.RINKEBY_TESTNET][0],\n    isActive: false\n  },\n  {\n    icon: 'assets/svg/network/eth.svg',\n    name: 'Kovan',\n    chainId: AUC_CHAIN_ID.KOVAN_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.KOVAN_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.KOVAN_TESTNET][0],\n    isActive: false\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'BSC',\n    chainId: '0x61',\n    symbol: 'BNB',\n    blockExplorerUrl: 'https://testnet.bscscan.com',\n    blockExplorerApiUrl: 'https://api-testnet.bscscan.com/api',\n    isActive: false,\n    chainParams: { // Custom Chain params\n      chainId: '0x61',\n      chainName: 'Binance Smart Chain Testnet',\n      nativeCurrency: {\n        name: 'BNB',\n        symbol: 'bnb',\n        decimals: 18\n      },\n      rpcUrls: [ 'https://data-seed-prebsc-1-s1.binance.org:8545' ],\n      blockExplorerUrls: [ 'https://testnet.bscscan.com' ]\n    }\n  },\n  {\n    icon: 'assets/svg/network/avax.svg',\n    name: 'Avalanche',\n    chainId: AUC_CHAIN_ID.AVALANCH_TESTNET,\n    isActive: false,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.AVALANCH_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.AVALANCH_TESTNET][0],\n    blockExplorerApiUrl: AucBlockExplorerApiUrl[AUC_CHAIN_ID.AVALANCH_TESTNET],\n    chainParams: { // modify existing Chain params\n      ...(aucGetChainParams(AUC_CHAIN_ID.AVALANCH_TESTNET)),\n      chainName: 'Avalanche TestNet'\n    }\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Arbitrum',\n    chainId: AUC_CHAIN_ID.ARBITRUM_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.ARBITRUM_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.ARBITRUM_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Astar',\n    chainId: AUC_CHAIN_ID.ASTAR_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.ASTAR_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.ASTAR_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Fantom',\n    chainId: AUC_CHAIN_ID.FANTOM_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.FANTOM_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.FANTOM_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Goreli',\n    chainId: AUC_CHAIN_ID.GOERLI_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.GOERLI_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.GOERLI_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Optimistic',\n    chainId: AUC_CHAIN_ID.OPTIMISTIC_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.OPTIMISTIC_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.OPTIMISTIC_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Polygon',\n    chainId: AUC_CHAIN_ID.POLYGON_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.POLYGON_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.POLYGON_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Ropsten',\n    chainId: AUC_CHAIN_ID.ROPSTEN_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.ROPSTEN_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.ROPSTEN_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Shiden',\n    chainId: AUC_CHAIN_ID.SHIDEN_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.SHIDEN_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.SHIDEN_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Theta',\n    chainId: AUC_CHAIN_ID.THETA_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.THETA_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.THETA_TESTNET][0],\n    isActive: false,\n  }\n]"
            },
            {
                "name": "TableData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/demo/src/app/examples/example-table/example-table.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AucTableRow[]",
                "defaultValue": "[\n  {\n    action: {\n      value: 'Withdraw',\n      icon: 'assets/svg/icons/minus-red.svg'\n    },\n    tokens: [\n      {\n        value: '1.240123',\n        icon: 'assets/svg/network/eth.svg',\n        withBg: true\n      },\n      {\n        value: '5.2k',\n        icon: 'assets/svg/coin/usdt.svg',\n        withBg: true\n      }\n    ],\n    value: {\n      value: '$10.4k',\n    },\n    time: {\n      value: 'about 6 hours ago ↗',\n      link: 'https://www.google.com/'\n    }\n  },\n  {\n    action: {\n      value: 'Withdraw',\n      icon: 'assets/svg/icons/minus-red.svg'\n    },\n    tokens: [\n      {\n        value: '1.0...01234',\n        icon: 'assets/svg/network/eth.svg',\n        withBg: true\n      }\n    ],\n    value: {\n      value: '$4.2k',\n    },\n    time: {\n      value: 'about 6 hours ago ↗',\n      link: 'https://www.google.com/'\n    }\n  },\n  {\n    action: {\n      value: 'Invest',\n      icon: 'assets/svg/icons/plus-green.svg'\n    },\n    tokens: [\n      {\n        value: '500',\n        icon: 'assets/svg/coin/usdt.svg',\n        withBg: true\n      }\n    ],\n    value: {\n      value: '$500',\n    },\n    time: {\n      value: 'about 6 hours ago ↗',\n      link: 'https://www.google.com/'\n    }\n  },\n  {\n    action: {\n      value: 'Invest',\n      icon: 'assets/svg/icons/plus-green.svg'\n    },\n    tokens: [\n      {\n        value: '1.240123',\n        icon: 'assets/svg/network/eth.svg',\n        withBg: true\n      },\n      {\n        value: '5.2k',\n        icon: 'assets/svg/coin/usdt.svg',\n        withBg: true\n      }\n    ],\n    value: {\n      value: '$10.4k',\n    },\n    time: {\n      value: 'about 6 hours ago ↗',\n      link: 'https://www.google.com/'\n    }\n  },\n]"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<AucAlertComponent>",
                "defaultValue": "(args: AucAlertComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "testCode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/components-demo/src/app/modules/examples/btn-example.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any",
                "defaultValue": "`import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\nimport { buttonDemo } from '../examples/btn-example';\n\n\n@Component({\n  selector: 'demo-button-demo',\n  templateUrl: './button-demo.component.html',\n  styleUrls: [ './button-demo.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ButtonDemoComponent {\n  public buttonDemo: any = buttonDemo;\n  public testCode: any = testCode;\n\n  public onClick(evt): void {\n    console.log('Btn example clicked: ', evt);\n  }\n\n}\n`"
            },
            {
                "name": "wallets",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/demo/src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<WalletModule | WalletInitOptions>",
                "defaultValue": "[\n  {\n    walletName: 'metamask',\n    preferred: true\n  },\n  {\n    walletName: 'walletConnect',\n    infuraKey: '${YOUR_INFURA_KEY}',\n    preferred: true\n  }\n]"
            },
            {
                "name": "White",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "window",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/components-demo/src/app/modules/example-view/example-view.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": ""
            }
        ],
        "functions": [
            {
                "name": "aucCheckValueType",
                "file": "projects/applicature/components/src/lib/helpers/check-value-type.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>It&#39;s better alternative for typeof.</p>\n",
                "args": [
                    {
                        "name": "value",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "type",
                        "type": "AucValueType",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "boolean",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 488,
                            "end": 493,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "value"
                        },
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 482,
                            "end": 487,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>value to check type.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 527,
                            "end": 531,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "originalKeywordKind": 151,
                            "escapedText": "type"
                        },
                        "type": "AucValueType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 521,
                            "end": 526,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>expected type of Value;</li>\n</ul>\n"
                    }
                ]
            },
            {
                "name": "aucConvertChainIdToHex",
                "file": "projects/applicature/components/src/lib/helpers/convert-chainId-to-hex.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>This method uses for converting chainId as a number to 0x-prefixed hexadecimal string</p>\n<p>{@see AUC_CHAIN_ID} - Already converted Chains;</p>\n",
                "args": [
                    {
                        "name": "chainId",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 163,
                            "end": 170,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "chainId"
                        },
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 157,
                            "end": 162,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>this is chainId as number.\nYou can use {@link AUC_CHAIN_ID_NUM} or your specific value.</li>\n</ul>\n"
                    }
                ]
            },
            {
                "name": "aucFromWei",
                "file": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "val",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "decimals",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "18"
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "val",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "decimals",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "18",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "aucGenerateJazzicon",
                "file": "projects/applicature/components/src/lib/helpers/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "address",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "diameter",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "20"
                    }
                ],
                "returnType": "HTMLDivElement | null",
                "jsdoctags": [
                    {
                        "name": "address",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "diameter",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "20",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "aucGetChainParams",
                "file": "projects/applicature/components/src/lib/helpers/get-chain-params.helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>This method is uses for generating network config which is uses for adding new network to the Metamask.</p>\n",
                "args": [
                    {
                        "name": "chainId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "''"
                    }
                ],
                "returnType": "AucEthChainParams",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 274,
                            "end": 281,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "chainId"
                        },
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "''",
                        "tagName": {
                            "pos": 268,
                            "end": 273,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>0x-prefixed hexadecimal string;</li>\n</ul>\n"
                    }
                ]
            },
            {
                "name": "aucIsAddress",
                "file": "projects/applicature/components/src/lib/helpers/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string | ",
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "aucIsTxHash",
                "file": "projects/applicature/components/src/lib/helpers/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "address",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "boolean",
                "jsdoctags": [
                    {
                        "name": "address",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "aucNormalize",
                "file": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "decimals",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "2"
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "value",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "decimals",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "2",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "aucNormalizeBalance",
                "file": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "networkId",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "value",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "digits",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "3"
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1268,
                            "end": 1277,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "networkId"
                        },
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1262,
                            "end": 1267,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>connected network id.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 1312,
                            "end": 1317,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "value"
                        },
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1306,
                            "end": 1311,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>converted value.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 1347,
                            "end": 1353,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "digits"
                        },
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "3",
                        "tagName": {
                            "pos": 1341,
                            "end": 1346,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>significant digits.</li>\n</ul>\n"
                    }
                ]
            },
            {
                "name": "aucNormalizeBN",
                "file": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "decimals",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "2"
                    }
                ],
                "returnType": "BigNumber",
                "jsdoctags": [
                    {
                        "name": "value",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "decimals",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "2",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "aucPow10",
                "file": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "decimals",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "BigNumber",
                "jsdoctags": [
                    {
                        "name": "decimals",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "aucShortAddress",
                "file": "projects/applicature/components/src/lib/helpers/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "address",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "chars",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "4"
                    }
                ],
                "returnType": "string | null",
                "jsdoctags": [
                    {
                        "name": "address",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "chars",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "4",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "aucShortTxHash",
                "file": "projects/applicature/components/src/lib/helpers/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "address",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "address",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "aucToBN",
                "file": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "val",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "BigNumber",
                "jsdoctags": [
                    {
                        "name": "val",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "aucToWei",
                "file": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "val",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "decimals",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "18"
                    },
                    {
                        "name": "toFixed",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "val",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "decimals",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "18",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "toFixed",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "html",
                "file": "projects/components-demo/src/app/modules/example-view/example-veiew.config.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Use this function as tag for template literals to enable vscodes exstension lit-html support.</p>\n",
                "args": [
                    {
                        "name": "templateStringsArray",
                        "type": "TemplateStringsArray",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "TemplateStringsArray",
                "jsdoctags": [
                    {
                        "name": "templateStringsArray",
                        "type": "TemplateStringsArray",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "initWalletServiceFactory",
                "file": "projects/demo/src/app/app.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Observable<void>",
                "jsdoctags": [
                    {
                        "name": "walletConnectService",
                        "type": "AucWalletConnectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "sortByDecorator",
                "file": "projects/components-demo/src/app/modules/example-view/components/doc-view/doc-view.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Sorts DocFathers by decorator -&gt; Input &gt; Output &gt; HostBinding &gt; other &gt; alphabetical.</p>\n",
                "args": [
                    {
                        "name": "docFather1",
                        "type": "DocFather",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "docFather2",
                        "type": "DocFather",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "decorator",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "\"Input\""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 675,
                            "end": 685,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "docFather1"
                        },
                        "type": "DocFather",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 669,
                            "end": 674,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The first element to compare.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 728,
                            "end": 738,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "docFather2"
                        },
                        "type": "DocFather",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 722,
                            "end": 727,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The second element to be compared with.</li>\n</ul>\n"
                    },
                    {
                        "name": {
                            "pos": 791,
                            "end": 800,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "decorator"
                        },
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "\"Input\"",
                        "tagName": {
                            "pos": 785,
                            "end": 790,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>The Decorator by which to sort in this iteration.</li>\n</ul>\n"
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "AsColorGroup",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "AS_COLOR_GROUP.BLUE | AS_COLOR_GROUP.GREEN | AS_COLOR_GROUP.GREY | AS_COLOR_GROUP.ORANGE | AS_COLOR_GROUP.RED | AS_COLOR_GROUP.WHITE",
                "file": "projects/applicature/styles/src/lib/colors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "AucAlertPosition",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "AUC_ALERT_POSITION.LEFT | AUC_ALERT_POSITION.RIGHT",
                "file": "projects/applicature/components/src/lib/alert/types/alert-position.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "AucBalanceAppearance",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "AUC_BALANCE_APPEARANCE.TRANSPARENT | AUC_BALANCE_APPEARANCE.TRANSLUCENT",
                "file": "projects/applicature/components/src/lib/account-balance/types/balance-appearance.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "AucButtonAppearance",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "AUC_BUTTON_APPEARANCE.FLAT | AUC_BUTTON_APPEARANCE.ICON | AUC_BUTTON_APPEARANCE.STROKED",
                "file": "projects/applicature/components/src/lib/button/types/button-appearance.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "AucDialogPosition",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "AUC_DIALOG_POSITIONS.BOTTOM | AUC_DIALOG_POSITIONS.LEFT | AUC_DIALOG_POSITIONS.RIGHT | AUC_DIALOG_POSITIONS.TOP | AUC_DIALOG_POSITIONS.TOP_LEFT | AUC_DIALOG_POSITIONS.TOP_RIGHT | AUC_DIALOG_POSITIONS.BOTTOM_LEFT | AUC_DIALOG_POSITIONS.BOTTOM_RIGHT",
                "file": "projects/applicature/components/src/lib/dialog/types/dialog-position.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "AucHorizontalPosition",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "AUC_POSITIONS.BEFORE | AUC_POSITIONS.AFTER",
                "file": "projects/applicature/components/src/lib/types/applicature-positions.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "AucIdenticonPosition",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "AUC_IDENTICON_POSITION.LEFT | AUC_IDENTICON_POSITION.RIGHT",
                "file": "projects/applicature/components/src/lib/directives/identicon/types/identicon-position.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "AucSortDirection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "AUC_SORT_DIRECTION.ASC | AUC_SORT_DIRECTION.DESC",
                "file": "projects/applicature/components/src/lib/types/sort-direction.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "AucTransactionStep",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "AUC_TRANSFER_STEPS.APPROVE | AUC_TRANSFER_STEPS.CONFIRM",
                "file": "projects/applicature/components/src/lib/modals/transfer-modal/types/transaction-step.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "AucValueType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "AUC_VALUE_TYPES.ARRAY | AUC_VALUE_TYPES.BLOB | AUC_VALUE_TYPES.BOOLEAN | AUC_VALUE_TYPES.FILE | AUC_VALUE_TYPES.FUNCTION | AUC_VALUE_TYPES.NUMBER | AUC_VALUE_TYPES.OBJECT | AUC_VALUE_TYPES.STRING",
                "file": "projects/applicature/components/src/lib/helpers/check-value-type.helper.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "AucVerticalPosition",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "AUC_POSITIONS.ABOVE | AUC_POSITIONS.BELOW",
                "file": "projects/applicature/components/src/lib/types/applicature-positions.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "AucWlcIcon",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "AUC_WLC_ICON.ACTIVE | AUC_WLC_ICON.ARROW_DOWN | AUC_WLC_ICON.ARROW_UP | AUC_WLC_ICON.CHECK | AUC_WLC_ICON.CHEVRON_DOWN | AUC_WLC_ICON.CHEVRON_UP | AUC_WLC_ICON.CLOSE | AUC_WLC_ICON.COPY | AUC_WLC_ICON.EXTERNAL_LINK | AUC_WLC_ICON.FAIL | AUC_WLC_ICON.MINUS | AUC_WLC_ICON.PLUS | AUC_WLC_ICON.RECENT | AUC_WLC_ICON.STAR | AUC_WLC_ICON.USER | AUC_WLC_ICON.WALLET | AUC_WLC_ICON.WALLET_CONNECT | AUC_WLC_ICON.WRONG | string",
                "file": "projects/applicature/components/src/lib/icon/types/wlc-icon.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>You can use supported icons from enum {@link AUC_WLC_ICON} or string;\nIf you want to use custom icon you need to provide url to the image as a string value.</p>\n",
                "kind": 186
            },
            {
                "name": "AucWrongNetworkAppearance",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "AUC_WRONG_NETWORK_APPEARANCE.DISCONNECT | AUC_WRONG_NETWORK_APPEARANCE.NONE | AUC_WRONG_NETWORK_APPEARANCE.SWITCH",
                "file": "projects/applicature/components/src/lib/modals/wrong-network-modal/types/wrong-network-appearance.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "ConnectWalletAppearance",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "AUC_CONNECT_WALLET_APPEARANCE.DEFAULT | AUC_CONNECT_WALLET_APPEARANCE.ICON | AUC_CONNECT_WALLET_APPEARANCE.BUTTON",
                "file": "projects/applicature/components/src/lib/connect-wallet/types/connect-wallet-appearance.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "DocFather",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "any",
                "file": "projects/components-demo/src/app/modules/example-view/components/doc-view/doc-view.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 130
            },
            {
                "name": "DocFather",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "any",
                "file": "projects/components-demo/src/app/modules/example-view/services/documentation-parser/documentation-parser.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 130
            },
            {
                "name": "DocFathers",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "any",
                "file": "projects/components-demo/src/app/modules/example-view/components/doc-view/doc-view.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 130
            },
            {
                "name": "DocGroupTitle",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "any",
                "file": "projects/components-demo/src/app/modules/example-view/components/doc-view/doc-view.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 130
            }
        ],
        "enumerations": [
            {
                "name": "AS_COLOR_GROUP",
                "childs": [
                    {
                        "name": "BLUE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "blue"
                    },
                    {
                        "name": "GREEN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "green"
                    },
                    {
                        "name": "GREY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "grey"
                    },
                    {
                        "name": "ORANGE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "orange"
                    },
                    {
                        "name": "RED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "red"
                    },
                    {
                        "name": "WHITE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "white"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/applicature/styles/src/lib/colors.ts"
            },
            {
                "name": "AUC_ALERT_POSITION",
                "childs": [
                    {
                        "name": "LEFT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "left"
                    },
                    {
                        "name": "RIGHT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "right"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/applicature/components/src/lib/alert/enums/alert-position.enum.ts"
            },
            {
                "name": "AUC_BALANCE_APPEARANCE",
                "childs": [
                    {
                        "name": "TRANSPARENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "transparent"
                    },
                    {
                        "name": "TRANSLUCENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "translucent"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/applicature/components/src/lib/account-balance/enums/balance-appearance.enum.ts"
            },
            {
                "name": "AUC_BUTTON_APPEARANCE",
                "childs": [
                    {
                        "name": "FLAT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "flat"
                    },
                    {
                        "name": "ICON",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "icon"
                    },
                    {
                        "name": "STROKED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "stroked"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/applicature/components/src/lib/button/enums/button-appearance.enum.ts"
            },
            {
                "name": "AUC_CHAIN_ID",
                "childs": [
                    {
                        "name": "ARBITRUM_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0xa4b1"
                    },
                    {
                        "name": "ARBITRUM_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0x66eeb"
                    },
                    {
                        "name": "ASTAR_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0x250"
                    },
                    {
                        "name": "ASTAR_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0x51"
                    },
                    {
                        "name": "AVALANCH_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0xa86a"
                    },
                    {
                        "name": "AVALANCH_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0xa869"
                    },
                    {
                        "name": "BSC_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0x38"
                    },
                    {
                        "name": "BSC_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0x61"
                    },
                    {
                        "name": "ETHEREUM_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0x1"
                    },
                    {
                        "name": "FANTOM_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0xfa"
                    },
                    {
                        "name": "FANTOM_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0xfa2"
                    },
                    {
                        "name": "GOERLI_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0x5"
                    },
                    {
                        "name": "KOVAN_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0x2a"
                    },
                    {
                        "name": "OPTIMISTIC_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0xa"
                    },
                    {
                        "name": "OPTIMISTIC_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0x45"
                    },
                    {
                        "name": "POLYGON_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0x89"
                    },
                    {
                        "name": "POLYGON_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0x13881"
                    },
                    {
                        "name": "RINKEBY_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0x4"
                    },
                    {
                        "name": "ROPSTEN_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0x3"
                    },
                    {
                        "name": "SHIDEN_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0x150"
                    },
                    {
                        "name": "SHIDEN_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0x51"
                    },
                    {
                        "name": "THETA_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0x169"
                    },
                    {
                        "name": "THETA_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0x16d"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/applicature/components/src/lib/enums/chainId.enum.ts"
            },
            {
                "name": "AUC_CHAIN_ID_NUM",
                "childs": [
                    {
                        "name": "ARBITRUM_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 42161
                    },
                    {
                        "name": "ARBITRUM_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 421611
                    },
                    {
                        "name": "ASTAR_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 592
                    },
                    {
                        "name": "ASTAR_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 81
                    },
                    {
                        "name": "AVALANCH_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 43114
                    },
                    {
                        "name": "AVALANCH_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 43113
                    },
                    {
                        "name": "BSC_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 56
                    },
                    {
                        "name": "BSC_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 97
                    },
                    {
                        "name": "ETHEREUM_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 1
                    },
                    {
                        "name": "FANTOM_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 250
                    },
                    {
                        "name": "FANTOM_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 4002
                    },
                    {
                        "name": "GOERLI_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 5
                    },
                    {
                        "name": "KOVAN_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 42
                    },
                    {
                        "name": "OPTIMISTIC_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 10
                    },
                    {
                        "name": "OPTIMISTIC_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 69
                    },
                    {
                        "name": "POLYGON_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 137
                    },
                    {
                        "name": "POLYGON_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 80001
                    },
                    {
                        "name": "RINKEBY_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 4
                    },
                    {
                        "name": "ROPSTEN_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 3
                    },
                    {
                        "name": "SHIDEN_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 336
                    },
                    {
                        "name": "SHIDEN_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 81
                    },
                    {
                        "name": "THETA_MAINNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 361
                    },
                    {
                        "name": "THETA_TESTNET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 365
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/applicature/components/src/lib/enums/chainId.enum.ts"
            },
            {
                "name": "AUC_CONNECT_WALLET_APPEARANCE",
                "childs": [
                    {
                        "name": "DEFAULT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "default"
                    },
                    {
                        "name": "ICON",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "icon"
                    },
                    {
                        "name": "BUTTON",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "button"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/applicature/components/src/lib/connect-wallet/enums/connect-wallet-appearance.enum.ts"
            },
            {
                "name": "AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS",
                "childs": [
                    {
                        "name": "WIDTH",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "width"
                    },
                    {
                        "name": "HEIGHT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "height"
                    },
                    {
                        "name": "MIN_WIDTH",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "minWidth"
                    },
                    {
                        "name": "MIN_HEIGHT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "minHeight"
                    },
                    {
                        "name": "MAX_WIDTH",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "maxWidth"
                    },
                    {
                        "name": "MAX_HEIGHT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "maxHeight"
                    },
                    {
                        "name": "CLASSES",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "classes"
                    },
                    {
                        "name": "POSITION",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "position"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/applicature/components/src/lib/dialog/enums/customize-dialog-config-keys.enum.ts"
            },
            {
                "name": "AUC_DIALOG_POSITIONS",
                "childs": [
                    {
                        "name": "BOTTOM",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bottom"
                    },
                    {
                        "name": "LEFT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "left"
                    },
                    {
                        "name": "RIGHT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "right"
                    },
                    {
                        "name": "TOP",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "top"
                    },
                    {
                        "name": "TOP_LEFT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "top-left"
                    },
                    {
                        "name": "TOP_RIGHT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "top-right"
                    },
                    {
                        "name": "BOTTOM_LEFT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bottom-left"
                    },
                    {
                        "name": "BOTTOM_RIGHT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bottom-right"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/applicature/components/src/lib/dialog/enums/dialog-positions.enum.ts"
            },
            {
                "name": "AUC_ETH_EVENTS",
                "childs": [
                    {
                        "name": "ACCOUNT_CHANGED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "accountsChanged"
                    },
                    {
                        "name": "CHAIN_CHANGED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "chainChanged"
                    },
                    {
                        "name": "CONNECT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "connect"
                    },
                    {
                        "name": "DISCONNECT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "disconnect"
                    },
                    {
                        "name": "MESSAGE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "message"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/applicature/components/src/lib/enums/eth-events.ts"
            },
            {
                "name": "AUC_ETH_METHODS",
                "childs": [
                    {
                        "name": "SWITCH_ETHEREUM_CHAIN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wallet_switchEthereumChain"
                    },
                    {
                        "name": "ADD_ETHEREUM_CHAIN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wallet_addEthereumChain"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/applicature/components/src/lib/enums/eth-methods.ts"
            },
            {
                "name": "AUC_IDENTICON_POSITION",
                "childs": [
                    {
                        "name": "LEFT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "left"
                    },
                    {
                        "name": "RIGHT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "right"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/applicature/components/src/lib/directives/identicon/enums/identicon-position.enum.ts"
            },
            {
                "name": "AUC_METAMASK_CODES",
                "childs": [
                    {
                        "name": "CANT_SPECIFY_DEFAULT_CHAIN",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "UNRECOGNIZED_CHAIN_ID",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 4902
                    },
                    {
                        "name": "USER_REJECTED_REQUEST",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 4001
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/applicature/components/src/lib/enums/metamask-codes.enum.ts"
            },
            {
                "name": "AUC_POSITIONS",
                "childs": [
                    {
                        "name": "ABOVE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "above"
                    },
                    {
                        "name": "BELOW",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "below"
                    },
                    {
                        "name": "BEFORE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "before"
                    },
                    {
                        "name": "AFTER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "after"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/applicature/components/src/lib/enums/applicature-positions.enum.ts"
            },
            {
                "name": "AUC_SORT_DIRECTION",
                "childs": [
                    {
                        "name": "ASC",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "asc"
                    },
                    {
                        "name": "DESC",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "desc"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/applicature/components/src/lib/enums/sort-direction.enum.ts"
            },
            {
                "name": "AUC_TRANSACTION_STATUS",
                "childs": [
                    {
                        "name": "FAIL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "fail"
                    },
                    {
                        "name": "SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "success"
                    },
                    {
                        "name": "PENDING",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "pending"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/applicature/components/src/lib/enums/transaction-status.enum.ts"
            },
            {
                "name": "AUC_TRANSFER_STEPS",
                "childs": [
                    {
                        "name": "APPROVE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 1
                    },
                    {
                        "name": "CONFIRM",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 2
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/applicature/components/src/lib/modals/transfer-modal/enums/transfer-steps.enum.ts"
            },
            {
                "name": "AUC_VALUE_TYPES",
                "childs": [
                    {
                        "name": "ARRAY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Array"
                    },
                    {
                        "name": "BLOB",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Blob"
                    },
                    {
                        "name": "BOOLEAN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Boolean"
                    },
                    {
                        "name": "FILE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "File"
                    },
                    {
                        "name": "FUNCTION",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Function"
                    },
                    {
                        "name": "NUMBER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Number"
                    },
                    {
                        "name": "OBJECT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Object"
                    },
                    {
                        "name": "STRING",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "String"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/applicature/components/src/lib/helpers/check-value-type.helper.ts"
            },
            {
                "name": "AUC_WLC_ICON",
                "childs": [
                    {
                        "name": "ACTIVE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wcl-icon-active"
                    },
                    {
                        "name": "ARROW_DOWN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wcl-icon-arrow-down"
                    },
                    {
                        "name": "ARROW_UP",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wcl-icon-arrow-up"
                    },
                    {
                        "name": "CHECK",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wcl-icon-check"
                    },
                    {
                        "name": "CHEVRON_DOWN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wcl-icon-chevron-down"
                    },
                    {
                        "name": "CHEVRON_UP",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wcl-icon-chevron-up"
                    },
                    {
                        "name": "CLOSE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wcl-icon-close"
                    },
                    {
                        "name": "COPY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wcl-icon-copy"
                    },
                    {
                        "name": "EXTERNAL_LINK",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wcl-icon-external-link"
                    },
                    {
                        "name": "FAIL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wcl-icon-fail"
                    },
                    {
                        "name": "MINUS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wcl-icon-minus"
                    },
                    {
                        "name": "PLUS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wcl-icon-plus"
                    },
                    {
                        "name": "RECENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wcl-icon-recent"
                    },
                    {
                        "name": "STAR",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wcl-icon-star"
                    },
                    {
                        "name": "USER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wcl-icon-user"
                    },
                    {
                        "name": "WALLET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wcl-icon-wallet"
                    },
                    {
                        "name": "WALLET_CONNECT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wcl-icon-wallet-connect"
                    },
                    {
                        "name": "WRONG",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "wcl-icon-wrong"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Supported font icons</p>\n",
                "file": "projects/applicature/components/src/lib/icon/enums/wlc-icon.enum.ts"
            },
            {
                "name": "AUC_WRONG_NETWORK_APPEARANCE",
                "childs": [
                    {
                        "name": "DISCONNECT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "disconnect"
                    },
                    {
                        "name": "SWITCH",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "switch"
                    },
                    {
                        "name": "NONE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "none"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/applicature/components/src/lib/modals/wrong-network-modal/enums/wrong-network-appearance.enum.ts"
            }
        ],
        "groupedVariables": {
            "projects/applicature/styles/src/lib/colors.ts": [
                {
                    "name": "AsColors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/styles/src/lib/colors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\n  [AS_COLOR_GROUP.BLUE]: {\n    base: '#4678F0',\n    hover: '#608BF2',\n    light: '#8CABF6',\n    dark: '#3F67C7',\n    text: '#FFFFFF',\n    border: '#4678F0',\n    borderHover: '#608BF2',\n    borderFocus: '#3F67C7',\n  },\n  [AS_COLOR_GROUP.RED]: {\n    base: '#E84142',\n    hover: '#EA5C5E',\n    light: '#F0898B',\n    dark: '#C03B3C',\n    text: '#FFFFFF',\n    border: '#E84142',\n    borderHover: '#EA5C5E',\n    borderFocus: '#C03B3C',\n  },\n  [AS_COLOR_GROUP.GREEN]: {\n    base: '#37CA34',\n    hover: '#6BD66B',\n    light: '#94E194',\n    dark: '#33A830',\n    text: '#FFFFFF',\n    border: '#37CA34',\n    borderHover: '#6BD66B',\n    borderFocus: '#33A830',\n  },\n  [AS_COLOR_GROUP.ORANGE]: {\n    base: '#F09643',\n    hover: '#F2A45B',\n    light: '#F6BE8A',\n    dark: '#C77F3C',\n    text: '#FFFFFF',\n    border: '#F09643',\n    borderHover: '#F2A45B',\n    borderFocus: '#C77F3C',\n  },\n  [AS_COLOR_GROUP.GREY]: {\n    base: '#6D87AC',\n    hover: '#BBC7D9',\n    light: '#DDE3EC',\n    dark: '#5F7492',\n    text: '#FFFFFF',\n    border: '#6D87AC',\n    borderHover: '#BBC7D9',\n    borderFocus: '#5F7492',\n  },\n  [AS_COLOR_GROUP.WHITE]: {\n    base: '#FFFFFF',\n    hover: '#FFFFFF',\n    light: '#FFFFFF',\n    dark: '#FFFFFF',\n    text: '#222222',\n    border: '#FFFFFF',\n    borderHover: '#DDE3EC',\n    borderFocus: '#608BF2',\n  },\n}"
                }
            ],
            "projects/applicature/components/src/lib/services/wallet-connect/wallet-connect.service.ts": [
                {
                    "name": "AUC_CONNECTED_WALLET_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/lib/services/wallet-connect/wallet-connect.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'AUC_CONNECTED_WALLET_NAME'"
                }
            ],
            "projects/applicature/components/src/lib/transactions/services/transaction/transaction.service.ts": [
                {
                    "name": "AUC_ETHERSCAN_INTERVAL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/lib/transactions/services/transaction/transaction.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "10000"
                },
                {
                    "name": "AUC_ETHERSCAN_TRANSACTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/lib/transactions/services/transaction/transaction.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'AUC_ETHERSCAN_TRANSACTIONS'"
                }
            ],
            "projects/applicature/components/src/lib/constants/block-explorer-api-url.constant.ts": [
                {
                    "name": "AucBlockExplorerApiUrl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/lib/constants/block-explorer-api-url.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\n  [AUC_CHAIN_ID.ARBITRUM_MAINNET]: 'https://api.arbiscan.io/api',\n  [AUC_CHAIN_ID.ARBITRUM_TESTNET]: 'https://api-testnet.arbiscan.io/api',\n  [AUC_CHAIN_ID.OPTIMISTIC_MAINNET]: 'https://api-optimistic.etherscan.io/api',\n  [AUC_CHAIN_ID.OPTIMISTIC_TESTNET]: 'https://api-kovan-optimistic.etherscan.io/api',\n  [AUC_CHAIN_ID.BSC_MAINNET]: 'https://api.bscscan.com/api',\n  [AUC_CHAIN_ID.BSC_TESTNET]: 'https://api-testnet.bscscan.com/api',\n  [AUC_CHAIN_ID.POLYGON_MAINNET]: 'https://api.polygonscan.com/api',\n  [AUC_CHAIN_ID.POLYGON_TESTNET]: 'https://api-testnet.polygonscan.com/api',\n  [AUC_CHAIN_ID.ASTAR_MAINNET]: null, // Doesn't support\n  [AUC_CHAIN_ID.ASTAR_TESTNET]: null,  // Doesn't support\n  [AUC_CHAIN_ID.SHIDEN_MAINNET]: null,  // Doesn't support\n  [AUC_CHAIN_ID.SHIDEN_TESTNET]: null,  // Doesn't support\n  [AUC_CHAIN_ID.AVALANCH_MAINNET]: 'https://api.snowtrace.io/api',\n  [AUC_CHAIN_ID.AVALANCH_TESTNET]: 'https://api-testnet.snowtrace.io/api',\n  [AUC_CHAIN_ID.FANTOM_MAINNET]: 'https://api.ftmscan.com/api',\n  [AUC_CHAIN_ID.FANTOM_TESTNET]: 'https://api-testnet.ftmscan.com/api',\n  [AUC_CHAIN_ID.THETA_MAINNET]: null,  // Doesn't support\n  [AUC_CHAIN_ID.THETA_TESTNET]: null,  // Doesn't support\n  [AUC_CHAIN_ID.ETHEREUM_MAINNET]: 'https://api.etherscan.io/api',\n  [AUC_CHAIN_ID.RINKEBY_TESTNET]: 'https://api-rinkeby.etherscan.io/api',\n  [AUC_CHAIN_ID.ROPSTEN_TESTNET]: 'https://api-ropsten.etherscan.io/api',\n  [AUC_CHAIN_ID.GOERLI_TESTNET]: 'https://api-goerli.etherscan.io/api',\n  [AUC_CHAIN_ID.KOVAN_TESTNET]: 'https://api-kovan.etherscan.io/api',\n}"
                }
            ],
            "projects/applicature/components/src/lib/constants/block-eplorer-urls.constant.ts": [
                {
                    "name": "AucBlockExplorerUrls",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/lib/constants/block-eplorer-urls.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\n  [AUC_CHAIN_ID.ARBITRUM_MAINNET]: [ 'https://arbiscan.io' ],\n  [AUC_CHAIN_ID.ARBITRUM_TESTNET]: [ 'https://rinkeby-explorer.arbitrum.io/#/' ],\n  [AUC_CHAIN_ID.OPTIMISTIC_MAINNET]: [ 'https://optimistic.etherscan.io' ],\n  [AUC_CHAIN_ID.OPTIMISTIC_TESTNET]: [ 'https://kovan-optimistic.etherscan.io' ],\n  [AUC_CHAIN_ID.BSC_MAINNET]: [ 'https://bscscan.com' ],\n  [AUC_CHAIN_ID.BSC_TESTNET]: [ 'https://testnet.bscscan.com' ],\n  [AUC_CHAIN_ID.POLYGON_MAINNET]: [ 'https://explorer.matic.network' ],\n  [AUC_CHAIN_ID.POLYGON_TESTNET]: [ 'https://mumbai.polygonscan.com' ],\n  [AUC_CHAIN_ID.ASTAR_MAINNET]: [ 'https://astar.subscan.io' ],\n  [AUC_CHAIN_ID.ASTAR_TESTNET]: [ 'https://shibuya.subscan.io' ],\n  [AUC_CHAIN_ID.SHIDEN_MAINNET]: [ 'https://shiden.subscan.io' ],\n  [AUC_CHAIN_ID.SHIDEN_TESTNET]: [ 'https://shibuya.subscan.io' ],\n  [AUC_CHAIN_ID.AVALANCH_MAINNET]: [ 'https://snowtrace.io' ],\n  [AUC_CHAIN_ID.AVALANCH_TESTNET]: [ 'https://testnet.snowtrace.io' ],\n  [AUC_CHAIN_ID.FANTOM_MAINNET]: [ 'https://ftmscan.com' ],\n  [AUC_CHAIN_ID.FANTOM_TESTNET]: [ 'https://testnet.ftmscan.com' ],\n  [AUC_CHAIN_ID.THETA_MAINNET]: [ 'https://explorer.thetatoken.org' ],\n  [AUC_CHAIN_ID.THETA_TESTNET]: [ 'https://testnet-explorer.thetatoken.org' ],\n  [AUC_CHAIN_ID.ETHEREUM_MAINNET]: [ 'https://etherscan.io' ],\n  [AUC_CHAIN_ID.RINKEBY_TESTNET]: [ 'https://rinkeby.etherscan.io' ],\n  [AUC_CHAIN_ID.ROPSTEN_TESTNET]: [ 'https://ropsten.etherscan.io' ],\n  [AUC_CHAIN_ID.GOERLI_TESTNET]: [ 'https://goerli.etherscan.io' ],\n  [AUC_CHAIN_ID.KOVAN_TESTNET]: [ 'https://kovan.etherscan.io' ]\n}"
                }
            ],
            "projects/applicature/components/src/lib/helpers/bignumber.ts": [
                {
                    "name": "aucBn10PowLookupMap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<number, BigNumber>",
                    "defaultValue": "new Map<number, BigNumber>([])"
                }
            ],
            "projects/applicature/components/src/lib/constants/chain-name.constant.ts": [
                {
                    "name": "AucChainName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/lib/constants/chain-name.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\n  [AUC_CHAIN_ID.ARBITRUM_MAINNET]: 'Arbitrum Mainnet',\n  [AUC_CHAIN_ID.ARBITRUM_TESTNET]: 'Arbitrum Rinkeby Testnet',\n  [AUC_CHAIN_ID.ASTAR_MAINNET]: 'Astar Network Mainnet',\n  [AUC_CHAIN_ID.ASTAR_TESTNET]: 'Shibuya Testnet',\n  [AUC_CHAIN_ID.AVALANCH_MAINNET]: 'Avalanche Network Mainnet',\n  [AUC_CHAIN_ID.AVALANCH_TESTNET]: 'Fuji Testnet',\n  [AUC_CHAIN_ID.BSC_MAINNET]: 'Binance Smart Chain Mainnet',\n  [AUC_CHAIN_ID.BSC_TESTNET]: 'Binance Smart Chain Testnet',\n  [AUC_CHAIN_ID.ETHEREUM_MAINNET]: 'Ethereum Mainnet',\n  [AUC_CHAIN_ID.FANTOM_MAINNET]: 'Fantom Opera',\n  [AUC_CHAIN_ID.FANTOM_TESTNET]: 'Fantom Testnet',\n  [AUC_CHAIN_ID.GOERLI_TESTNET]: 'Goreli Testnet',\n  [AUC_CHAIN_ID.KOVAN_TESTNET]: 'Kovan Testnet',\n  [AUC_CHAIN_ID.OPTIMISTIC_MAINNET]: 'Optimistic Ethereum Mainnet',\n  [AUC_CHAIN_ID.OPTIMISTIC_TESTNET]: 'Optimistic Ethereum Kovan Testnet',\n  [AUC_CHAIN_ID.POLYGON_MAINNET]: 'Polygon Mainnet',\n  [AUC_CHAIN_ID.POLYGON_TESTNET]: 'Mumbai Testnet',\n  [AUC_CHAIN_ID.RINKEBY_TESTNET]: 'Rinkeby Testnet',\n  [AUC_CHAIN_ID.SHIDEN_MAINNET]: 'Shiden Network Mainnet',\n  [AUC_CHAIN_ID.SHIDEN_TESTNET]: 'Shibuya Testnet',\n  [AUC_CHAIN_ID.THETA_MAINNET]: 'Theta Mainnet',\n  [AUC_CHAIN_ID.THETA_TESTNET]: 'Theta Testnet',\n}"
                }
            ],
            "projects/applicature/components/src/lib/constants/native-currencies.constant.ts": [
                {
                    "name": "AucNativeCurrencies",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/lib/constants/native-currencies.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\n  [AUC_CHAIN_ID.ARBITRUM_MAINNET]: {\n    name: 'ETH',\n    symbol: 'eth',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.ARBITRUM_TESTNET]: {\n    name: 'ETH',\n    symbol: 'eth',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.ASTAR_MAINNET]: {\n    name: 'ASTR',\n    symbol: 'astr',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.ASTAR_TESTNET]: {\n    name: 'SBY',\n    symbol: 'sby',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.AVALANCH_MAINNET]: {\n    name: 'AVAX',\n    symbol: 'avax',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.AVALANCH_TESTNET]: {\n    name: 'AVAX',\n    symbol: 'avax',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.BSC_MAINNET]: {\n    name: 'BNB',\n    symbol: 'bnb',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.BSC_TESTNET]: {\n    name: 'BNB',\n    symbol: 'bnb',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.ETHEREUM_MAINNET]: {\n    name: 'ETH',\n    symbol: 'eth',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.FANTOM_MAINNET]: {\n    name: 'FTM',\n    symbol: 'ftm',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.FANTOM_TESTNET]: {\n    name: 'FTM',\n    symbol: 'ftm',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.GOERLI_TESTNET]: {\n    name: 'ETH',\n    symbol: 'eth',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.KOVAN_TESTNET]: {\n    name: 'ETH',\n    symbol: 'eth',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.OPTIMISTIC_MAINNET]: {\n    name: 'ETH',\n    symbol: 'eth',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.OPTIMISTIC_TESTNET]: {\n    name: 'ETH',\n    symbol: 'eth',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.POLYGON_MAINNET]: {\n    name: 'MATIC',\n    symbol: 'matic',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.POLYGON_TESTNET]: {\n    name: 'MATIC',\n    symbol: 'matic',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.RINKEBY_TESTNET]: {\n    name: 'ETH',\n    symbol: 'eth',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.ROPSTEN_TESTNET]: {\n    name: 'ETH',\n    symbol: 'eth',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.SHIDEN_MAINNET]: {\n    name: 'SDN',\n    symbol: 'sdn',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.SHIDEN_TESTNET]: {\n    name: 'SBY',\n    symbol: 'sby',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.THETA_MAINNET]: {\n    name: 'TFUEL',\n    symbol: 'tfuel',\n    decimals: 18,\n  },\n  [AUC_CHAIN_ID.THETA_TESTNET]: {\n    name: 'TFUEL',\n    symbol: 'tfuel',\n    decimals: 18,\n  }\n}"
                }
            ],
            "projects/applicature/components/src/lib/constants/rpc-urls.constant.ts": [
                {
                    "name": "AucRpcUrls",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/lib/constants/rpc-urls.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\n  [AUC_CHAIN_ID.ARBITRUM_MAINNET]: [ 'https://arb1.arbitrum.io/rpc' ],\n  [AUC_CHAIN_ID.ARBITRUM_TESTNET]: [ 'https://rinkeby.arbitrum.io/rpc' ],\n  [AUC_CHAIN_ID.OPTIMISTIC_MAINNET]: [ 'https://mainnet.optimism.io' ],\n  [AUC_CHAIN_ID.OPTIMISTIC_TESTNET]: [ 'https://kovan.optimism.io' ],\n  [AUC_CHAIN_ID.BSC_MAINNET]: [ 'https://bsc-dataseed.binance.org' ],\n  [AUC_CHAIN_ID.BSC_TESTNET]: [ 'https://data-seed-prebsc-1-s1.binance.org:8545' ],\n  [AUC_CHAIN_ID.POLYGON_MAINNET]: [ 'https://rpc-mainnet.maticvigil.com' ],\n  [AUC_CHAIN_ID.POLYGON_TESTNET]: [ 'https://rpc-mumbai.maticvigil.com' ],\n  [AUC_CHAIN_ID.ASTAR_MAINNET]: [ 'https://rpc.astar.network:8545' ],\n  [AUC_CHAIN_ID.ASTAR_TESTNET]: [ 'https://rpc.shibuya.astar.network:8545' ],\n  [AUC_CHAIN_ID.SHIDEN_MAINNET]: [ 'https://rpc.shiden.astar.network:8545' ],\n  [AUC_CHAIN_ID.SHIDEN_TESTNET]: [ 'https://rpc.shibuya.astar.network:8545' ],\n  [AUC_CHAIN_ID.AVALANCH_MAINNET]: [ 'https://api.avax.network/ext/bc/C/rpc' ],\n  [AUC_CHAIN_ID.AVALANCH_TESTNET]: [ 'https://api.avax-test.network/ext/bc/C/rpc' ],\n  [AUC_CHAIN_ID.FANTOM_MAINNET]: [ 'https://rpc.ftm.tools' ],\n  [AUC_CHAIN_ID.FANTOM_TESTNET]: [ 'https://rpc.testnet.fantom.network' ],\n  [AUC_CHAIN_ID.THETA_MAINNET]: [ 'https://eth-rpc-api.thetatoken.org/rpc' ],\n  [AUC_CHAIN_ID.THETA_TESTNET]: [ 'https://eth-rpc-api-testnet.thetatoken.org/rpc' ]\n}"
                }
            ],
            "projects/applicature/components/src/lib/alert/alert.stories.ts": [
                {
                    "name": "Blue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Green",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Grey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Orange",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Red",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<AucAlertComponent>",
                    "defaultValue": "(args: AucAlertComponent) => ({\n  props: args,\n})"
                },
                {
                    "name": "White",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "projects/components-demo/src/app/modules/examples/btn-example.ts": [
                {
                    "name": "buttonDemo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/components-demo/src/app/modules/examples/btn-example.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateStringsArray",
                    "defaultValue": "html`<auc-button label=\"Button\"></auc-button>`"
                },
                {
                    "name": "testCode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/components-demo/src/app/modules/examples/btn-example.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "defaultValue": "`import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\nimport { buttonDemo } from '../examples/btn-example';\n\n\n@Component({\n  selector: 'demo-button-demo',\n  templateUrl: './button-demo.component.html',\n  styleUrls: [ './button-demo.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ButtonDemoComponent {\n  public buttonDemo: any = buttonDemo;\n  public testCode: any = testCode;\n\n  public onClick(evt): void {\n    console.log('Btn example clicked: ', evt);\n  }\n\n}\n`"
                }
            ],
            "projects/applicature/components/src/lib/modals/modals.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/lib/modals/modals.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  AucAccountModalComponent,\n  AucTransferModalComponent,\n  AucWrongNetworkModalComponent\n]"
                }
            ],
            "projects/components-demo/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/components-demo/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/components-demo/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/demo/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/demo/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/demo/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/applicature/components/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/applicature/styles/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/styles/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/styles/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/applicature/components/src/lib/directives/directives.module.ts": [
                {
                    "name": "directives",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/lib/directives/directives.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  AucContentBodyDirective,\n  AucCustomClassDirective,\n  AucIdenticonDirective,\n  AucSetStylePropsDirective,\n  AucTriggerDirective\n]"
                }
            ],
            "projects/components-demo/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/components-demo/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "projects/components-demo/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/components-demo/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "projects/demo/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/demo/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "projects/demo/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/demo/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "projects/applicature/components/src/lib/input/input.component.ts": [
                {
                    "name": "INPUT_FIELD_VALUE_ACCESSOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/applicature/components/src/lib/input/input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AucInputComponent),\n  multi: true,\n}"
                }
            ],
            "projects/demo/src/app/app.module.ts": [
                {
                    "name": "networks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/demo/src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  eth: 1,\n  kovanTestnet: AUC_CHAIN_ID_NUM.KOVAN_TESTNET,\n  // ...\n}"
                },
                {
                    "name": "supportedNetworks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/demo/src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucNetworkOption[]",
                    "defaultValue": "[\n  {\n    icon: 'assets/svg/network/eth.svg',\n    name: 'Ethereum',\n    chainId: AUC_CHAIN_ID.RINKEBY_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.RINKEBY_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.RINKEBY_TESTNET][0],\n    isActive: false\n  },\n  {\n    icon: 'assets/svg/network/eth.svg',\n    name: 'Kovan',\n    chainId: AUC_CHAIN_ID.KOVAN_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.KOVAN_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.KOVAN_TESTNET][0],\n    isActive: false\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'BSC',\n    chainId: '0x61',\n    symbol: 'BNB',\n    blockExplorerUrl: 'https://testnet.bscscan.com',\n    blockExplorerApiUrl: 'https://api-testnet.bscscan.com/api',\n    isActive: false,\n    chainParams: { // Custom Chain params\n      chainId: '0x61',\n      chainName: 'Binance Smart Chain Testnet',\n      nativeCurrency: {\n        name: 'BNB',\n        symbol: 'bnb',\n        decimals: 18\n      },\n      rpcUrls: [ 'https://data-seed-prebsc-1-s1.binance.org:8545' ],\n      blockExplorerUrls: [ 'https://testnet.bscscan.com' ]\n    }\n  },\n  {\n    icon: 'assets/svg/network/avax.svg',\n    name: 'Avalanche',\n    chainId: AUC_CHAIN_ID.AVALANCH_TESTNET,\n    isActive: false,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.AVALANCH_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.AVALANCH_TESTNET][0],\n    blockExplorerApiUrl: AucBlockExplorerApiUrl[AUC_CHAIN_ID.AVALANCH_TESTNET],\n    chainParams: { // modify existing Chain params\n      ...(aucGetChainParams(AUC_CHAIN_ID.AVALANCH_TESTNET)),\n      chainName: 'Avalanche TestNet'\n    }\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Arbitrum',\n    chainId: AUC_CHAIN_ID.ARBITRUM_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.ARBITRUM_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.ARBITRUM_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Astar',\n    chainId: AUC_CHAIN_ID.ASTAR_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.ASTAR_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.ASTAR_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Fantom',\n    chainId: AUC_CHAIN_ID.FANTOM_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.FANTOM_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.FANTOM_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Goreli',\n    chainId: AUC_CHAIN_ID.GOERLI_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.GOERLI_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.GOERLI_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Optimistic',\n    chainId: AUC_CHAIN_ID.OPTIMISTIC_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.OPTIMISTIC_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.OPTIMISTIC_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Polygon',\n    chainId: AUC_CHAIN_ID.POLYGON_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.POLYGON_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.POLYGON_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Ropsten',\n    chainId: AUC_CHAIN_ID.ROPSTEN_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.ROPSTEN_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.ROPSTEN_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Shiden',\n    chainId: AUC_CHAIN_ID.SHIDEN_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.SHIDEN_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.SHIDEN_TESTNET][0],\n    isActive: false,\n  },\n  {\n    icon: 'assets/svg/network/bsc.svg',\n    name: 'Theta',\n    chainId: AUC_CHAIN_ID.THETA_TESTNET,\n    symbol: AucNativeCurrencies[AUC_CHAIN_ID.THETA_TESTNET].name,\n    blockExplorerUrl: AucBlockExplorerUrls[AUC_CHAIN_ID.THETA_TESTNET][0],\n    isActive: false,\n  }\n]"
                },
                {
                    "name": "wallets",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/demo/src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<WalletModule | WalletInitOptions>",
                    "defaultValue": "[\n  {\n    walletName: 'metamask',\n    preferred: true\n  },\n  {\n    walletName: 'walletConnect',\n    infuraKey: '${YOUR_INFURA_KEY}',\n    preferred: true\n  }\n]"
                }
            ],
            "projects/demo/src/app/examples/example-table/example-table.component.ts": [
                {
                    "name": "TableData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/demo/src/app/examples/example-table/example-table.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AucTableRow[]",
                    "defaultValue": "[\n  {\n    action: {\n      value: 'Withdraw',\n      icon: 'assets/svg/icons/minus-red.svg'\n    },\n    tokens: [\n      {\n        value: '1.240123',\n        icon: 'assets/svg/network/eth.svg',\n        withBg: true\n      },\n      {\n        value: '5.2k',\n        icon: 'assets/svg/coin/usdt.svg',\n        withBg: true\n      }\n    ],\n    value: {\n      value: '$10.4k',\n    },\n    time: {\n      value: 'about 6 hours ago ↗',\n      link: 'https://www.google.com/'\n    }\n  },\n  {\n    action: {\n      value: 'Withdraw',\n      icon: 'assets/svg/icons/minus-red.svg'\n    },\n    tokens: [\n      {\n        value: '1.0...01234',\n        icon: 'assets/svg/network/eth.svg',\n        withBg: true\n      }\n    ],\n    value: {\n      value: '$4.2k',\n    },\n    time: {\n      value: 'about 6 hours ago ↗',\n      link: 'https://www.google.com/'\n    }\n  },\n  {\n    action: {\n      value: 'Invest',\n      icon: 'assets/svg/icons/plus-green.svg'\n    },\n    tokens: [\n      {\n        value: '500',\n        icon: 'assets/svg/coin/usdt.svg',\n        withBg: true\n      }\n    ],\n    value: {\n      value: '$500',\n    },\n    time: {\n      value: 'about 6 hours ago ↗',\n      link: 'https://www.google.com/'\n    }\n  },\n  {\n    action: {\n      value: 'Invest',\n      icon: 'assets/svg/icons/plus-green.svg'\n    },\n    tokens: [\n      {\n        value: '1.240123',\n        icon: 'assets/svg/network/eth.svg',\n        withBg: true\n      },\n      {\n        value: '5.2k',\n        icon: 'assets/svg/coin/usdt.svg',\n        withBg: true\n      }\n    ],\n    value: {\n      value: '$10.4k',\n    },\n    time: {\n      value: 'about 6 hours ago ↗',\n      link: 'https://www.google.com/'\n    }\n  },\n]"
                }
            ],
            "projects/components-demo/src/app/modules/example-view/example-view.component.ts": [
                {
                    "name": "window",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/components-demo/src/app/modules/example-view/example-view.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": ""
                }
            ]
        },
        "groupedFunctions": {
            "projects/applicature/components/src/lib/helpers/check-value-type.helper.ts": [
                {
                    "name": "aucCheckValueType",
                    "file": "projects/applicature/components/src/lib/helpers/check-value-type.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>It&#39;s better alternative for typeof.</p>\n",
                    "args": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "type",
                            "type": "AucValueType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "boolean",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 488,
                                "end": 493,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 482,
                                "end": 487,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>value to check type.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 527,
                                "end": 531,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "originalKeywordKind": 151,
                                "escapedText": "type"
                            },
                            "type": "AucValueType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 521,
                                "end": 526,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>expected type of Value;</li>\n</ul>\n"
                        }
                    ]
                }
            ],
            "projects/applicature/components/src/lib/helpers/convert-chainId-to-hex.helper.ts": [
                {
                    "name": "aucConvertChainIdToHex",
                    "file": "projects/applicature/components/src/lib/helpers/convert-chainId-to-hex.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>This method uses for converting chainId as a number to 0x-prefixed hexadecimal string</p>\n<p>{@see AUC_CHAIN_ID} - Already converted Chains;</p>\n",
                    "args": [
                        {
                            "name": "chainId",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 163,
                                "end": 170,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "chainId"
                            },
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 157,
                                "end": 162,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>this is chainId as number.\nYou can use {@link AUC_CHAIN_ID_NUM} or your specific value.</li>\n</ul>\n"
                        }
                    ]
                }
            ],
            "projects/applicature/components/src/lib/helpers/bignumber.ts": [
                {
                    "name": "aucFromWei",
                    "file": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "val",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "decimals",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "18"
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "decimals",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "18",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "aucNormalize",
                    "file": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "decimals",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "2"
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "decimals",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "2",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "aucNormalizeBalance",
                    "file": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "networkId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "digits",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "3"
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1268,
                                "end": 1277,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "networkId"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1262,
                                "end": 1267,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>connected network id.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 1312,
                                "end": 1317,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1306,
                                "end": 1311,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>converted value.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 1347,
                                "end": 1353,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "digits"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "3",
                            "tagName": {
                                "pos": 1341,
                                "end": 1346,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>significant digits.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "aucNormalizeBN",
                    "file": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "decimals",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "2"
                        }
                    ],
                    "returnType": "BigNumber",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "decimals",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "2",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "aucPow10",
                    "file": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "decimals",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "BigNumber",
                    "jsdoctags": [
                        {
                            "name": "decimals",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "aucToBN",
                    "file": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "val",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "BigNumber",
                    "jsdoctags": [
                        {
                            "name": "val",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "aucToWei",
                    "file": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "val",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "decimals",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "18"
                        },
                        {
                            "name": "toFixed",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "val",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "decimals",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "18",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "toFixed",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/applicature/components/src/lib/helpers/helpers.ts": [
                {
                    "name": "aucGenerateJazzicon",
                    "file": "projects/applicature/components/src/lib/helpers/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "address",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "diameter",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "20"
                        }
                    ],
                    "returnType": "HTMLDivElement | null",
                    "jsdoctags": [
                        {
                            "name": "address",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "diameter",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "20",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "aucIsAddress",
                    "file": "projects/applicature/components/src/lib/helpers/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string | ",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "aucIsTxHash",
                    "file": "projects/applicature/components/src/lib/helpers/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "address",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "boolean",
                    "jsdoctags": [
                        {
                            "name": "address",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "aucShortAddress",
                    "file": "projects/applicature/components/src/lib/helpers/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "address",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "chars",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "4"
                        }
                    ],
                    "returnType": "string | null",
                    "jsdoctags": [
                        {
                            "name": "address",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "chars",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "4",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "aucShortTxHash",
                    "file": "projects/applicature/components/src/lib/helpers/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "address",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "address",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/applicature/components/src/lib/helpers/get-chain-params.helper.ts": [
                {
                    "name": "aucGetChainParams",
                    "file": "projects/applicature/components/src/lib/helpers/get-chain-params.helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>This method is uses for generating network config which is uses for adding new network to the Metamask.</p>\n",
                    "args": [
                        {
                            "name": "chainId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        }
                    ],
                    "returnType": "AucEthChainParams",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 274,
                                "end": 281,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "chainId"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "pos": 268,
                                "end": 273,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>0x-prefixed hexadecimal string;</li>\n</ul>\n"
                        }
                    ]
                }
            ],
            "projects/components-demo/src/app/modules/example-view/example-veiew.config.ts": [
                {
                    "name": "html",
                    "file": "projects/components-demo/src/app/modules/example-view/example-veiew.config.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Use this function as tag for template literals to enable vscodes exstension lit-html support.</p>\n",
                    "args": [
                        {
                            "name": "templateStringsArray",
                            "type": "TemplateStringsArray",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "TemplateStringsArray",
                    "jsdoctags": [
                        {
                            "name": "templateStringsArray",
                            "type": "TemplateStringsArray",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/demo/src/app/app.module.ts": [
                {
                    "name": "initWalletServiceFactory",
                    "file": "projects/demo/src/app/app.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "walletConnectService",
                            "type": "AucWalletConnectService",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Observable<void>",
                    "jsdoctags": [
                        {
                            "name": "walletConnectService",
                            "type": "AucWalletConnectService",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/components-demo/src/app/modules/example-view/components/doc-view/doc-view.component.ts": [
                {
                    "name": "sortByDecorator",
                    "file": "projects/components-demo/src/app/modules/example-view/components/doc-view/doc-view.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Sorts DocFathers by decorator -&gt; Input &gt; Output &gt; HostBinding &gt; other &gt; alphabetical.</p>\n",
                    "args": [
                        {
                            "name": "docFather1",
                            "type": "DocFather",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "docFather2",
                            "type": "DocFather",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "decorator",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "\"Input\""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 675,
                                "end": 685,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "docFather1"
                            },
                            "type": "DocFather",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 669,
                                "end": 674,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The first element to compare.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 728,
                                "end": 738,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "docFather2"
                            },
                            "type": "DocFather",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 722,
                                "end": 727,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The second element to be compared with.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 791,
                                "end": 800,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "decorator"
                            },
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "\"Input\"",
                            "tagName": {
                                "pos": 785,
                                "end": 790,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The Decorator by which to sort in this iteration.</li>\n</ul>\n"
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "projects/applicature/styles/src/lib/colors.ts": [
                {
                    "name": "AS_COLOR_GROUP",
                    "childs": [
                        {
                            "name": "BLUE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "blue"
                        },
                        {
                            "name": "GREEN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "green"
                        },
                        {
                            "name": "GREY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "grey"
                        },
                        {
                            "name": "ORANGE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "orange"
                        },
                        {
                            "name": "RED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "red"
                        },
                        {
                            "name": "WHITE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "white"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/applicature/styles/src/lib/colors.ts"
                }
            ],
            "projects/applicature/components/src/lib/alert/enums/alert-position.enum.ts": [
                {
                    "name": "AUC_ALERT_POSITION",
                    "childs": [
                        {
                            "name": "LEFT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "left"
                        },
                        {
                            "name": "RIGHT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "right"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/applicature/components/src/lib/alert/enums/alert-position.enum.ts"
                }
            ],
            "projects/applicature/components/src/lib/account-balance/enums/balance-appearance.enum.ts": [
                {
                    "name": "AUC_BALANCE_APPEARANCE",
                    "childs": [
                        {
                            "name": "TRANSPARENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "transparent"
                        },
                        {
                            "name": "TRANSLUCENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "translucent"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/applicature/components/src/lib/account-balance/enums/balance-appearance.enum.ts"
                }
            ],
            "projects/applicature/components/src/lib/button/enums/button-appearance.enum.ts": [
                {
                    "name": "AUC_BUTTON_APPEARANCE",
                    "childs": [
                        {
                            "name": "FLAT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "flat"
                        },
                        {
                            "name": "ICON",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "icon"
                        },
                        {
                            "name": "STROKED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "stroked"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/applicature/components/src/lib/button/enums/button-appearance.enum.ts"
                }
            ],
            "projects/applicature/components/src/lib/enums/chainId.enum.ts": [
                {
                    "name": "AUC_CHAIN_ID",
                    "childs": [
                        {
                            "name": "ARBITRUM_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0xa4b1"
                        },
                        {
                            "name": "ARBITRUM_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0x66eeb"
                        },
                        {
                            "name": "ASTAR_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0x250"
                        },
                        {
                            "name": "ASTAR_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0x51"
                        },
                        {
                            "name": "AVALANCH_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0xa86a"
                        },
                        {
                            "name": "AVALANCH_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0xa869"
                        },
                        {
                            "name": "BSC_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0x38"
                        },
                        {
                            "name": "BSC_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0x61"
                        },
                        {
                            "name": "ETHEREUM_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0x1"
                        },
                        {
                            "name": "FANTOM_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0xfa"
                        },
                        {
                            "name": "FANTOM_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0xfa2"
                        },
                        {
                            "name": "GOERLI_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0x5"
                        },
                        {
                            "name": "KOVAN_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0x2a"
                        },
                        {
                            "name": "OPTIMISTIC_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0xa"
                        },
                        {
                            "name": "OPTIMISTIC_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0x45"
                        },
                        {
                            "name": "POLYGON_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0x89"
                        },
                        {
                            "name": "POLYGON_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0x13881"
                        },
                        {
                            "name": "RINKEBY_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0x4"
                        },
                        {
                            "name": "ROPSTEN_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0x3"
                        },
                        {
                            "name": "SHIDEN_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0x150"
                        },
                        {
                            "name": "SHIDEN_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0x51"
                        },
                        {
                            "name": "THETA_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0x169"
                        },
                        {
                            "name": "THETA_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0x16d"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/applicature/components/src/lib/enums/chainId.enum.ts"
                },
                {
                    "name": "AUC_CHAIN_ID_NUM",
                    "childs": [
                        {
                            "name": "ARBITRUM_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 42161
                        },
                        {
                            "name": "ARBITRUM_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 421611
                        },
                        {
                            "name": "ASTAR_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 592
                        },
                        {
                            "name": "ASTAR_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 81
                        },
                        {
                            "name": "AVALANCH_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 43114
                        },
                        {
                            "name": "AVALANCH_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 43113
                        },
                        {
                            "name": "BSC_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 56
                        },
                        {
                            "name": "BSC_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 97
                        },
                        {
                            "name": "ETHEREUM_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 1
                        },
                        {
                            "name": "FANTOM_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 250
                        },
                        {
                            "name": "FANTOM_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 4002
                        },
                        {
                            "name": "GOERLI_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 5
                        },
                        {
                            "name": "KOVAN_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 42
                        },
                        {
                            "name": "OPTIMISTIC_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 10
                        },
                        {
                            "name": "OPTIMISTIC_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 69
                        },
                        {
                            "name": "POLYGON_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 137
                        },
                        {
                            "name": "POLYGON_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 80001
                        },
                        {
                            "name": "RINKEBY_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 4
                        },
                        {
                            "name": "ROPSTEN_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 3
                        },
                        {
                            "name": "SHIDEN_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 336
                        },
                        {
                            "name": "SHIDEN_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 81
                        },
                        {
                            "name": "THETA_MAINNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 361
                        },
                        {
                            "name": "THETA_TESTNET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 365
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/applicature/components/src/lib/enums/chainId.enum.ts"
                }
            ],
            "projects/applicature/components/src/lib/connect-wallet/enums/connect-wallet-appearance.enum.ts": [
                {
                    "name": "AUC_CONNECT_WALLET_APPEARANCE",
                    "childs": [
                        {
                            "name": "DEFAULT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "default"
                        },
                        {
                            "name": "ICON",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "icon"
                        },
                        {
                            "name": "BUTTON",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "button"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/applicature/components/src/lib/connect-wallet/enums/connect-wallet-appearance.enum.ts"
                }
            ],
            "projects/applicature/components/src/lib/dialog/enums/customize-dialog-config-keys.enum.ts": [
                {
                    "name": "AUC_CUSTOMIZE_DIALOG_CONFIG_KEYS",
                    "childs": [
                        {
                            "name": "WIDTH",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "width"
                        },
                        {
                            "name": "HEIGHT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "height"
                        },
                        {
                            "name": "MIN_WIDTH",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "minWidth"
                        },
                        {
                            "name": "MIN_HEIGHT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "minHeight"
                        },
                        {
                            "name": "MAX_WIDTH",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "maxWidth"
                        },
                        {
                            "name": "MAX_HEIGHT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "maxHeight"
                        },
                        {
                            "name": "CLASSES",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "classes"
                        },
                        {
                            "name": "POSITION",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "position"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/applicature/components/src/lib/dialog/enums/customize-dialog-config-keys.enum.ts"
                }
            ],
            "projects/applicature/components/src/lib/dialog/enums/dialog-positions.enum.ts": [
                {
                    "name": "AUC_DIALOG_POSITIONS",
                    "childs": [
                        {
                            "name": "BOTTOM",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bottom"
                        },
                        {
                            "name": "LEFT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "left"
                        },
                        {
                            "name": "RIGHT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "right"
                        },
                        {
                            "name": "TOP",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "top"
                        },
                        {
                            "name": "TOP_LEFT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "top-left"
                        },
                        {
                            "name": "TOP_RIGHT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "top-right"
                        },
                        {
                            "name": "BOTTOM_LEFT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bottom-left"
                        },
                        {
                            "name": "BOTTOM_RIGHT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bottom-right"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/applicature/components/src/lib/dialog/enums/dialog-positions.enum.ts"
                }
            ],
            "projects/applicature/components/src/lib/enums/eth-events.ts": [
                {
                    "name": "AUC_ETH_EVENTS",
                    "childs": [
                        {
                            "name": "ACCOUNT_CHANGED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "accountsChanged"
                        },
                        {
                            "name": "CHAIN_CHANGED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "chainChanged"
                        },
                        {
                            "name": "CONNECT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "connect"
                        },
                        {
                            "name": "DISCONNECT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "disconnect"
                        },
                        {
                            "name": "MESSAGE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "message"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/applicature/components/src/lib/enums/eth-events.ts"
                }
            ],
            "projects/applicature/components/src/lib/enums/eth-methods.ts": [
                {
                    "name": "AUC_ETH_METHODS",
                    "childs": [
                        {
                            "name": "SWITCH_ETHEREUM_CHAIN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wallet_switchEthereumChain"
                        },
                        {
                            "name": "ADD_ETHEREUM_CHAIN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wallet_addEthereumChain"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/applicature/components/src/lib/enums/eth-methods.ts"
                }
            ],
            "projects/applicature/components/src/lib/directives/identicon/enums/identicon-position.enum.ts": [
                {
                    "name": "AUC_IDENTICON_POSITION",
                    "childs": [
                        {
                            "name": "LEFT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "left"
                        },
                        {
                            "name": "RIGHT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "right"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/applicature/components/src/lib/directives/identicon/enums/identicon-position.enum.ts"
                }
            ],
            "projects/applicature/components/src/lib/enums/metamask-codes.enum.ts": [
                {
                    "name": "AUC_METAMASK_CODES",
                    "childs": [
                        {
                            "name": "CANT_SPECIFY_DEFAULT_CHAIN",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "UNRECOGNIZED_CHAIN_ID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 4902
                        },
                        {
                            "name": "USER_REJECTED_REQUEST",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 4001
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/applicature/components/src/lib/enums/metamask-codes.enum.ts"
                }
            ],
            "projects/applicature/components/src/lib/enums/applicature-positions.enum.ts": [
                {
                    "name": "AUC_POSITIONS",
                    "childs": [
                        {
                            "name": "ABOVE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "above"
                        },
                        {
                            "name": "BELOW",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "below"
                        },
                        {
                            "name": "BEFORE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "before"
                        },
                        {
                            "name": "AFTER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "after"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/applicature/components/src/lib/enums/applicature-positions.enum.ts"
                }
            ],
            "projects/applicature/components/src/lib/enums/sort-direction.enum.ts": [
                {
                    "name": "AUC_SORT_DIRECTION",
                    "childs": [
                        {
                            "name": "ASC",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "asc"
                        },
                        {
                            "name": "DESC",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "desc"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/applicature/components/src/lib/enums/sort-direction.enum.ts"
                }
            ],
            "projects/applicature/components/src/lib/enums/transaction-status.enum.ts": [
                {
                    "name": "AUC_TRANSACTION_STATUS",
                    "childs": [
                        {
                            "name": "FAIL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "fail"
                        },
                        {
                            "name": "SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "success"
                        },
                        {
                            "name": "PENDING",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "pending"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/applicature/components/src/lib/enums/transaction-status.enum.ts"
                }
            ],
            "projects/applicature/components/src/lib/modals/transfer-modal/enums/transfer-steps.enum.ts": [
                {
                    "name": "AUC_TRANSFER_STEPS",
                    "childs": [
                        {
                            "name": "APPROVE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 1
                        },
                        {
                            "name": "CONFIRM",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 2
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/applicature/components/src/lib/modals/transfer-modal/enums/transfer-steps.enum.ts"
                }
            ],
            "projects/applicature/components/src/lib/helpers/check-value-type.helper.ts": [
                {
                    "name": "AUC_VALUE_TYPES",
                    "childs": [
                        {
                            "name": "ARRAY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Array"
                        },
                        {
                            "name": "BLOB",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Blob"
                        },
                        {
                            "name": "BOOLEAN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Boolean"
                        },
                        {
                            "name": "FILE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "File"
                        },
                        {
                            "name": "FUNCTION",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Function"
                        },
                        {
                            "name": "NUMBER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Number"
                        },
                        {
                            "name": "OBJECT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Object"
                        },
                        {
                            "name": "STRING",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "String"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/applicature/components/src/lib/helpers/check-value-type.helper.ts"
                }
            ],
            "projects/applicature/components/src/lib/icon/enums/wlc-icon.enum.ts": [
                {
                    "name": "AUC_WLC_ICON",
                    "childs": [
                        {
                            "name": "ACTIVE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wcl-icon-active"
                        },
                        {
                            "name": "ARROW_DOWN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wcl-icon-arrow-down"
                        },
                        {
                            "name": "ARROW_UP",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wcl-icon-arrow-up"
                        },
                        {
                            "name": "CHECK",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wcl-icon-check"
                        },
                        {
                            "name": "CHEVRON_DOWN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wcl-icon-chevron-down"
                        },
                        {
                            "name": "CHEVRON_UP",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wcl-icon-chevron-up"
                        },
                        {
                            "name": "CLOSE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wcl-icon-close"
                        },
                        {
                            "name": "COPY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wcl-icon-copy"
                        },
                        {
                            "name": "EXTERNAL_LINK",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wcl-icon-external-link"
                        },
                        {
                            "name": "FAIL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wcl-icon-fail"
                        },
                        {
                            "name": "MINUS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wcl-icon-minus"
                        },
                        {
                            "name": "PLUS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wcl-icon-plus"
                        },
                        {
                            "name": "RECENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wcl-icon-recent"
                        },
                        {
                            "name": "STAR",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wcl-icon-star"
                        },
                        {
                            "name": "USER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wcl-icon-user"
                        },
                        {
                            "name": "WALLET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wcl-icon-wallet"
                        },
                        {
                            "name": "WALLET_CONNECT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wcl-icon-wallet-connect"
                        },
                        {
                            "name": "WRONG",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "wcl-icon-wrong"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Supported font icons</p>\n",
                    "file": "projects/applicature/components/src/lib/icon/enums/wlc-icon.enum.ts"
                }
            ],
            "projects/applicature/components/src/lib/modals/wrong-network-modal/enums/wrong-network-appearance.enum.ts": [
                {
                    "name": "AUC_WRONG_NETWORK_APPEARANCE",
                    "childs": [
                        {
                            "name": "DISCONNECT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "disconnect"
                        },
                        {
                            "name": "SWITCH",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "switch"
                        },
                        {
                            "name": "NONE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "none"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/applicature/components/src/lib/modals/wrong-network-modal/enums/wrong-network-appearance.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "projects/applicature/styles/src/lib/colors.ts": [
                {
                    "name": "AsColorGroup",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "AS_COLOR_GROUP.BLUE | AS_COLOR_GROUP.GREEN | AS_COLOR_GROUP.GREY | AS_COLOR_GROUP.ORANGE | AS_COLOR_GROUP.RED | AS_COLOR_GROUP.WHITE",
                    "file": "projects/applicature/styles/src/lib/colors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/applicature/components/src/lib/alert/types/alert-position.type.ts": [
                {
                    "name": "AucAlertPosition",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "AUC_ALERT_POSITION.LEFT | AUC_ALERT_POSITION.RIGHT",
                    "file": "projects/applicature/components/src/lib/alert/types/alert-position.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/applicature/components/src/lib/account-balance/types/balance-appearance.type.ts": [
                {
                    "name": "AucBalanceAppearance",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "AUC_BALANCE_APPEARANCE.TRANSPARENT | AUC_BALANCE_APPEARANCE.TRANSLUCENT",
                    "file": "projects/applicature/components/src/lib/account-balance/types/balance-appearance.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/applicature/components/src/lib/button/types/button-appearance.type.ts": [
                {
                    "name": "AucButtonAppearance",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "AUC_BUTTON_APPEARANCE.FLAT | AUC_BUTTON_APPEARANCE.ICON | AUC_BUTTON_APPEARANCE.STROKED",
                    "file": "projects/applicature/components/src/lib/button/types/button-appearance.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/applicature/components/src/lib/dialog/types/dialog-position.type.ts": [
                {
                    "name": "AucDialogPosition",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "AUC_DIALOG_POSITIONS.BOTTOM | AUC_DIALOG_POSITIONS.LEFT | AUC_DIALOG_POSITIONS.RIGHT | AUC_DIALOG_POSITIONS.TOP | AUC_DIALOG_POSITIONS.TOP_LEFT | AUC_DIALOG_POSITIONS.TOP_RIGHT | AUC_DIALOG_POSITIONS.BOTTOM_LEFT | AUC_DIALOG_POSITIONS.BOTTOM_RIGHT",
                    "file": "projects/applicature/components/src/lib/dialog/types/dialog-position.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/applicature/components/src/lib/types/applicature-positions.type.ts": [
                {
                    "name": "AucHorizontalPosition",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "AUC_POSITIONS.BEFORE | AUC_POSITIONS.AFTER",
                    "file": "projects/applicature/components/src/lib/types/applicature-positions.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "AucVerticalPosition",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "AUC_POSITIONS.ABOVE | AUC_POSITIONS.BELOW",
                    "file": "projects/applicature/components/src/lib/types/applicature-positions.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/applicature/components/src/lib/directives/identicon/types/identicon-position.type.ts": [
                {
                    "name": "AucIdenticonPosition",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "AUC_IDENTICON_POSITION.LEFT | AUC_IDENTICON_POSITION.RIGHT",
                    "file": "projects/applicature/components/src/lib/directives/identicon/types/identicon-position.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/applicature/components/src/lib/types/sort-direction.type.ts": [
                {
                    "name": "AucSortDirection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "AUC_SORT_DIRECTION.ASC | AUC_SORT_DIRECTION.DESC",
                    "file": "projects/applicature/components/src/lib/types/sort-direction.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/applicature/components/src/lib/modals/transfer-modal/types/transaction-step.type.ts": [
                {
                    "name": "AucTransactionStep",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "AUC_TRANSFER_STEPS.APPROVE | AUC_TRANSFER_STEPS.CONFIRM",
                    "file": "projects/applicature/components/src/lib/modals/transfer-modal/types/transaction-step.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/applicature/components/src/lib/helpers/check-value-type.helper.ts": [
                {
                    "name": "AucValueType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "AUC_VALUE_TYPES.ARRAY | AUC_VALUE_TYPES.BLOB | AUC_VALUE_TYPES.BOOLEAN | AUC_VALUE_TYPES.FILE | AUC_VALUE_TYPES.FUNCTION | AUC_VALUE_TYPES.NUMBER | AUC_VALUE_TYPES.OBJECT | AUC_VALUE_TYPES.STRING",
                    "file": "projects/applicature/components/src/lib/helpers/check-value-type.helper.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/applicature/components/src/lib/icon/types/wlc-icon.type.ts": [
                {
                    "name": "AucWlcIcon",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "AUC_WLC_ICON.ACTIVE | AUC_WLC_ICON.ARROW_DOWN | AUC_WLC_ICON.ARROW_UP | AUC_WLC_ICON.CHECK | AUC_WLC_ICON.CHEVRON_DOWN | AUC_WLC_ICON.CHEVRON_UP | AUC_WLC_ICON.CLOSE | AUC_WLC_ICON.COPY | AUC_WLC_ICON.EXTERNAL_LINK | AUC_WLC_ICON.FAIL | AUC_WLC_ICON.MINUS | AUC_WLC_ICON.PLUS | AUC_WLC_ICON.RECENT | AUC_WLC_ICON.STAR | AUC_WLC_ICON.USER | AUC_WLC_ICON.WALLET | AUC_WLC_ICON.WALLET_CONNECT | AUC_WLC_ICON.WRONG | string",
                    "file": "projects/applicature/components/src/lib/icon/types/wlc-icon.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>You can use supported icons from enum {@link AUC_WLC_ICON} or string;\nIf you want to use custom icon you need to provide url to the image as a string value.</p>\n",
                    "kind": 186
                }
            ],
            "projects/applicature/components/src/lib/modals/wrong-network-modal/types/wrong-network-appearance.type.ts": [
                {
                    "name": "AucWrongNetworkAppearance",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "AUC_WRONG_NETWORK_APPEARANCE.DISCONNECT | AUC_WRONG_NETWORK_APPEARANCE.NONE | AUC_WRONG_NETWORK_APPEARANCE.SWITCH",
                    "file": "projects/applicature/components/src/lib/modals/wrong-network-modal/types/wrong-network-appearance.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/applicature/components/src/lib/connect-wallet/types/connect-wallet-appearance.type.ts": [
                {
                    "name": "ConnectWalletAppearance",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "AUC_CONNECT_WALLET_APPEARANCE.DEFAULT | AUC_CONNECT_WALLET_APPEARANCE.ICON | AUC_CONNECT_WALLET_APPEARANCE.BUTTON",
                    "file": "projects/applicature/components/src/lib/connect-wallet/types/connect-wallet-appearance.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/components-demo/src/app/modules/example-view/components/doc-view/doc-view.component.ts": [
                {
                    "name": "DocFather",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "any",
                    "file": "projects/components-demo/src/app/modules/example-view/components/doc-view/doc-view.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 130
                },
                {
                    "name": "DocFathers",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "any",
                    "file": "projects/components-demo/src/app/modules/example-view/components/doc-view/doc-view.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 130
                },
                {
                    "name": "DocGroupTitle",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "any",
                    "file": "projects/components-demo/src/app/modules/example-view/components/doc-view/doc-view.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 130
                }
            ],
            "projects/components-demo/src/app/modules/example-view/services/documentation-parser/documentation-parser.service.ts": [
                {
                    "name": "DocFather",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "any",
                    "file": "projects/components-demo/src/app/modules/example-view/services/documentation-parser/documentation-parser.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 130
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "projects/components-demo/src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 12,
        "status": "low",
        "files": [
            {
                "filePath": "projects/applicature/components/src/lib/account-balance/account-balance.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucAccountBalanceComponent",
                "coveragePercent": 38,
                "coverageCount": "7/18",
                "status": "medium"
            },
            {
                "filePath": "projects/applicature/components/src/lib/account-balance/interfaces/account-balance-address-config.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucAccountBalanceAddressConfig",
                "coveragePercent": 80,
                "coverageCount": "4/5",
                "status": "very-good"
            },
            {
                "filePath": "projects/applicature/components/src/lib/account-button/account-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucAccountButtonComponent",
                "coveragePercent": 29,
                "coverageCount": "5/17",
                "status": "medium"
            },
            {
                "filePath": "projects/applicature/components/src/lib/account-button/interfaces/account-data.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucAccountData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/account-button/interfaces/account-option.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucAccountOption",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/alert/alert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucAlertComponent",
                "coveragePercent": 50,
                "coverageCount": "4/8",
                "status": "medium"
            },
            {
                "filePath": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Blue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Green",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Grey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Orange",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Red",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "White",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/avatar/avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucAvatarComponent",
                "coveragePercent": 22,
                "coverageCount": "2/9",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucButtonComponent",
                "coveragePercent": 71,
                "coverageCount": "15/21",
                "status": "good"
            },
            {
                "filePath": "projects/applicature/components/src/lib/connect-wallet/connect-wallet.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucConnectWalletComponent",
                "coveragePercent": 39,
                "coverageCount": "11/28",
                "status": "medium"
            },
            {
                "filePath": "projects/applicature/components/src/lib/constants/block-eplorer-urls.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AucBlockExplorerUrls",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/constants/block-explorer-api-url.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AucBlockExplorerApiUrl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/constants/chain-name.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AucChainName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/constants/native-currencies.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AucNativeCurrencies",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/constants/rpc-urls.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AucRpcUrls",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/copy-to-clipboard/copy-to-clipboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucCopyToClipboardComponent",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "projects/applicature/components/src/lib/dialog/dialog-config.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AucDialogConfig",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/dialog/dialog-injector.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AucDialogInjector",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/dialog/dialog-ref.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AucDialogRef",
                "coveragePercent": 57,
                "coverageCount": "4/7",
                "status": "good"
            },
            {
                "filePath": "projects/applicature/components/src/lib/dialog/dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/dialog/directives/customize-dialog/customize-dialog.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AucCustomizeDialogDirective",
                "coveragePercent": 28,
                "coverageCount": "2/7",
                "status": "medium"
            },
            {
                "filePath": "projects/applicature/components/src/lib/dialog/directives/insertion/insertion.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AucInsertionDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/dialog/interfaces/customize-dialog-config.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucCustomizeDialogConfig",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/dialog/interfaces/customize-dialog-overlay-config.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucCustomizeDialogOverlayConfigInterface",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/dialog/services/dialog/dialog.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AucDialogService",
                "coveragePercent": 16,
                "coverageCount": "1/6",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/directives/content-body/content-body.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AucContentBodyDirective",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/directives/custom-class/custom-class.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AucCustomClassDirective",
                "coveragePercent": 16,
                "coverageCount": "1/6",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/directives/directives.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "directives",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/directives/identicon/identicon.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AucIdenticonDirective",
                "coveragePercent": 28,
                "coverageCount": "2/7",
                "status": "medium"
            },
            {
                "filePath": "projects/applicature/components/src/lib/directives/set-style-props/interfaces/set-style-prop.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucSetStyleProp",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/directives/set-style-props/set-style-props.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AucSetStylePropsDirective",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/directives/trigger/trigger.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AucTriggerDirective",
                "coveragePercent": 20,
                "coverageCount": "2/10",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/dropdown-menu/directives/dropdown-menu/dropdown-menu.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AucDropdownMenuDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/dropdown-menu/dropdown-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucDropdownMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/dropdown-menu/interfaces/dropdown-config.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucDropdownConfig",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/dropdown-menu/interfaces/dropdown-position-styles.interace.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucDropdownPositionStyles",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "aucFromWei",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "aucNormalize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "aucNormalizeBalance",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "aucNormalizeBN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "aucPow10",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "aucToBN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "aucToWei",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/helpers/bignumber.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "aucBn10PowLookupMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/helpers/block-scroll-helper/block-scroll-helper.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AucBlockScrollHelperService",
                "coveragePercent": 75,
                "coverageCount": "3/4",
                "status": "good"
            },
            {
                "filePath": "projects/applicature/components/src/lib/helpers/check-value-type.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "aucCheckValueType",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/applicature/components/src/lib/helpers/convert-chainId-to-hex.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "aucConvertChainIdToHex",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/applicature/components/src/lib/helpers/get-chain-params.helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "aucGetChainParams",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/applicature/components/src/lib/helpers/helpers.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "aucGenerateJazzicon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/helpers/helpers.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "aucIsAddress",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/helpers/helpers.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "aucIsTxHash",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/helpers/helpers.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "aucShortAddress",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/helpers/helpers.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "aucShortTxHash",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucIconComponent",
                "coveragePercent": 40,
                "coverageCount": "2/5",
                "status": "medium"
            },
            {
                "filePath": "projects/applicature/components/src/lib/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucInputComponent",
                "coveragePercent": 42,
                "coverageCount": "11/26",
                "status": "medium"
            },
            {
                "filePath": "projects/applicature/components/src/lib/input/input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "INPUT_FIELD_VALUE_ACCESSOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/interfaces/ethereum.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucConnectInfo",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/interfaces/ethereum.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucEthChainParams",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/interfaces/ethereum.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucEthereum",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/interfaces/ethereum.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucProviderMessage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/interfaces/ethereum.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucProviderRpcError",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/interfaces/ethereum.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucRequestArguments",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/interfaces/etherscan-transaction.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucEtherscanTransaction",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/interfaces/etherscan-transaction.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucEtherscanTransactionLocalStorage",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/interfaces/etherscan-transaction.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucEtherscanTransactionResponse",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/interfaces/native-currency.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucNativeCurrency",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/interfaces/network-option.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucNetworkOption",
                "coveragePercent": 60,
                "coverageCount": "6/10",
                "status": "good"
            },
            {
                "filePath": "projects/applicature/components/src/lib/interfaces/position.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucPosition",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/interfaces/sort.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucSort",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/modals/account-modal/account-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucAccountModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/modals/account-modal/interfaces/account-modal.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucAccountModalData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/modals/modals.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/modals/transfer-modal/interfaces/transfer-modal-data.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucTransferModalData",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/modals/transfer-modal/transfer-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucTransferModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/modals/wrong-network-modal/interfaces/wrong-network-modal-data.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucWrongNetworkModalData",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/modals/wrong-network-modal/wrong-network-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucWrongNetworkModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/network-dropdown/network-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucNetworkDropdownComponent",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/network-dropdown/no-network-config/interfaces/no-network-config-dialog-data.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucNoNetworkConfigDialogDataI",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/network-dropdown/no-network-config/no-network-config.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucNoNetworkConfigComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/overlay/interfaces/overlay-customization-config.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucOverlayCustomizationConfig",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/overlay/overlay.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucOverlayComponent",
                "coveragePercent": 50,
                "coverageCount": "2/4",
                "status": "medium"
            },
            {
                "filePath": "projects/applicature/components/src/lib/pipes/short-address.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "AucShortAddressPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/progress-bar/progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucProgressBarComponent",
                "coveragePercent": 40,
                "coverageCount": "2/5",
                "status": "medium"
            },
            {
                "filePath": "projects/applicature/components/src/lib/ripple/directives/ripple/ripple.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AucRippleDirective",
                "coveragePercent": 12,
                "coverageCount": "1/8",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/services/wallet-connect/interfaces/connection-state.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucConnectionState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/services/wallet-connect/wallet-connect.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AucWalletConnectService",
                "coveragePercent": 13,
                "coverageCount": "3/23",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/services/wallet-connect/wallet-connect.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AUC_CONNECTED_WALLET_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/spinner/spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucSpinnerComponent",
                "coveragePercent": 60,
                "coverageCount": "3/5",
                "status": "good"
            },
            {
                "filePath": "projects/applicature/components/src/lib/table/interfaces/table.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucTableHeaderItem",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/table/interfaces/table.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucTableRow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/table/interfaces/table.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucTableRowItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucTableComponent",
                "coveragePercent": 54,
                "coverageCount": "6/11",
                "status": "good"
            },
            {
                "filePath": "projects/applicature/components/src/lib/transactions/components/transactions-history-modal/interfaces/recent-transaction-modal-data.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AucRecentTransactionsModalData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/transactions/components/transactions-history-modal/transactions-history-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucTransactionsHistoryModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/transactions/components/transactions-history/transactions-history.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucTransactionsHistoryComponent",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/transactions/components/transactions-list/transactions-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AucTransactionsListComponent",
                "coveragePercent": 66,
                "coverageCount": "2/3",
                "status": "good"
            },
            {
                "filePath": "projects/applicature/components/src/lib/transactions/services/transaction/transaction.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AucTransactionService",
                "coveragePercent": 12,
                "coverageCount": "2/16",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/transactions/services/transaction/transaction.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AUC_ETHERSCAN_INTERVAL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/lib/transactions/services/transaction/transaction.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AUC_ETHERSCAN_TRANSACTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/components/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/styles/src/lib/colors.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AsColorProperties",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/styles/src/lib/colors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AsColors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/styles/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/applicature/styles/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/components-demo/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/components-demo/src/app/modules/button-demo/button-demo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/components-demo/src/app/modules/example-view/components/doc-view/doc-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocViewComponent",
                "coveragePercent": 70,
                "coverageCount": "7/10",
                "status": "good"
            },
            {
                "filePath": "projects/components-demo/src/app/modules/example-view/components/doc-view/doc-view.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ComponentDoc",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/components-demo/src/app/modules/example-view/components/doc-view/doc-view.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "sortByDecorator",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/components-demo/src/app/modules/example-view/example-veiew.config.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "html",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/components-demo/src/app/modules/example-view/example-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleViewComponent",
                "coveragePercent": 70,
                "coverageCount": "7/10",
                "status": "good"
            },
            {
                "filePath": "projects/components-demo/src/app/modules/example-view/example-view.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "window",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/components-demo/src/app/modules/example-view/services/documentation-parser/documentation-parser.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DocumentationParserService",
                "coveragePercent": 57,
                "coverageCount": "4/7",
                "status": "good"
            },
            {
                "filePath": "projects/components-demo/src/app/modules/examples/btn-example.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "buttonDemo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/components-demo/src/app/modules/examples/btn-example.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testCode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/components-demo/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/components-demo/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/components-demo/src/polyfills.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Window",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/components-demo/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/components-demo/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/demo/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/demo/src/app/app.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "initWalletServiceFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/demo/src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "networks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/demo/src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "supportedNetworks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/demo/src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "wallets",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/demo/src/app/examples/example-account-balance/example-account-balance.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleAccountBalanceComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/demo/src/app/examples/example-dialogs/components/dialog-test/dialog-test.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogTestComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/demo/src/app/examples/example-dialogs/example-dialogs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleDialogsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/demo/src/app/examples/example-dropdown-menu/components/custom-dropdown-menu/custom-dropdown-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomDropdownMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/demo/src/app/examples/example-table/example-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/demo/src/app/examples/example-table/example-table.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TableData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/demo/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/demo/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/demo/src/polyfills.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Window",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/demo/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/demo/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}